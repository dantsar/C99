Terminals unused in grammar

    BREAK
    CASE
    CONTINUE
    DEFAULT
    DO
    ELSE
    ENUM
    FOR
    GOTO
    IF
    RETURN
    STRUCT
    SWITCH
    UNION
    WHILE
    _IMAGINARY


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: extern_declaration
    2                 | translation_unit extern_declaration

    3 extern_declaration: declaration

    4 declaration: declaration_specs ';'
    5            | declaration_specs init_decl_list ';'

    6 declaration_specs: declaration_spec
    7                  | declaration_specs declaration_spec

    8 declaration_spec: stg_class_spec
    9                 | type_spec
   10                 | type_qualif
   11                 | func_spec

   12 stg_class_spec: AUTO
   13               | STATIC
   14               | EXTERN
   15               | TYPEDEF
   16               | REGISTER

   17 type_spec: VOID
   18          | CHAR
   19          | SHORT
   20          | INT
   21          | LONG
   22          | FLOAT
   23          | DOUBLE
   24          | SIGNED
   25          | UNSIGNED
   26          | _BOOL
   27          | _COMPLEX

   28 type_qualif: CONST
   29            | RESTRICT
   30            | VOLATILE

   31 func_spec: INLINE

   32 type_qualif_list: type_qualif
   33                 | type_qualif_list type_qualif

   34 init_decl_list: init_decl
   35               | init_decl_list ',' init_decl

   36 init_decl: decl
   37          | decl '=' init

   38 init: assign_expr

   39 decl: direct_decl
   40     | pointer direct_decl

   41 direct_decl: IDENT
   42            | '(' decl ')'
   43            | direct_decl '[' constant ']'
   44            | direct_decl '[' ']'
   45            | direct_decl '(' param_type_list ')'
   46            | direct_decl '(' ident_list ')'
   47            | direct_decl '(' ')'

   48 pointer: '*'
   49        | '*' pointer
   50        | '*' type_qualif_list
   51        | '*' type_qualif_list pointer

   52 param_type_list: param_list
   53                | param_list ',' ELLIPSIS

   54 param_list: param_declaration
   55           | param_list ',' param_declaration

   56 param_declaration: declaration_specs decl
   57                  | declaration_specs
   58                  | declaration_specs abstract_decl

   59 abstract_decl: pointer
   60              | pointer direct_abstract_decl
   61              | direct_abstract_decl

   62 direct_abstract_decl: '(' abstract_decl ')'
   63                     | '[' ']'
   64                     | '[' constant ']'

   65 ident_list: IDENT
   66           | ident_list ',' IDENT

   67 expr: assign_expr
   68     | expr ',' assign_expr

   69 assign_expr: unary_expr '=' assign_expr
   70            | unary_expr PLUSEQ assign_expr
   71            | unary_expr MINUSEQ assign_expr
   72            | unary_expr TIMESEQ assign_expr
   73            | unary_expr DIVEQ assign_expr
   74            | unary_expr MODEQ assign_expr
   75            | unary_expr SHLEQ assign_expr
   76            | unary_expr SHREQ assign_expr
   77            | unary_expr ANDEQ assign_expr
   78            | unary_expr XOREQ assign_expr
   79            | unary_expr OREQ assign_expr
   80            | cond_expr

   81 unary_expr: postfix_expr
   82           | PLUSPLUS unary_expr
   83           | MINUSMINUS unary_expr
   84           | SIZEOF unary_expr
   85           | SIZEOF '(' unary_expr ')'
   86           | '&' cast_expr
   87           | '*' cast_expr
   88           | '+' cast_expr
   89           | '-' cast_expr
   90           | '~' cast_expr
   91           | '!' cast_expr

   92 cond_expr: arith_expr
   93          | arith_expr '?' expr ':' cond_expr

   94 arith_expr: arith_expr '+' arith_expr
   95           | arith_expr '-' arith_expr
   96           | arith_expr '*' arith_expr
   97           | arith_expr '|' arith_expr
   98           | arith_expr '^' arith_expr
   99           | arith_expr '&' arith_expr
  100           | arith_expr '%' arith_expr
  101           | arith_expr '/' arith_expr
  102           | arith_expr SHR arith_expr
  103           | arith_expr SHL arith_expr
  104           | arith_expr '<' arith_expr
  105           | arith_expr '>' arith_expr
  106           | arith_expr LTEQ arith_expr
  107           | arith_expr GTEQ arith_expr
  108           | arith_expr EQEQ arith_expr
  109           | arith_expr NOTEQ arith_expr
  110           | arith_expr LOGAND arith_expr
  111           | arith_expr LOGOR arith_expr
  112           | arith_expr PLUSPLUS
  113           | arith_expr MINUSMINUS
  114           | '(' arith_expr ')'
  115           | cast_expr

  116 cast_expr: unary_expr

  117 postfix_expr: prim_expr
  118             | postfix_expr '[' expr ']'
  119             | postfix_expr '.' IDENT
  120             | postfix_expr INDSEL IDENT
  121             | postfix_expr '(' ')'
  122             | postfix_expr '(' expr ')'

  123 prim_expr: IDENT
  124          | NUMBER
  125          | CHARLIT
  126          | STRING

  127 constant: NUMBER
  128         | CHARLIT


Terminals, with rules where they appear

    $end (0) 0
    '!' <c> (33) 91
    '%' <c> (37) 100
    '&' <c> (38) 86 99
    '(' <c> (40) 42 45 46 47 62 85 114 121 122
    ')' <c> (41) 42 45 46 47 62 85 114 121 122
    '*' <c> (42) 48 49 50 51 87 96
    '+' <c> (43) 88 94
    ',' <c> (44) 35 53 55 66 68
    '-' <c> (45) 89 95
    '.' <c> (46) 119
    '/' <c> (47) 101
    ':' <c> (58) 93
    ';' (59) 4 5
    '<' <c> (60) 104
    '=' <c> (61) 37 69
    '>' <c> (62) 105
    '?' <c> (63) 93
    '[' <c> (91) 43 44 63 64 118
    ']' <c> (93) 43 44 63 64 118
    '^' <c> (94) 98
    '|' <c> (124) 97
    '~' <c> (126) 90
    error (256)
    IDENT <ident> (258) 41 65 66 119 120 123
    CHARLIT <charlit> (259) 125 128
    STRING <str> (260) 126
    NUMBER <num> (261) 124 127
    INDSEL <c> (262) 120
    PLUSPLUS <c> (263) 82 112
    MINUSMINUS <c> (264) 83 113
    SHL <c> (265) 103
    SHR <c> (266) 102
    LTEQ <c> (267) 106
    GTEQ <c> (268) 107
    EQEQ <c> (269) 108
    NOTEQ <c> (270) 109
    LOGAND <c> (271) 110
    LOGOR <c> (272) 111
    ELLIPSIS (273) 53
    TIMESEQ <c> (274) 72
    DIVEQ <c> (275) 73
    MODEQ <c> (276) 74
    PLUSEQ <c> (277) 70
    MINUSEQ <c> (278) 71
    SHLEQ <c> (279) 75
    SHREQ <c> (280) 76
    ANDEQ <c> (281) 77
    OREQ <c> (282) 79
    XOREQ <c> (283) 78
    AUTO (284) 12
    BREAK (285)
    CASE (286)
    CHAR (287) 18
    CONST (288) 28
    CONTINUE (289)
    DEFAULT (290)
    DO (291)
    DOUBLE (292) 23
    ELSE (293)
    ENUM (294)
    EXTERN (295) 14
    FLOAT (296) 22
    FOR (297)
    GOTO (298)
    IF (299)
    INLINE (300) 31
    INT (301) 20
    LONG (302) 21
    REGISTER (303) 16
    RESTRICT (304) 29
    RETURN (305)
    SHORT (306) 19
    SIGNED (307) 24
    SIZEOF (308) 84 85
    STATIC (309) 13
    STRUCT (310)
    SWITCH (311)
    TYPEDEF (312) 15
    UNION (313)
    UNSIGNED (314) 25
    VOID (315) 17
    VOLATILE (316) 30
    WHILE (317)
    _BOOL (318) 26
    _COMPLEX (319) 27
    _IMAGINARY (320)


Nonterminals, with rules where they appear

    $accept (88)
        on left: 0
    translation_unit <astnode_p> (89)
        on left: 1 2
        on right: 0 2
    extern_declaration <astnode_p> (90)
        on left: 3
        on right: 1 2
    declaration <astnode_p> (91)
        on left: 4 5
        on right: 3
    declaration_specs <astnode_p> (92)
        on left: 6 7
        on right: 4 5 7 56 57 58
    declaration_spec <astnode_p> (93)
        on left: 8 9 10 11
        on right: 6 7
    stg_class_spec <astnode_p> (94)
        on left: 12 13 14 15 16
        on right: 8
    type_spec <astnode_p> (95)
        on left: 17 18 19 20 21 22 23 24 25 26 27
        on right: 9
    type_qualif <astnode_p> (96)
        on left: 28 29 30
        on right: 10 32 33
    func_spec <astnode_p> (97)
        on left: 31
        on right: 11
    type_qualif_list (98)
        on left: 32 33
        on right: 33 50 51
    init_decl_list <astnode_p> (99)
        on left: 34 35
        on right: 5 35
    init_decl <astnode_p> (100)
        on left: 36 37
        on right: 34 35
    init (101)
        on left: 38
        on right: 37
    decl <astnode_p> (102)
        on left: 39 40
        on right: 36 37 42 56
    direct_decl <astnode_p> (103)
        on left: 41 42 43 44 45 46 47
        on right: 39 40 43 44 45 46 47
    pointer <astnode_p> (104)
        on left: 48 49 50 51
        on right: 40 49 51 59 60
    param_type_list <astnode_p> (105)
        on left: 52 53
        on right: 45
    param_list <astnode_p> (106)
        on left: 54 55
        on right: 52 53 55
    param_declaration <astnode_p> (107)
        on left: 56 57 58
        on right: 54 55
    abstract_decl <astnode_p> (108)
        on left: 59 60 61
        on right: 58 62
    direct_abstract_decl <astnode_p> (109)
        on left: 62 63 64
        on right: 60 61
    ident_list <astnode_p> (110)
        on left: 65 66
        on right: 46 66
    expr <astnode_p> (111)
        on left: 67 68
        on right: 68 93 118 122
    assign_expr <astnode_p> (112)
        on left: 69 70 71 72 73 74 75 76 77 78 79 80
        on right: 38 67 68 69 70 71 72 73 74 75 76 77 78 79
    unary_expr <astnode_p> (113)
        on left: 81 82 83 84 85 86 87 88 89 90 91
        on right: 69 70 71 72 73 74 75 76 77 78 79 82 83 84 85 116
    cond_expr <astnode_p> (114)
        on left: 92 93
        on right: 80 93
    arith_expr <astnode_p> (115)
        on left: 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115
        on right: 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114
    cast_expr <astnode_p> (116)
        on left: 116
        on right: 86 87 88 89 90 91 115
    postfix_expr <astnode_p> (117)
        on left: 117 118 119 120 121 122
        on right: 81 118 119 120 121 122
    prim_expr <astnode_p> (118)
        on left: 123 124 125 126
        on right: 117
    constant <astnode_p> (119)
        on left: 127 128
        on right: 43 64


State 0

    0 $accept: . translation_unit $end

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    UNSIGNED  shift, and go to state 16
    VOID      shift, and go to state 17
    VOLATILE  shift, and go to state 18
    _BOOL     shift, and go to state 19
    _COMPLEX  shift, and go to state 20

    translation_unit    go to state 21
    extern_declaration  go to state 22
    declaration         go to state 23
    declaration_specs   go to state 24
    declaration_spec    go to state 25
    stg_class_spec      go to state 26
    type_spec           go to state 27
    type_qualif         go to state 28
    func_spec           go to state 29


State 1

   12 stg_class_spec: AUTO .

    $default  reduce using rule 12 (stg_class_spec)


State 2

   18 type_spec: CHAR .

    $default  reduce using rule 18 (type_spec)


State 3

   28 type_qualif: CONST .

    $default  reduce using rule 28 (type_qualif)


State 4

   23 type_spec: DOUBLE .

    $default  reduce using rule 23 (type_spec)


State 5

   14 stg_class_spec: EXTERN .

    $default  reduce using rule 14 (stg_class_spec)


State 6

   22 type_spec: FLOAT .

    $default  reduce using rule 22 (type_spec)


State 7

   31 func_spec: INLINE .

    $default  reduce using rule 31 (func_spec)


State 8

   20 type_spec: INT .

    $default  reduce using rule 20 (type_spec)


State 9

   21 type_spec: LONG .

    $default  reduce using rule 21 (type_spec)


State 10

   16 stg_class_spec: REGISTER .

    $default  reduce using rule 16 (stg_class_spec)


State 11

   29 type_qualif: RESTRICT .

    $default  reduce using rule 29 (type_qualif)


State 12

   19 type_spec: SHORT .

    $default  reduce using rule 19 (type_spec)


State 13

   24 type_spec: SIGNED .

    $default  reduce using rule 24 (type_spec)


State 14

   13 stg_class_spec: STATIC .

    $default  reduce using rule 13 (stg_class_spec)


State 15

   15 stg_class_spec: TYPEDEF .

    $default  reduce using rule 15 (stg_class_spec)


State 16

   25 type_spec: UNSIGNED .

    $default  reduce using rule 25 (type_spec)


State 17

   17 type_spec: VOID .

    $default  reduce using rule 17 (type_spec)


State 18

   30 type_qualif: VOLATILE .

    $default  reduce using rule 30 (type_qualif)


State 19

   26 type_spec: _BOOL .

    $default  reduce using rule 26 (type_spec)


State 20

   27 type_spec: _COMPLEX .

    $default  reduce using rule 27 (type_spec)


State 21

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . extern_declaration

    $end      shift, and go to state 30
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    UNSIGNED  shift, and go to state 16
    VOID      shift, and go to state 17
    VOLATILE  shift, and go to state 18
    _BOOL     shift, and go to state 19
    _COMPLEX  shift, and go to state 20

    extern_declaration  go to state 31
    declaration         go to state 23
    declaration_specs   go to state 24
    declaration_spec    go to state 25
    stg_class_spec      go to state 26
    type_spec           go to state 27
    type_qualif         go to state 28
    func_spec           go to state 29


State 22

    1 translation_unit: extern_declaration .

    $default  reduce using rule 1 (translation_unit)


State 23

    3 extern_declaration: declaration .

    $default  reduce using rule 3 (extern_declaration)


State 24

    4 declaration: declaration_specs . ';'
    5            | declaration_specs . init_decl_list ';'
    7 declaration_specs: declaration_specs . declaration_spec

    IDENT     shift, and go to state 32
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    UNSIGNED  shift, and go to state 16
    VOID      shift, and go to state 17
    VOLATILE  shift, and go to state 18
    _BOOL     shift, and go to state 19
    _COMPLEX  shift, and go to state 20
    '*'       shift, and go to state 33
    '('       shift, and go to state 34
    ';'       shift, and go to state 35

    declaration_spec  go to state 36
    stg_class_spec    go to state 26
    type_spec         go to state 27
    type_qualif       go to state 28
    func_spec         go to state 29
    init_decl_list    go to state 37
    init_decl         go to state 38
    decl              go to state 39
    direct_decl       go to state 40
    pointer           go to state 41


State 25

    6 declaration_specs: declaration_spec .

    $default  reduce using rule 6 (declaration_specs)


State 26

    8 declaration_spec: stg_class_spec .

    $default  reduce using rule 8 (declaration_spec)


State 27

    9 declaration_spec: type_spec .

    $default  reduce using rule 9 (declaration_spec)


State 28

   10 declaration_spec: type_qualif .

    $default  reduce using rule 10 (declaration_spec)


State 29

   11 declaration_spec: func_spec .

    $default  reduce using rule 11 (declaration_spec)


State 30

    0 $accept: translation_unit $end .

    $default  accept


State 31

    2 translation_unit: translation_unit extern_declaration .

    $default  reduce using rule 2 (translation_unit)


State 32

   41 direct_decl: IDENT .

    $default  reduce using rule 41 (direct_decl)


State 33

   48 pointer: '*' .
   49        | '*' . pointer
   50        | '*' . type_qualif_list
   51        | '*' . type_qualif_list pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 18
    '*'       shift, and go to state 33

    $default  reduce using rule 48 (pointer)

    type_qualif       go to state 42
    type_qualif_list  go to state 43
    pointer           go to state 44


State 34

   42 direct_decl: '(' . decl ')'

    IDENT  shift, and go to state 32
    '*'    shift, and go to state 33
    '('    shift, and go to state 34

    decl         go to state 45
    direct_decl  go to state 40
    pointer      go to state 41


State 35

    4 declaration: declaration_specs ';' .

    $default  reduce using rule 4 (declaration)


State 36

    7 declaration_specs: declaration_specs declaration_spec .

    $default  reduce using rule 7 (declaration_specs)


State 37

    5 declaration: declaration_specs init_decl_list . ';'
   35 init_decl_list: init_decl_list . ',' init_decl

    ','  shift, and go to state 46
    ';'  shift, and go to state 47


State 38

   34 init_decl_list: init_decl .

    $default  reduce using rule 34 (init_decl_list)


State 39

   36 init_decl: decl .
   37          | decl . '=' init

    '='  shift, and go to state 48

    $default  reduce using rule 36 (init_decl)


State 40

   39 decl: direct_decl .
   43 direct_decl: direct_decl . '[' constant ']'
   44            | direct_decl . '[' ']'
   45            | direct_decl . '(' param_type_list ')'
   46            | direct_decl . '(' ident_list ')'
   47            | direct_decl . '(' ')'

    '('  shift, and go to state 49
    '['  shift, and go to state 50

    $default  reduce using rule 39 (decl)


State 41

   40 decl: pointer . direct_decl

    IDENT  shift, and go to state 32
    '('    shift, and go to state 34

    direct_decl  go to state 51


State 42

   32 type_qualif_list: type_qualif .

    $default  reduce using rule 32 (type_qualif_list)


State 43

   33 type_qualif_list: type_qualif_list . type_qualif
   50 pointer: '*' type_qualif_list .
   51        | '*' type_qualif_list . pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 18
    '*'       shift, and go to state 33

    $default  reduce using rule 50 (pointer)

    type_qualif  go to state 52
    pointer      go to state 53


State 44

   49 pointer: '*' pointer .

    $default  reduce using rule 49 (pointer)


State 45

   42 direct_decl: '(' decl . ')'

    ')'  shift, and go to state 54


State 46

   35 init_decl_list: init_decl_list ',' . init_decl

    IDENT  shift, and go to state 32
    '*'    shift, and go to state 33
    '('    shift, and go to state 34

    init_decl    go to state 55
    decl         go to state 39
    direct_decl  go to state 40
    pointer      go to state 41


State 47

    5 declaration: declaration_specs init_decl_list ';' .

    $default  reduce using rule 5 (declaration)


State 48

   37 init_decl: decl '=' . init

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    init          go to state 70
    assign_expr   go to state 71
    unary_expr    go to state 72
    cond_expr     go to state 73
    arith_expr    go to state 74
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 49

   45 direct_decl: direct_decl '(' . param_type_list ')'
   46            | direct_decl '(' . ident_list ')'
   47            | direct_decl '(' . ')'

    IDENT     shift, and go to state 78
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    UNSIGNED  shift, and go to state 16
    VOID      shift, and go to state 17
    VOLATILE  shift, and go to state 18
    _BOOL     shift, and go to state 19
    _COMPLEX  shift, and go to state 20
    ')'       shift, and go to state 79

    declaration_specs  go to state 80
    declaration_spec   go to state 25
    stg_class_spec     go to state 26
    type_spec          go to state 27
    type_qualif        go to state 28
    func_spec          go to state 29
    param_type_list    go to state 81
    param_list         go to state 82
    param_declaration  go to state 83
    ident_list         go to state 84


State 50

   43 direct_decl: direct_decl '[' . constant ']'
   44            | direct_decl '[' . ']'

    CHARLIT  shift, and go to state 85
    NUMBER   shift, and go to state 86
    ']'      shift, and go to state 87

    constant  go to state 88


State 51

   40 decl: pointer direct_decl .
   43 direct_decl: direct_decl . '[' constant ']'
   44            | direct_decl . '[' ']'
   45            | direct_decl . '(' param_type_list ')'
   46            | direct_decl . '(' ident_list ')'
   47            | direct_decl . '(' ')'

    '('  shift, and go to state 49
    '['  shift, and go to state 50

    $default  reduce using rule 40 (decl)


State 52

   33 type_qualif_list: type_qualif_list type_qualif .

    $default  reduce using rule 33 (type_qualif_list)


State 53

   51 pointer: '*' type_qualif_list pointer .

    $default  reduce using rule 51 (pointer)


State 54

   42 direct_decl: '(' decl ')' .

    $default  reduce using rule 42 (direct_decl)


State 55

   35 init_decl_list: init_decl_list ',' init_decl .

    $default  reduce using rule 35 (init_decl_list)


State 56

  123 prim_expr: IDENT .

    $default  reduce using rule 123 (prim_expr)


State 57

  125 prim_expr: CHARLIT .

    $default  reduce using rule 125 (prim_expr)


State 58

  126 prim_expr: STRING .

    $default  reduce using rule 126 (prim_expr)


State 59

  124 prim_expr: NUMBER .

    $default  reduce using rule 124 (prim_expr)


State 60

   82 unary_expr: PLUSPLUS . unary_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68

    unary_expr    go to state 89
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 61

   83 unary_expr: MINUSMINUS . unary_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68

    unary_expr    go to state 90
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 62

   84 unary_expr: SIZEOF . unary_expr
   85           | SIZEOF . '(' unary_expr ')'

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 91

    unary_expr    go to state 92
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 63

   86 unary_expr: '&' . cast_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68

    unary_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 64

   88 unary_expr: '+' . cast_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68

    unary_expr    go to state 93
    cast_expr     go to state 95
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 65

   89 unary_expr: '-' . cast_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68

    unary_expr    go to state 93
    cast_expr     go to state 96
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 66

   87 unary_expr: '*' . cast_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68

    unary_expr    go to state 93
    cast_expr     go to state 97
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 67

   90 unary_expr: '~' . cast_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68

    unary_expr    go to state 93
    cast_expr     go to state 98
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 68

   91 unary_expr: '!' . cast_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68

    unary_expr    go to state 93
    cast_expr     go to state 99
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 69

  114 arith_expr: '(' . arith_expr ')'

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    arith_expr    go to state 100
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 70

   37 init_decl: decl '=' init .

    $default  reduce using rule 37 (init_decl)


State 71

   38 init: assign_expr .

    $default  reduce using rule 38 (init)


State 72

   69 assign_expr: unary_expr . '=' assign_expr
   70            | unary_expr . PLUSEQ assign_expr
   71            | unary_expr . MINUSEQ assign_expr
   72            | unary_expr . TIMESEQ assign_expr
   73            | unary_expr . DIVEQ assign_expr
   74            | unary_expr . MODEQ assign_expr
   75            | unary_expr . SHLEQ assign_expr
   76            | unary_expr . SHREQ assign_expr
   77            | unary_expr . ANDEQ assign_expr
   78            | unary_expr . XOREQ assign_expr
   79            | unary_expr . OREQ assign_expr
  116 cast_expr: unary_expr .

    TIMESEQ  shift, and go to state 101
    DIVEQ    shift, and go to state 102
    MODEQ    shift, and go to state 103
    PLUSEQ   shift, and go to state 104
    MINUSEQ  shift, and go to state 105
    SHLEQ    shift, and go to state 106
    SHREQ    shift, and go to state 107
    ANDEQ    shift, and go to state 108
    OREQ     shift, and go to state 109
    XOREQ    shift, and go to state 110
    '='      shift, and go to state 111

    $default  reduce using rule 116 (cast_expr)


State 73

   80 assign_expr: cond_expr .

    $default  reduce using rule 80 (assign_expr)


State 74

   92 cond_expr: arith_expr .
   93          | arith_expr . '?' expr ':' cond_expr
   94 arith_expr: arith_expr . '+' arith_expr
   95           | arith_expr . '-' arith_expr
   96           | arith_expr . '*' arith_expr
   97           | arith_expr . '|' arith_expr
   98           | arith_expr . '^' arith_expr
   99           | arith_expr . '&' arith_expr
  100           | arith_expr . '%' arith_expr
  101           | arith_expr . '/' arith_expr
  102           | arith_expr . SHR arith_expr
  103           | arith_expr . SHL arith_expr
  104           | arith_expr . '<' arith_expr
  105           | arith_expr . '>' arith_expr
  106           | arith_expr . LTEQ arith_expr
  107           | arith_expr . GTEQ arith_expr
  108           | arith_expr . EQEQ arith_expr
  109           | arith_expr . NOTEQ arith_expr
  110           | arith_expr . LOGAND arith_expr
  111           | arith_expr . LOGOR arith_expr
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113
    SHL         shift, and go to state 114
    SHR         shift, and go to state 115
    LTEQ        shift, and go to state 116
    GTEQ        shift, and go to state 117
    EQEQ        shift, and go to state 118
    NOTEQ       shift, and go to state 119
    LOGAND      shift, and go to state 120
    LOGOR       shift, and go to state 121
    '?'         shift, and go to state 122
    '|'         shift, and go to state 123
    '^'         shift, and go to state 124
    '&'         shift, and go to state 125
    '<'         shift, and go to state 126
    '>'         shift, and go to state 127
    '+'         shift, and go to state 128
    '-'         shift, and go to state 129
    '*'         shift, and go to state 130
    '/'         shift, and go to state 131
    '%'         shift, and go to state 132

    $default  reduce using rule 92 (cond_expr)


State 75

  115 arith_expr: cast_expr .

    $default  reduce using rule 115 (arith_expr)


State 76

   81 unary_expr: postfix_expr .
  118 postfix_expr: postfix_expr . '[' expr ']'
  119             | postfix_expr . '.' IDENT
  120             | postfix_expr . INDSEL IDENT
  121             | postfix_expr . '(' ')'
  122             | postfix_expr . '(' expr ')'

    INDSEL  shift, and go to state 133
    '('     shift, and go to state 134
    '.'     shift, and go to state 135
    '['     shift, and go to state 136

    $default  reduce using rule 81 (unary_expr)


State 77

  117 postfix_expr: prim_expr .

    $default  reduce using rule 117 (postfix_expr)


State 78

   65 ident_list: IDENT .

    $default  reduce using rule 65 (ident_list)


State 79

   47 direct_decl: direct_decl '(' ')' .

    $default  reduce using rule 47 (direct_decl)


State 80

    7 declaration_specs: declaration_specs . declaration_spec
   56 param_declaration: declaration_specs . decl
   57                  | declaration_specs .
   58                  | declaration_specs . abstract_decl

    IDENT     shift, and go to state 32
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    UNSIGNED  shift, and go to state 16
    VOID      shift, and go to state 17
    VOLATILE  shift, and go to state 18
    _BOOL     shift, and go to state 19
    _COMPLEX  shift, and go to state 20
    '*'       shift, and go to state 33
    '('       shift, and go to state 137
    '['       shift, and go to state 138

    $default  reduce using rule 57 (param_declaration)

    declaration_spec      go to state 36
    stg_class_spec        go to state 26
    type_spec             go to state 27
    type_qualif           go to state 28
    func_spec             go to state 29
    decl                  go to state 139
    direct_decl           go to state 40
    pointer               go to state 140
    abstract_decl         go to state 141
    direct_abstract_decl  go to state 142


State 81

   45 direct_decl: direct_decl '(' param_type_list . ')'

    ')'  shift, and go to state 143


State 82

   52 param_type_list: param_list .
   53                | param_list . ',' ELLIPSIS
   55 param_list: param_list . ',' param_declaration

    ','  shift, and go to state 144

    $default  reduce using rule 52 (param_type_list)


State 83

   54 param_list: param_declaration .

    $default  reduce using rule 54 (param_list)


State 84

   46 direct_decl: direct_decl '(' ident_list . ')'
   66 ident_list: ident_list . ',' IDENT

    ','  shift, and go to state 145
    ')'  shift, and go to state 146


State 85

  128 constant: CHARLIT .

    $default  reduce using rule 128 (constant)


State 86

  127 constant: NUMBER .

    $default  reduce using rule 127 (constant)


State 87

   44 direct_decl: direct_decl '[' ']' .

    $default  reduce using rule 44 (direct_decl)


State 88

   43 direct_decl: direct_decl '[' constant . ']'

    ']'  shift, and go to state 147


State 89

   82 unary_expr: PLUSPLUS unary_expr .

    $default  reduce using rule 82 (unary_expr)


State 90

   83 unary_expr: MINUSMINUS unary_expr .

    $default  reduce using rule 83 (unary_expr)


State 91

   85 unary_expr: SIZEOF '(' . unary_expr ')'

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68

    unary_expr    go to state 148
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 92

   84 unary_expr: SIZEOF unary_expr .

    $default  reduce using rule 84 (unary_expr)


State 93

  116 cast_expr: unary_expr .

    $default  reduce using rule 116 (cast_expr)


State 94

   86 unary_expr: '&' cast_expr .

    $default  reduce using rule 86 (unary_expr)


State 95

   88 unary_expr: '+' cast_expr .

    $default  reduce using rule 88 (unary_expr)


State 96

   89 unary_expr: '-' cast_expr .

    $default  reduce using rule 89 (unary_expr)


State 97

   87 unary_expr: '*' cast_expr .

    $default  reduce using rule 87 (unary_expr)


State 98

   90 unary_expr: '~' cast_expr .

    $default  reduce using rule 90 (unary_expr)


State 99

   91 unary_expr: '!' cast_expr .

    $default  reduce using rule 91 (unary_expr)


State 100

   94 arith_expr: arith_expr . '+' arith_expr
   95           | arith_expr . '-' arith_expr
   96           | arith_expr . '*' arith_expr
   97           | arith_expr . '|' arith_expr
   98           | arith_expr . '^' arith_expr
   99           | arith_expr . '&' arith_expr
  100           | arith_expr . '%' arith_expr
  101           | arith_expr . '/' arith_expr
  102           | arith_expr . SHR arith_expr
  103           | arith_expr . SHL arith_expr
  104           | arith_expr . '<' arith_expr
  105           | arith_expr . '>' arith_expr
  106           | arith_expr . LTEQ arith_expr
  107           | arith_expr . GTEQ arith_expr
  108           | arith_expr . EQEQ arith_expr
  109           | arith_expr . NOTEQ arith_expr
  110           | arith_expr . LOGAND arith_expr
  111           | arith_expr . LOGOR arith_expr
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS
  114           | '(' arith_expr . ')'

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113
    SHL         shift, and go to state 114
    SHR         shift, and go to state 115
    LTEQ        shift, and go to state 116
    GTEQ        shift, and go to state 117
    EQEQ        shift, and go to state 118
    NOTEQ       shift, and go to state 119
    LOGAND      shift, and go to state 120
    LOGOR       shift, and go to state 121
    '|'         shift, and go to state 123
    '^'         shift, and go to state 124
    '&'         shift, and go to state 125
    '<'         shift, and go to state 126
    '>'         shift, and go to state 127
    '+'         shift, and go to state 128
    '-'         shift, and go to state 129
    '*'         shift, and go to state 130
    '/'         shift, and go to state 131
    '%'         shift, and go to state 132
    ')'         shift, and go to state 149


State 101

   72 assign_expr: unary_expr TIMESEQ . assign_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    assign_expr   go to state 150
    unary_expr    go to state 72
    cond_expr     go to state 73
    arith_expr    go to state 74
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 102

   73 assign_expr: unary_expr DIVEQ . assign_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    assign_expr   go to state 151
    unary_expr    go to state 72
    cond_expr     go to state 73
    arith_expr    go to state 74
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 103

   74 assign_expr: unary_expr MODEQ . assign_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    assign_expr   go to state 152
    unary_expr    go to state 72
    cond_expr     go to state 73
    arith_expr    go to state 74
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 104

   70 assign_expr: unary_expr PLUSEQ . assign_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    assign_expr   go to state 153
    unary_expr    go to state 72
    cond_expr     go to state 73
    arith_expr    go to state 74
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 105

   71 assign_expr: unary_expr MINUSEQ . assign_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    assign_expr   go to state 154
    unary_expr    go to state 72
    cond_expr     go to state 73
    arith_expr    go to state 74
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 106

   75 assign_expr: unary_expr SHLEQ . assign_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    assign_expr   go to state 155
    unary_expr    go to state 72
    cond_expr     go to state 73
    arith_expr    go to state 74
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 107

   76 assign_expr: unary_expr SHREQ . assign_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    assign_expr   go to state 156
    unary_expr    go to state 72
    cond_expr     go to state 73
    arith_expr    go to state 74
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 108

   77 assign_expr: unary_expr ANDEQ . assign_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    assign_expr   go to state 157
    unary_expr    go to state 72
    cond_expr     go to state 73
    arith_expr    go to state 74
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 109

   79 assign_expr: unary_expr OREQ . assign_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    assign_expr   go to state 158
    unary_expr    go to state 72
    cond_expr     go to state 73
    arith_expr    go to state 74
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 110

   78 assign_expr: unary_expr XOREQ . assign_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    assign_expr   go to state 159
    unary_expr    go to state 72
    cond_expr     go to state 73
    arith_expr    go to state 74
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 111

   69 assign_expr: unary_expr '=' . assign_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    assign_expr   go to state 160
    unary_expr    go to state 72
    cond_expr     go to state 73
    arith_expr    go to state 74
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 112

  112 arith_expr: arith_expr PLUSPLUS .

    $default  reduce using rule 112 (arith_expr)


State 113

  113 arith_expr: arith_expr MINUSMINUS .

    $default  reduce using rule 113 (arith_expr)


State 114

  103 arith_expr: arith_expr SHL . arith_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    arith_expr    go to state 161
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 115

  102 arith_expr: arith_expr SHR . arith_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    arith_expr    go to state 162
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 116

  106 arith_expr: arith_expr LTEQ . arith_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    arith_expr    go to state 163
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 117

  107 arith_expr: arith_expr GTEQ . arith_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    arith_expr    go to state 164
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 118

  108 arith_expr: arith_expr EQEQ . arith_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    arith_expr    go to state 165
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 119

  109 arith_expr: arith_expr NOTEQ . arith_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    arith_expr    go to state 166
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 120

  110 arith_expr: arith_expr LOGAND . arith_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    arith_expr    go to state 167
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 121

  111 arith_expr: arith_expr LOGOR . arith_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    arith_expr    go to state 168
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 122

   93 cond_expr: arith_expr '?' . expr ':' cond_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    expr          go to state 169
    assign_expr   go to state 170
    unary_expr    go to state 72
    cond_expr     go to state 73
    arith_expr    go to state 74
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 123

   97 arith_expr: arith_expr '|' . arith_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    arith_expr    go to state 171
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 124

   98 arith_expr: arith_expr '^' . arith_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    arith_expr    go to state 172
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 125

   99 arith_expr: arith_expr '&' . arith_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    arith_expr    go to state 173
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 126

  104 arith_expr: arith_expr '<' . arith_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    arith_expr    go to state 174
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 127

  105 arith_expr: arith_expr '>' . arith_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    arith_expr    go to state 175
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 128

   94 arith_expr: arith_expr '+' . arith_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    arith_expr    go to state 176
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 129

   95 arith_expr: arith_expr '-' . arith_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    arith_expr    go to state 177
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 130

   96 arith_expr: arith_expr '*' . arith_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    arith_expr    go to state 178
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 131

  101 arith_expr: arith_expr '/' . arith_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    arith_expr    go to state 179
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 132

  100 arith_expr: arith_expr '%' . arith_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    arith_expr    go to state 180
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 133

  120 postfix_expr: postfix_expr INDSEL . IDENT

    IDENT  shift, and go to state 181


State 134

  121 postfix_expr: postfix_expr '(' . ')'
  122             | postfix_expr '(' . expr ')'

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69
    ')'         shift, and go to state 182

    expr          go to state 183
    assign_expr   go to state 170
    unary_expr    go to state 72
    cond_expr     go to state 73
    arith_expr    go to state 74
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 135

  119 postfix_expr: postfix_expr '.' . IDENT

    IDENT  shift, and go to state 184


State 136

  118 postfix_expr: postfix_expr '[' . expr ']'

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    expr          go to state 185
    assign_expr   go to state 170
    unary_expr    go to state 72
    cond_expr     go to state 73
    arith_expr    go to state 74
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 137

   42 direct_decl: '(' . decl ')'
   62 direct_abstract_decl: '(' . abstract_decl ')'

    IDENT  shift, and go to state 32
    '*'    shift, and go to state 33
    '('    shift, and go to state 137
    '['    shift, and go to state 138

    decl                  go to state 45
    direct_decl           go to state 40
    pointer               go to state 140
    abstract_decl         go to state 186
    direct_abstract_decl  go to state 142


State 138

   63 direct_abstract_decl: '[' . ']'
   64                     | '[' . constant ']'

    CHARLIT  shift, and go to state 85
    NUMBER   shift, and go to state 86
    ']'      shift, and go to state 187

    constant  go to state 188


State 139

   56 param_declaration: declaration_specs decl .

    $default  reduce using rule 56 (param_declaration)


State 140

   40 decl: pointer . direct_decl
   59 abstract_decl: pointer .
   60              | pointer . direct_abstract_decl

    IDENT  shift, and go to state 32
    '('    shift, and go to state 137
    '['    shift, and go to state 138

    $default  reduce using rule 59 (abstract_decl)

    direct_decl           go to state 51
    direct_abstract_decl  go to state 189


State 141

   58 param_declaration: declaration_specs abstract_decl .

    $default  reduce using rule 58 (param_declaration)


State 142

   61 abstract_decl: direct_abstract_decl .

    $default  reduce using rule 61 (abstract_decl)


State 143

   45 direct_decl: direct_decl '(' param_type_list ')' .

    $default  reduce using rule 45 (direct_decl)


State 144

   53 param_type_list: param_list ',' . ELLIPSIS
   55 param_list: param_list ',' . param_declaration

    ELLIPSIS  shift, and go to state 190
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    TYPEDEF   shift, and go to state 15
    UNSIGNED  shift, and go to state 16
    VOID      shift, and go to state 17
    VOLATILE  shift, and go to state 18
    _BOOL     shift, and go to state 19
    _COMPLEX  shift, and go to state 20

    declaration_specs  go to state 80
    declaration_spec   go to state 25
    stg_class_spec     go to state 26
    type_spec          go to state 27
    type_qualif        go to state 28
    func_spec          go to state 29
    param_declaration  go to state 191


State 145

   66 ident_list: ident_list ',' . IDENT

    IDENT  shift, and go to state 192


State 146

   46 direct_decl: direct_decl '(' ident_list ')' .

    $default  reduce using rule 46 (direct_decl)


State 147

   43 direct_decl: direct_decl '[' constant ']' .

    $default  reduce using rule 43 (direct_decl)


State 148

   85 unary_expr: SIZEOF '(' unary_expr . ')'

    ')'  shift, and go to state 193


State 149

  114 arith_expr: '(' arith_expr ')' .

    $default  reduce using rule 114 (arith_expr)


State 150

   72 assign_expr: unary_expr TIMESEQ assign_expr .

    $default  reduce using rule 72 (assign_expr)


State 151

   73 assign_expr: unary_expr DIVEQ assign_expr .

    $default  reduce using rule 73 (assign_expr)


State 152

   74 assign_expr: unary_expr MODEQ assign_expr .

    $default  reduce using rule 74 (assign_expr)


State 153

   70 assign_expr: unary_expr PLUSEQ assign_expr .

    $default  reduce using rule 70 (assign_expr)


State 154

   71 assign_expr: unary_expr MINUSEQ assign_expr .

    $default  reduce using rule 71 (assign_expr)


State 155

   75 assign_expr: unary_expr SHLEQ assign_expr .

    $default  reduce using rule 75 (assign_expr)


State 156

   76 assign_expr: unary_expr SHREQ assign_expr .

    $default  reduce using rule 76 (assign_expr)


State 157

   77 assign_expr: unary_expr ANDEQ assign_expr .

    $default  reduce using rule 77 (assign_expr)


State 158

   79 assign_expr: unary_expr OREQ assign_expr .

    $default  reduce using rule 79 (assign_expr)


State 159

   78 assign_expr: unary_expr XOREQ assign_expr .

    $default  reduce using rule 78 (assign_expr)


State 160

   69 assign_expr: unary_expr '=' assign_expr .

    $default  reduce using rule 69 (assign_expr)


State 161

   94 arith_expr: arith_expr . '+' arith_expr
   95           | arith_expr . '-' arith_expr
   96           | arith_expr . '*' arith_expr
   97           | arith_expr . '|' arith_expr
   98           | arith_expr . '^' arith_expr
   99           | arith_expr . '&' arith_expr
  100           | arith_expr . '%' arith_expr
  101           | arith_expr . '/' arith_expr
  102           | arith_expr . SHR arith_expr
  103           | arith_expr . SHL arith_expr
  103           | arith_expr SHL arith_expr .
  104           | arith_expr . '<' arith_expr
  105           | arith_expr . '>' arith_expr
  106           | arith_expr . LTEQ arith_expr
  107           | arith_expr . GTEQ arith_expr
  108           | arith_expr . EQEQ arith_expr
  109           | arith_expr . NOTEQ arith_expr
  110           | arith_expr . LOGAND arith_expr
  111           | arith_expr . LOGOR arith_expr
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113
    '+'         shift, and go to state 128
    '-'         shift, and go to state 129
    '*'         shift, and go to state 130
    '/'         shift, and go to state 131
    '%'         shift, and go to state 132

    $default  reduce using rule 103 (arith_expr)


State 162

   94 arith_expr: arith_expr . '+' arith_expr
   95           | arith_expr . '-' arith_expr
   96           | arith_expr . '*' arith_expr
   97           | arith_expr . '|' arith_expr
   98           | arith_expr . '^' arith_expr
   99           | arith_expr . '&' arith_expr
  100           | arith_expr . '%' arith_expr
  101           | arith_expr . '/' arith_expr
  102           | arith_expr . SHR arith_expr
  102           | arith_expr SHR arith_expr .
  103           | arith_expr . SHL arith_expr
  104           | arith_expr . '<' arith_expr
  105           | arith_expr . '>' arith_expr
  106           | arith_expr . LTEQ arith_expr
  107           | arith_expr . GTEQ arith_expr
  108           | arith_expr . EQEQ arith_expr
  109           | arith_expr . NOTEQ arith_expr
  110           | arith_expr . LOGAND arith_expr
  111           | arith_expr . LOGOR arith_expr
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113
    '+'         shift, and go to state 128
    '-'         shift, and go to state 129
    '*'         shift, and go to state 130
    '/'         shift, and go to state 131
    '%'         shift, and go to state 132

    $default  reduce using rule 102 (arith_expr)


State 163

   94 arith_expr: arith_expr . '+' arith_expr
   95           | arith_expr . '-' arith_expr
   96           | arith_expr . '*' arith_expr
   97           | arith_expr . '|' arith_expr
   98           | arith_expr . '^' arith_expr
   99           | arith_expr . '&' arith_expr
  100           | arith_expr . '%' arith_expr
  101           | arith_expr . '/' arith_expr
  102           | arith_expr . SHR arith_expr
  103           | arith_expr . SHL arith_expr
  104           | arith_expr . '<' arith_expr
  105           | arith_expr . '>' arith_expr
  106           | arith_expr . LTEQ arith_expr
  106           | arith_expr LTEQ arith_expr .
  107           | arith_expr . GTEQ arith_expr
  108           | arith_expr . EQEQ arith_expr
  109           | arith_expr . NOTEQ arith_expr
  110           | arith_expr . LOGAND arith_expr
  111           | arith_expr . LOGOR arith_expr
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113
    SHL         shift, and go to state 114
    SHR         shift, and go to state 115
    '+'         shift, and go to state 128
    '-'         shift, and go to state 129
    '*'         shift, and go to state 130
    '/'         shift, and go to state 131
    '%'         shift, and go to state 132

    $default  reduce using rule 106 (arith_expr)


State 164

   94 arith_expr: arith_expr . '+' arith_expr
   95           | arith_expr . '-' arith_expr
   96           | arith_expr . '*' arith_expr
   97           | arith_expr . '|' arith_expr
   98           | arith_expr . '^' arith_expr
   99           | arith_expr . '&' arith_expr
  100           | arith_expr . '%' arith_expr
  101           | arith_expr . '/' arith_expr
  102           | arith_expr . SHR arith_expr
  103           | arith_expr . SHL arith_expr
  104           | arith_expr . '<' arith_expr
  105           | arith_expr . '>' arith_expr
  106           | arith_expr . LTEQ arith_expr
  107           | arith_expr . GTEQ arith_expr
  107           | arith_expr GTEQ arith_expr .
  108           | arith_expr . EQEQ arith_expr
  109           | arith_expr . NOTEQ arith_expr
  110           | arith_expr . LOGAND arith_expr
  111           | arith_expr . LOGOR arith_expr
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113
    SHL         shift, and go to state 114
    SHR         shift, and go to state 115
    '+'         shift, and go to state 128
    '-'         shift, and go to state 129
    '*'         shift, and go to state 130
    '/'         shift, and go to state 131
    '%'         shift, and go to state 132

    $default  reduce using rule 107 (arith_expr)


State 165

   94 arith_expr: arith_expr . '+' arith_expr
   95           | arith_expr . '-' arith_expr
   96           | arith_expr . '*' arith_expr
   97           | arith_expr . '|' arith_expr
   98           | arith_expr . '^' arith_expr
   99           | arith_expr . '&' arith_expr
  100           | arith_expr . '%' arith_expr
  101           | arith_expr . '/' arith_expr
  102           | arith_expr . SHR arith_expr
  103           | arith_expr . SHL arith_expr
  104           | arith_expr . '<' arith_expr
  105           | arith_expr . '>' arith_expr
  106           | arith_expr . LTEQ arith_expr
  107           | arith_expr . GTEQ arith_expr
  108           | arith_expr . EQEQ arith_expr
  108           | arith_expr EQEQ arith_expr .
  109           | arith_expr . NOTEQ arith_expr
  110           | arith_expr . LOGAND arith_expr
  111           | arith_expr . LOGOR arith_expr
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113
    SHL         shift, and go to state 114
    SHR         shift, and go to state 115
    LTEQ        shift, and go to state 116
    GTEQ        shift, and go to state 117
    '<'         shift, and go to state 126
    '>'         shift, and go to state 127
    '+'         shift, and go to state 128
    '-'         shift, and go to state 129
    '*'         shift, and go to state 130
    '/'         shift, and go to state 131
    '%'         shift, and go to state 132

    $default  reduce using rule 108 (arith_expr)


State 166

   94 arith_expr: arith_expr . '+' arith_expr
   95           | arith_expr . '-' arith_expr
   96           | arith_expr . '*' arith_expr
   97           | arith_expr . '|' arith_expr
   98           | arith_expr . '^' arith_expr
   99           | arith_expr . '&' arith_expr
  100           | arith_expr . '%' arith_expr
  101           | arith_expr . '/' arith_expr
  102           | arith_expr . SHR arith_expr
  103           | arith_expr . SHL arith_expr
  104           | arith_expr . '<' arith_expr
  105           | arith_expr . '>' arith_expr
  106           | arith_expr . LTEQ arith_expr
  107           | arith_expr . GTEQ arith_expr
  108           | arith_expr . EQEQ arith_expr
  109           | arith_expr . NOTEQ arith_expr
  109           | arith_expr NOTEQ arith_expr .
  110           | arith_expr . LOGAND arith_expr
  111           | arith_expr . LOGOR arith_expr
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113
    SHL         shift, and go to state 114
    SHR         shift, and go to state 115
    LTEQ        shift, and go to state 116
    GTEQ        shift, and go to state 117
    '<'         shift, and go to state 126
    '>'         shift, and go to state 127
    '+'         shift, and go to state 128
    '-'         shift, and go to state 129
    '*'         shift, and go to state 130
    '/'         shift, and go to state 131
    '%'         shift, and go to state 132

    $default  reduce using rule 109 (arith_expr)


State 167

   94 arith_expr: arith_expr . '+' arith_expr
   95           | arith_expr . '-' arith_expr
   96           | arith_expr . '*' arith_expr
   97           | arith_expr . '|' arith_expr
   98           | arith_expr . '^' arith_expr
   99           | arith_expr . '&' arith_expr
  100           | arith_expr . '%' arith_expr
  101           | arith_expr . '/' arith_expr
  102           | arith_expr . SHR arith_expr
  103           | arith_expr . SHL arith_expr
  104           | arith_expr . '<' arith_expr
  105           | arith_expr . '>' arith_expr
  106           | arith_expr . LTEQ arith_expr
  107           | arith_expr . GTEQ arith_expr
  108           | arith_expr . EQEQ arith_expr
  109           | arith_expr . NOTEQ arith_expr
  110           | arith_expr . LOGAND arith_expr
  110           | arith_expr LOGAND arith_expr .
  111           | arith_expr . LOGOR arith_expr
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113
    SHL         shift, and go to state 114
    SHR         shift, and go to state 115
    LTEQ        shift, and go to state 116
    GTEQ        shift, and go to state 117
    EQEQ        shift, and go to state 118
    NOTEQ       shift, and go to state 119
    '|'         shift, and go to state 123
    '^'         shift, and go to state 124
    '&'         shift, and go to state 125
    '<'         shift, and go to state 126
    '>'         shift, and go to state 127
    '+'         shift, and go to state 128
    '-'         shift, and go to state 129
    '*'         shift, and go to state 130
    '/'         shift, and go to state 131
    '%'         shift, and go to state 132

    $default  reduce using rule 110 (arith_expr)


State 168

   94 arith_expr: arith_expr . '+' arith_expr
   95           | arith_expr . '-' arith_expr
   96           | arith_expr . '*' arith_expr
   97           | arith_expr . '|' arith_expr
   98           | arith_expr . '^' arith_expr
   99           | arith_expr . '&' arith_expr
  100           | arith_expr . '%' arith_expr
  101           | arith_expr . '/' arith_expr
  102           | arith_expr . SHR arith_expr
  103           | arith_expr . SHL arith_expr
  104           | arith_expr . '<' arith_expr
  105           | arith_expr . '>' arith_expr
  106           | arith_expr . LTEQ arith_expr
  107           | arith_expr . GTEQ arith_expr
  108           | arith_expr . EQEQ arith_expr
  109           | arith_expr . NOTEQ arith_expr
  110           | arith_expr . LOGAND arith_expr
  111           | arith_expr . LOGOR arith_expr
  111           | arith_expr LOGOR arith_expr .
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113
    SHL         shift, and go to state 114
    SHR         shift, and go to state 115
    LTEQ        shift, and go to state 116
    GTEQ        shift, and go to state 117
    EQEQ        shift, and go to state 118
    NOTEQ       shift, and go to state 119
    LOGAND      shift, and go to state 120
    '|'         shift, and go to state 123
    '^'         shift, and go to state 124
    '&'         shift, and go to state 125
    '<'         shift, and go to state 126
    '>'         shift, and go to state 127
    '+'         shift, and go to state 128
    '-'         shift, and go to state 129
    '*'         shift, and go to state 130
    '/'         shift, and go to state 131
    '%'         shift, and go to state 132

    $default  reduce using rule 111 (arith_expr)


State 169

   68 expr: expr . ',' assign_expr
   93 cond_expr: arith_expr '?' expr . ':' cond_expr

    ','  shift, and go to state 194
    ':'  shift, and go to state 195


State 170

   67 expr: assign_expr .

    $default  reduce using rule 67 (expr)


State 171

   94 arith_expr: arith_expr . '+' arith_expr
   95           | arith_expr . '-' arith_expr
   96           | arith_expr . '*' arith_expr
   97           | arith_expr . '|' arith_expr
   97           | arith_expr '|' arith_expr .
   98           | arith_expr . '^' arith_expr
   99           | arith_expr . '&' arith_expr
  100           | arith_expr . '%' arith_expr
  101           | arith_expr . '/' arith_expr
  102           | arith_expr . SHR arith_expr
  103           | arith_expr . SHL arith_expr
  104           | arith_expr . '<' arith_expr
  105           | arith_expr . '>' arith_expr
  106           | arith_expr . LTEQ arith_expr
  107           | arith_expr . GTEQ arith_expr
  108           | arith_expr . EQEQ arith_expr
  109           | arith_expr . NOTEQ arith_expr
  110           | arith_expr . LOGAND arith_expr
  111           | arith_expr . LOGOR arith_expr
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113
    SHL         shift, and go to state 114
    SHR         shift, and go to state 115
    LTEQ        shift, and go to state 116
    GTEQ        shift, and go to state 117
    EQEQ        shift, and go to state 118
    NOTEQ       shift, and go to state 119
    '^'         shift, and go to state 124
    '&'         shift, and go to state 125
    '<'         shift, and go to state 126
    '>'         shift, and go to state 127
    '+'         shift, and go to state 128
    '-'         shift, and go to state 129
    '*'         shift, and go to state 130
    '/'         shift, and go to state 131
    '%'         shift, and go to state 132

    $default  reduce using rule 97 (arith_expr)


State 172

   94 arith_expr: arith_expr . '+' arith_expr
   95           | arith_expr . '-' arith_expr
   96           | arith_expr . '*' arith_expr
   97           | arith_expr . '|' arith_expr
   98           | arith_expr . '^' arith_expr
   98           | arith_expr '^' arith_expr .
   99           | arith_expr . '&' arith_expr
  100           | arith_expr . '%' arith_expr
  101           | arith_expr . '/' arith_expr
  102           | arith_expr . SHR arith_expr
  103           | arith_expr . SHL arith_expr
  104           | arith_expr . '<' arith_expr
  105           | arith_expr . '>' arith_expr
  106           | arith_expr . LTEQ arith_expr
  107           | arith_expr . GTEQ arith_expr
  108           | arith_expr . EQEQ arith_expr
  109           | arith_expr . NOTEQ arith_expr
  110           | arith_expr . LOGAND arith_expr
  111           | arith_expr . LOGOR arith_expr
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113
    SHL         shift, and go to state 114
    SHR         shift, and go to state 115
    LTEQ        shift, and go to state 116
    GTEQ        shift, and go to state 117
    EQEQ        shift, and go to state 118
    NOTEQ       shift, and go to state 119
    '&'         shift, and go to state 125
    '<'         shift, and go to state 126
    '>'         shift, and go to state 127
    '+'         shift, and go to state 128
    '-'         shift, and go to state 129
    '*'         shift, and go to state 130
    '/'         shift, and go to state 131
    '%'         shift, and go to state 132

    $default  reduce using rule 98 (arith_expr)


State 173

   94 arith_expr: arith_expr . '+' arith_expr
   95           | arith_expr . '-' arith_expr
   96           | arith_expr . '*' arith_expr
   97           | arith_expr . '|' arith_expr
   98           | arith_expr . '^' arith_expr
   99           | arith_expr . '&' arith_expr
   99           | arith_expr '&' arith_expr .
  100           | arith_expr . '%' arith_expr
  101           | arith_expr . '/' arith_expr
  102           | arith_expr . SHR arith_expr
  103           | arith_expr . SHL arith_expr
  104           | arith_expr . '<' arith_expr
  105           | arith_expr . '>' arith_expr
  106           | arith_expr . LTEQ arith_expr
  107           | arith_expr . GTEQ arith_expr
  108           | arith_expr . EQEQ arith_expr
  109           | arith_expr . NOTEQ arith_expr
  110           | arith_expr . LOGAND arith_expr
  111           | arith_expr . LOGOR arith_expr
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113
    SHL         shift, and go to state 114
    SHR         shift, and go to state 115
    LTEQ        shift, and go to state 116
    GTEQ        shift, and go to state 117
    EQEQ        shift, and go to state 118
    NOTEQ       shift, and go to state 119
    '<'         shift, and go to state 126
    '>'         shift, and go to state 127
    '+'         shift, and go to state 128
    '-'         shift, and go to state 129
    '*'         shift, and go to state 130
    '/'         shift, and go to state 131
    '%'         shift, and go to state 132

    $default  reduce using rule 99 (arith_expr)


State 174

   94 arith_expr: arith_expr . '+' arith_expr
   95           | arith_expr . '-' arith_expr
   96           | arith_expr . '*' arith_expr
   97           | arith_expr . '|' arith_expr
   98           | arith_expr . '^' arith_expr
   99           | arith_expr . '&' arith_expr
  100           | arith_expr . '%' arith_expr
  101           | arith_expr . '/' arith_expr
  102           | arith_expr . SHR arith_expr
  103           | arith_expr . SHL arith_expr
  104           | arith_expr . '<' arith_expr
  104           | arith_expr '<' arith_expr .
  105           | arith_expr . '>' arith_expr
  106           | arith_expr . LTEQ arith_expr
  107           | arith_expr . GTEQ arith_expr
  108           | arith_expr . EQEQ arith_expr
  109           | arith_expr . NOTEQ arith_expr
  110           | arith_expr . LOGAND arith_expr
  111           | arith_expr . LOGOR arith_expr
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113
    SHL         shift, and go to state 114
    SHR         shift, and go to state 115
    '+'         shift, and go to state 128
    '-'         shift, and go to state 129
    '*'         shift, and go to state 130
    '/'         shift, and go to state 131
    '%'         shift, and go to state 132

    $default  reduce using rule 104 (arith_expr)


State 175

   94 arith_expr: arith_expr . '+' arith_expr
   95           | arith_expr . '-' arith_expr
   96           | arith_expr . '*' arith_expr
   97           | arith_expr . '|' arith_expr
   98           | arith_expr . '^' arith_expr
   99           | arith_expr . '&' arith_expr
  100           | arith_expr . '%' arith_expr
  101           | arith_expr . '/' arith_expr
  102           | arith_expr . SHR arith_expr
  103           | arith_expr . SHL arith_expr
  104           | arith_expr . '<' arith_expr
  105           | arith_expr . '>' arith_expr
  105           | arith_expr '>' arith_expr .
  106           | arith_expr . LTEQ arith_expr
  107           | arith_expr . GTEQ arith_expr
  108           | arith_expr . EQEQ arith_expr
  109           | arith_expr . NOTEQ arith_expr
  110           | arith_expr . LOGAND arith_expr
  111           | arith_expr . LOGOR arith_expr
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113
    SHL         shift, and go to state 114
    SHR         shift, and go to state 115
    '+'         shift, and go to state 128
    '-'         shift, and go to state 129
    '*'         shift, and go to state 130
    '/'         shift, and go to state 131
    '%'         shift, and go to state 132

    $default  reduce using rule 105 (arith_expr)


State 176

   94 arith_expr: arith_expr . '+' arith_expr
   94           | arith_expr '+' arith_expr .
   95           | arith_expr . '-' arith_expr
   96           | arith_expr . '*' arith_expr
   97           | arith_expr . '|' arith_expr
   98           | arith_expr . '^' arith_expr
   99           | arith_expr . '&' arith_expr
  100           | arith_expr . '%' arith_expr
  101           | arith_expr . '/' arith_expr
  102           | arith_expr . SHR arith_expr
  103           | arith_expr . SHL arith_expr
  104           | arith_expr . '<' arith_expr
  105           | arith_expr . '>' arith_expr
  106           | arith_expr . LTEQ arith_expr
  107           | arith_expr . GTEQ arith_expr
  108           | arith_expr . EQEQ arith_expr
  109           | arith_expr . NOTEQ arith_expr
  110           | arith_expr . LOGAND arith_expr
  111           | arith_expr . LOGOR arith_expr
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113
    '*'         shift, and go to state 130
    '/'         shift, and go to state 131
    '%'         shift, and go to state 132

    $default  reduce using rule 94 (arith_expr)


State 177

   94 arith_expr: arith_expr . '+' arith_expr
   95           | arith_expr . '-' arith_expr
   95           | arith_expr '-' arith_expr .
   96           | arith_expr . '*' arith_expr
   97           | arith_expr . '|' arith_expr
   98           | arith_expr . '^' arith_expr
   99           | arith_expr . '&' arith_expr
  100           | arith_expr . '%' arith_expr
  101           | arith_expr . '/' arith_expr
  102           | arith_expr . SHR arith_expr
  103           | arith_expr . SHL arith_expr
  104           | arith_expr . '<' arith_expr
  105           | arith_expr . '>' arith_expr
  106           | arith_expr . LTEQ arith_expr
  107           | arith_expr . GTEQ arith_expr
  108           | arith_expr . EQEQ arith_expr
  109           | arith_expr . NOTEQ arith_expr
  110           | arith_expr . LOGAND arith_expr
  111           | arith_expr . LOGOR arith_expr
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113
    '*'         shift, and go to state 130
    '/'         shift, and go to state 131
    '%'         shift, and go to state 132

    $default  reduce using rule 95 (arith_expr)


State 178

   94 arith_expr: arith_expr . '+' arith_expr
   95           | arith_expr . '-' arith_expr
   96           | arith_expr . '*' arith_expr
   96           | arith_expr '*' arith_expr .
   97           | arith_expr . '|' arith_expr
   98           | arith_expr . '^' arith_expr
   99           | arith_expr . '&' arith_expr
  100           | arith_expr . '%' arith_expr
  101           | arith_expr . '/' arith_expr
  102           | arith_expr . SHR arith_expr
  103           | arith_expr . SHL arith_expr
  104           | arith_expr . '<' arith_expr
  105           | arith_expr . '>' arith_expr
  106           | arith_expr . LTEQ arith_expr
  107           | arith_expr . GTEQ arith_expr
  108           | arith_expr . EQEQ arith_expr
  109           | arith_expr . NOTEQ arith_expr
  110           | arith_expr . LOGAND arith_expr
  111           | arith_expr . LOGOR arith_expr
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113

    $default  reduce using rule 96 (arith_expr)


State 179

   94 arith_expr: arith_expr . '+' arith_expr
   95           | arith_expr . '-' arith_expr
   96           | arith_expr . '*' arith_expr
   97           | arith_expr . '|' arith_expr
   98           | arith_expr . '^' arith_expr
   99           | arith_expr . '&' arith_expr
  100           | arith_expr . '%' arith_expr
  101           | arith_expr . '/' arith_expr
  101           | arith_expr '/' arith_expr .
  102           | arith_expr . SHR arith_expr
  103           | arith_expr . SHL arith_expr
  104           | arith_expr . '<' arith_expr
  105           | arith_expr . '>' arith_expr
  106           | arith_expr . LTEQ arith_expr
  107           | arith_expr . GTEQ arith_expr
  108           | arith_expr . EQEQ arith_expr
  109           | arith_expr . NOTEQ arith_expr
  110           | arith_expr . LOGAND arith_expr
  111           | arith_expr . LOGOR arith_expr
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113

    $default  reduce using rule 101 (arith_expr)


State 180

   94 arith_expr: arith_expr . '+' arith_expr
   95           | arith_expr . '-' arith_expr
   96           | arith_expr . '*' arith_expr
   97           | arith_expr . '|' arith_expr
   98           | arith_expr . '^' arith_expr
   99           | arith_expr . '&' arith_expr
  100           | arith_expr . '%' arith_expr
  100           | arith_expr '%' arith_expr .
  101           | arith_expr . '/' arith_expr
  102           | arith_expr . SHR arith_expr
  103           | arith_expr . SHL arith_expr
  104           | arith_expr . '<' arith_expr
  105           | arith_expr . '>' arith_expr
  106           | arith_expr . LTEQ arith_expr
  107           | arith_expr . GTEQ arith_expr
  108           | arith_expr . EQEQ arith_expr
  109           | arith_expr . NOTEQ arith_expr
  110           | arith_expr . LOGAND arith_expr
  111           | arith_expr . LOGOR arith_expr
  112           | arith_expr . PLUSPLUS
  113           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 112
    MINUSMINUS  shift, and go to state 113

    $default  reduce using rule 100 (arith_expr)


State 181

  120 postfix_expr: postfix_expr INDSEL IDENT .

    $default  reduce using rule 120 (postfix_expr)


State 182

  121 postfix_expr: postfix_expr '(' ')' .

    $default  reduce using rule 121 (postfix_expr)


State 183

   68 expr: expr . ',' assign_expr
  122 postfix_expr: postfix_expr '(' expr . ')'

    ','  shift, and go to state 194
    ')'  shift, and go to state 196


State 184

  119 postfix_expr: postfix_expr '.' IDENT .

    $default  reduce using rule 119 (postfix_expr)


State 185

   68 expr: expr . ',' assign_expr
  118 postfix_expr: postfix_expr '[' expr . ']'

    ','  shift, and go to state 194
    ']'  shift, and go to state 197


State 186

   62 direct_abstract_decl: '(' abstract_decl . ')'

    ')'  shift, and go to state 198


State 187

   63 direct_abstract_decl: '[' ']' .

    $default  reduce using rule 63 (direct_abstract_decl)


State 188

   64 direct_abstract_decl: '[' constant . ']'

    ']'  shift, and go to state 199


State 189

   60 abstract_decl: pointer direct_abstract_decl .

    $default  reduce using rule 60 (abstract_decl)


State 190

   53 param_type_list: param_list ',' ELLIPSIS .

    $default  reduce using rule 53 (param_type_list)


State 191

   55 param_list: param_list ',' param_declaration .

    $default  reduce using rule 55 (param_list)


State 192

   66 ident_list: ident_list ',' IDENT .

    $default  reduce using rule 66 (ident_list)


State 193

   85 unary_expr: SIZEOF '(' unary_expr ')' .

    $default  reduce using rule 85 (unary_expr)


State 194

   68 expr: expr ',' . assign_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    assign_expr   go to state 200
    unary_expr    go to state 72
    cond_expr     go to state 73
    arith_expr    go to state 74
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 195

   93 cond_expr: arith_expr '?' expr ':' . cond_expr

    IDENT       shift, and go to state 56
    CHARLIT     shift, and go to state 57
    STRING      shift, and go to state 58
    NUMBER      shift, and go to state 59
    PLUSPLUS    shift, and go to state 60
    MINUSMINUS  shift, and go to state 61
    SIZEOF      shift, and go to state 62
    '&'         shift, and go to state 63
    '+'         shift, and go to state 64
    '-'         shift, and go to state 65
    '*'         shift, and go to state 66
    '~'         shift, and go to state 67
    '!'         shift, and go to state 68
    '('         shift, and go to state 69

    unary_expr    go to state 93
    cond_expr     go to state 201
    arith_expr    go to state 74
    cast_expr     go to state 75
    postfix_expr  go to state 76
    prim_expr     go to state 77


State 196

  122 postfix_expr: postfix_expr '(' expr ')' .

    $default  reduce using rule 122 (postfix_expr)


State 197

  118 postfix_expr: postfix_expr '[' expr ']' .

    $default  reduce using rule 118 (postfix_expr)


State 198

   62 direct_abstract_decl: '(' abstract_decl ')' .

    $default  reduce using rule 62 (direct_abstract_decl)


State 199

   64 direct_abstract_decl: '[' constant ']' .

    $default  reduce using rule 64 (direct_abstract_decl)


State 200

   68 expr: expr ',' assign_expr .

    $default  reduce using rule 68 (expr)


State 201

   93 cond_expr: arith_expr '?' expr ':' cond_expr .

    $default  reduce using rule 93 (cond_expr)
