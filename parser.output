Terminals unused in grammar

    ENUM
    _IMAGINARY


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: extern_declaration
    2                 | translation_unit extern_declaration

    3 extern_declaration: declaration
    4                   | func_def

    5 declaration: declaration_specs ';'
    6            | declaration_specs init_decl_list ';'

    7 declaration_specs: declaration_spec
    8                  | declaration_specs declaration_spec

    9 declaration_spec: stg_class_spec
   10                 | type_spec
   11                 | type_qualif
   12                 | func_spec

   13 stg_class_spec: AUTO
   14               | STATIC
   15               | EXTERN
   16               | TYPEDEF
   17               | REGISTER

   18 type_spec: VOID
   19          | CHAR
   20          | SHORT
   21          | INT
   22          | LONG
   23          | FLOAT
   24          | DOUBLE
   25          | SIGNED
   26          | UNSIGNED
   27          | _BOOL
   28          | _COMPLEX
   29          | struct_union_spec

   30 type_qualif: CONST
   31            | RESTRICT
   32            | VOLATILE

   33 func_spec: INLINE

   34 struct_union_spec: struct_union '{' struct_declaration_list '}'
   35                  | struct_union IDENT '{' struct_declaration_list '}'
   36                  | struct_union IDENT

   37 struct_union: STRUCT
   38             | UNION

   39 struct_declaration_list: struct_declaration
   40                        | struct_declaration_list struct_declaration

   41 struct_declaration: specific_qualif_list struct_decl_list ';'

   42 specific_qualif_list: type_spec
   43                     | type_spec specific_qualif_list
   44                     | type_qualif
   45                     | type_qualif specific_qualif_list

   46 struct_decl_list: struct_decl
   47                 | struct_decl_list ',' struct_decl

   48 struct_decl: decl

   49 type_qualif_list: type_qualif
   50                 | type_qualif_list type_qualif

   51 init_decl_list: init_decl
   52               | init_decl_list ',' init_decl

   53 init_decl: decl
   54          | decl '=' init

   55 init: assign_expr

   56 decl: direct_decl
   57     | pointer direct_decl

   58 direct_decl: IDENT
   59            | '(' decl ')'
   60            | direct_decl '[' constant ']'
   61            | direct_decl '[' ']'
   62            | direct_decl '(' param_type_list ')'
   63            | direct_decl '(' ident_list ')'
   64            | direct_decl '(' ')'

   65 pointer: '*'
   66        | '*' pointer
   67        | '*' type_qualif_list
   68        | '*' type_qualif_list pointer

   69 param_type_list: param_list
   70                | param_list ',' ELLIPSIS

   71 param_list: param_declaration
   72           | param_list ',' param_declaration

   73 param_declaration: declaration_specs decl
   74                  | declaration_specs

   75 func_def: declaration_specs decl compound_stmnt
   76         | declaration_specs decl declaration_list compound_stmnt

   77 declaration_list: declaration
   78                 | declaration_list declaration

   79 compound_stmnt: '{' '}'

   80 $@1: %empty

   81 compound_stmnt: '{' $@1 block_item_list '}'

   82 block_item_list: block_item
   83                | block_item_list block_item

   84 block_item: declaration
   85           | statement

   86 ident_list: IDENT
   87           | ident_list ',' IDENT

   88 statement: expr_stmnt
   89          | label_stmnt
   90          | compound_stmnt
   91          | select_stmnt
   92          | iterat_stmnt
   93          | jump_stmnt

   94 expr_stmnt: expr ';'

   95 label_stmnt: IDENT ':' statement
   96            | CASE const_expr ':' statement
   97            | DEFAULT ':' statement

   98 select_stmnt: IF '(' expr ')' statement
   99             | IF '(' expr ')' ELSE statement
  100             | SWITCH '(' expr ')' statement

  101 iterat_stmnt: WHILE '(' expr ')' statement
  102             | DO statement WHILE '(' expr ')' ';'
  103             | FOR '(' expr_opt ';' expr_opt ';' expr_opt ')' statement
  104             | FOR '(' declaration expr_opt ';' expr_opt ')' statement

  105 expr_opt: expr
  106         | %empty

  107 jump_stmnt: GOTO IDENT ';'
  108           | CONTINUE ';'
  109           | BREAK ';'
  110           | RETURN expr_opt ';'

  111 expr: assign_expr
  112     | expr ',' assign_expr

  113 assign_expr: unary_expr '=' assign_expr
  114            | unary_expr PLUSEQ assign_expr
  115            | unary_expr MINUSEQ assign_expr
  116            | unary_expr TIMESEQ assign_expr
  117            | unary_expr DIVEQ assign_expr
  118            | unary_expr MODEQ assign_expr
  119            | unary_expr SHLEQ assign_expr
  120            | unary_expr SHREQ assign_expr
  121            | unary_expr ANDEQ assign_expr
  122            | unary_expr XOREQ assign_expr
  123            | unary_expr OREQ assign_expr
  124            | cond_expr

  125 unary_expr: postfix_expr
  126           | PLUSPLUS unary_expr
  127           | MINUSMINUS unary_expr
  128           | SIZEOF unary_expr
  129           | SIZEOF '(' unary_expr ')'
  130           | '&' cast_expr
  131           | '*' cast_expr
  132           | '+' cast_expr
  133           | '-' cast_expr
  134           | '~' cast_expr
  135           | '!' cast_expr

  136 const_expr: cond_expr

  137 cond_expr: arith_expr
  138          | arith_expr '?' expr ':' cond_expr

  139 arith_expr: arith_expr '+' arith_expr
  140           | arith_expr '-' arith_expr
  141           | arith_expr '*' arith_expr
  142           | arith_expr '|' arith_expr
  143           | arith_expr '^' arith_expr
  144           | arith_expr '&' arith_expr
  145           | arith_expr '%' arith_expr
  146           | arith_expr '/' arith_expr
  147           | arith_expr SHR arith_expr
  148           | arith_expr SHL arith_expr
  149           | arith_expr '<' arith_expr
  150           | arith_expr '>' arith_expr
  151           | arith_expr LTEQ arith_expr
  152           | arith_expr GTEQ arith_expr
  153           | arith_expr EQEQ arith_expr
  154           | arith_expr NOTEQ arith_expr
  155           | arith_expr LOGAND arith_expr
  156           | arith_expr LOGOR arith_expr
  157           | arith_expr PLUSPLUS
  158           | arith_expr MINUSMINUS
  159           | '(' arith_expr ')'
  160           | cast_expr

  161 cast_expr: unary_expr

  162 postfix_expr: prim_expr
  163             | postfix_expr '[' expr ']'
  164             | postfix_expr '.' IDENT
  165             | postfix_expr INDSEL IDENT
  166             | postfix_expr '(' ')'
  167             | postfix_expr '(' expr ')'

  168 prim_expr: IDENT
  169          | NUMBER
  170          | CHARLIT
  171          | STRING

  172 constant: NUMBER
  173         | CHARLIT


Terminals, with rules where they appear

    $end (0) 0
    '!' <c> (33) 135
    '%' <c> (37) 145
    '&' <c> (38) 130 144
    '(' <c> (40) 59 62 63 64 98 99 100 101 102 103 104 129 159 166 167
    ')' <c> (41) 59 62 63 64 98 99 100 101 102 103 104 129 159 166 167
    '*' <c> (42) 65 66 67 68 131 141
    '+' <c> (43) 132 139
    ',' <c> (44) 47 52 70 72 87 112
    '-' <c> (45) 133 140
    '.' <c> (46) 164
    '/' <c> (47) 146
    ':' <c> (58) 95 96 97 138
    ';' (59) 5 6 41 94 102 103 104 107 108 109 110
    '<' <c> (60) 149
    '=' <c> (61) 54 113
    '>' <c> (62) 150
    '?' <c> (63) 138
    '[' <c> (91) 60 61 163
    ']' <c> (93) 60 61 163
    '^' <c> (94) 143
    '{' (123) 34 35 79 81
    '|' <c> (124) 142
    '}' (125) 34 35 79 81
    '~' <c> (126) 134
    error (256)
    IDENT <ident> (258) 35 36 58 86 87 95 107 164 165 168
    CHARLIT <charlit> (259) 170 173
    STRING <str> (260) 171
    NUMBER <num> (261) 169 172
    INDSEL <c> (262) 165
    PLUSPLUS <c> (263) 126 157
    MINUSMINUS <c> (264) 127 158
    SHL <c> (265) 148
    SHR <c> (266) 147
    LTEQ <c> (267) 151
    GTEQ <c> (268) 152
    EQEQ <c> (269) 153
    NOTEQ <c> (270) 154
    LOGAND <c> (271) 155
    LOGOR <c> (272) 156
    ELLIPSIS (273) 70
    TIMESEQ <c> (274) 116
    DIVEQ <c> (275) 117
    MODEQ <c> (276) 118
    PLUSEQ <c> (277) 114
    MINUSEQ <c> (278) 115
    SHLEQ <c> (279) 119
    SHREQ <c> (280) 120
    ANDEQ <c> (281) 121
    OREQ <c> (282) 123
    XOREQ <c> (283) 122
    AUTO (284) 13
    BREAK (285) 109
    CASE (286) 96
    CHAR (287) 19
    CONST (288) 30
    CONTINUE (289) 108
    DEFAULT (290) 97
    DO (291) 102
    DOUBLE (292) 24
    ELSE (293) 99
    ENUM (294)
    EXTERN (295) 15
    FLOAT (296) 23
    FOR (297) 103 104
    GOTO (298) 107
    IF (299) 98 99
    INLINE (300) 33
    INT (301) 21
    LONG (302) 22
    REGISTER (303) 17
    RESTRICT (304) 31
    RETURN (305) 110
    SHORT (306) 20
    SIGNED (307) 25
    SIZEOF (308) 128 129
    STATIC (309) 14
    STRUCT (310) 37
    SWITCH (311) 100
    TYPEDEF (312) 16
    UNION (313) 38
    UNSIGNED (314) 26
    VOID (315) 18
    VOLATILE (316) 32
    WHILE (317) 101 102
    _BOOL (318) 27
    _COMPLEX (319) 28
    _IMAGINARY (320)


Nonterminals, with rules where they appear

    $accept (90)
        on left: 0
    translation_unit <astnode_p> (91)
        on left: 1 2
        on right: 0 2
    extern_declaration <astnode_p> (92)
        on left: 3 4
        on right: 1 2
    declaration <astnode_p> (93)
        on left: 5 6
        on right: 3 77 78 84 104
    declaration_specs <astnode_p> (94)
        on left: 7 8
        on right: 5 6 8 73 74 75 76
    declaration_spec <astnode_p> (95)
        on left: 9 10 11 12
        on right: 7 8
    stg_class_spec <astnode_p> (96)
        on left: 13 14 15 16 17
        on right: 9
    type_spec <astnode_p> (97)
        on left: 18 19 20 21 22 23 24 25 26 27 28 29
        on right: 10 42 43
    type_qualif <astnode_p> (98)
        on left: 30 31 32
        on right: 11 44 45 49 50
    func_spec <astnode_p> (99)
        on left: 33
        on right: 12
    struct_union_spec <astnode_p> (100)
        on left: 34 35 36
        on right: 29
    struct_union <astnode_p> (101)
        on left: 37 38
        on right: 34 35 36
    struct_declaration_list <astnode_p> (102)
        on left: 39 40
        on right: 34 35 40
    struct_declaration <astnode_p> (103)
        on left: 41
        on right: 39 40
    specific_qualif_list <astnode_p> (104)
        on left: 42 43 44 45
        on right: 41 43 45
    struct_decl_list <astnode_p> (105)
        on left: 46 47
        on right: 41 47
    struct_decl <astnode_p> (106)
        on left: 48
        on right: 46 47
    type_qualif_list (107)
        on left: 49 50
        on right: 50 67 68
    init_decl_list <astnode_p> (108)
        on left: 51 52
        on right: 6 52
    init_decl <astnode_p> (109)
        on left: 53 54
        on right: 51 52
    init (110)
        on left: 55
        on right: 54
    decl <astnode_p> (111)
        on left: 56 57
        on right: 48 53 54 59 73 75 76
    direct_decl <astnode_p> (112)
        on left: 58 59 60 61 62 63 64
        on right: 56 57 60 61 62 63 64
    pointer <astnode_p> (113)
        on left: 65 66 67 68
        on right: 57 66 68
    param_type_list <astnode_p> (114)
        on left: 69 70
        on right: 62
    param_list <astnode_p> (115)
        on left: 71 72
        on right: 69 70 72
    param_declaration <astnode_p> (116)
        on left: 73 74
        on right: 71 72
    func_def <astnode_p> (117)
        on left: 75 76
        on right: 4
    declaration_list <astnode_p> (118)
        on left: 77 78
        on right: 76 78
    compound_stmnt <astnode_p> (119)
        on left: 79 81
        on right: 75 76 90
    $@1 (120)
        on left: 80
        on right: 81
    block_item_list <astnode_p> (121)
        on left: 82 83
        on right: 81 83
    block_item <astnode_p> (122)
        on left: 84 85
        on right: 82 83
    ident_list <astnode_p> (123)
        on left: 86 87
        on right: 63 87
    statement <astnode_p> (124)
        on left: 88 89 90 91 92 93
        on right: 85 95 96 97 98 99 100 101 102 103 104
    expr_stmnt <astnode_p> (125)
        on left: 94
        on right: 88
    label_stmnt <astnode_p> (126)
        on left: 95 96 97
        on right: 89
    select_stmnt <astnode_p> (127)
        on left: 98 99 100
        on right: 91
    iterat_stmnt <astnode_p> (128)
        on left: 101 102 103 104
        on right: 92
    expr_opt <astnode_p> (129)
        on left: 105 106
        on right: 103 104 110
    jump_stmnt <astnode_p> (130)
        on left: 107 108 109 110
        on right: 93
    expr <astnode_p> (131)
        on left: 111 112
        on right: 94 98 99 100 101 102 105 112 138 163 167
    assign_expr <astnode_p> (132)
        on left: 113 114 115 116 117 118 119 120 121 122 123 124
        on right: 55 111 112 113 114 115 116 117 118 119 120 121 122 123
    unary_expr <astnode_p> (133)
        on left: 125 126 127 128 129 130 131 132 133 134 135
        on right: 113 114 115 116 117 118 119 120 121 122 123 126 127 128 129 161
    const_expr <astnode_p> (134)
        on left: 136
        on right: 96
    cond_expr <astnode_p> (135)
        on left: 137 138
        on right: 124 136 138
    arith_expr <astnode_p> (136)
        on left: 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160
        on right: 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159
    cast_expr <astnode_p> (137)
        on left: 161
        on right: 130 131 132 133 134 135 160
    postfix_expr <astnode_p> (138)
        on left: 162 163 164 165 166 167
        on right: 125 163 164 165 166 167
    prim_expr <astnode_p> (139)
        on left: 168 169 170 171
        on right: 162
    constant <astnode_p> (140)
        on left: 172 173
        on right: 60


State 0

    0 $accept: . translation_unit $end

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    STRUCT    shift, and go to state 15
    TYPEDEF   shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    translation_unit    go to state 23
    extern_declaration  go to state 24
    declaration         go to state 25
    declaration_specs   go to state 26
    declaration_spec    go to state 27
    stg_class_spec      go to state 28
    type_spec           go to state 29
    type_qualif         go to state 30
    func_spec           go to state 31
    struct_union_spec   go to state 32
    struct_union        go to state 33
    func_def            go to state 34


State 1

   13 stg_class_spec: AUTO .

    $default  reduce using rule 13 (stg_class_spec)


State 2

   19 type_spec: CHAR .

    $default  reduce using rule 19 (type_spec)


State 3

   30 type_qualif: CONST .

    $default  reduce using rule 30 (type_qualif)


State 4

   24 type_spec: DOUBLE .

    $default  reduce using rule 24 (type_spec)


State 5

   15 stg_class_spec: EXTERN .

    $default  reduce using rule 15 (stg_class_spec)


State 6

   23 type_spec: FLOAT .

    $default  reduce using rule 23 (type_spec)


State 7

   33 func_spec: INLINE .

    $default  reduce using rule 33 (func_spec)


State 8

   21 type_spec: INT .

    $default  reduce using rule 21 (type_spec)


State 9

   22 type_spec: LONG .

    $default  reduce using rule 22 (type_spec)


State 10

   17 stg_class_spec: REGISTER .

    $default  reduce using rule 17 (stg_class_spec)


State 11

   31 type_qualif: RESTRICT .

    $default  reduce using rule 31 (type_qualif)


State 12

   20 type_spec: SHORT .

    $default  reduce using rule 20 (type_spec)


State 13

   25 type_spec: SIGNED .

    $default  reduce using rule 25 (type_spec)


State 14

   14 stg_class_spec: STATIC .

    $default  reduce using rule 14 (stg_class_spec)


State 15

   37 struct_union: STRUCT .

    $default  reduce using rule 37 (struct_union)


State 16

   16 stg_class_spec: TYPEDEF .

    $default  reduce using rule 16 (stg_class_spec)


State 17

   38 struct_union: UNION .

    $default  reduce using rule 38 (struct_union)


State 18

   26 type_spec: UNSIGNED .

    $default  reduce using rule 26 (type_spec)


State 19

   18 type_spec: VOID .

    $default  reduce using rule 18 (type_spec)


State 20

   32 type_qualif: VOLATILE .

    $default  reduce using rule 32 (type_qualif)


State 21

   27 type_spec: _BOOL .

    $default  reduce using rule 27 (type_spec)


State 22

   28 type_spec: _COMPLEX .

    $default  reduce using rule 28 (type_spec)


State 23

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . extern_declaration

    $end      shift, and go to state 35
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    STRUCT    shift, and go to state 15
    TYPEDEF   shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    extern_declaration  go to state 36
    declaration         go to state 25
    declaration_specs   go to state 26
    declaration_spec    go to state 27
    stg_class_spec      go to state 28
    type_spec           go to state 29
    type_qualif         go to state 30
    func_spec           go to state 31
    struct_union_spec   go to state 32
    struct_union        go to state 33
    func_def            go to state 34


State 24

    1 translation_unit: extern_declaration .

    $default  reduce using rule 1 (translation_unit)


State 25

    3 extern_declaration: declaration .

    $default  reduce using rule 3 (extern_declaration)


State 26

    5 declaration: declaration_specs . ';'
    6            | declaration_specs . init_decl_list ';'
    8 declaration_specs: declaration_specs . declaration_spec
   75 func_def: declaration_specs . decl compound_stmnt
   76         | declaration_specs . decl declaration_list compound_stmnt

    IDENT     shift, and go to state 37
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    STRUCT    shift, and go to state 15
    TYPEDEF   shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '*'       shift, and go to state 38
    '('       shift, and go to state 39
    ';'       shift, and go to state 40

    declaration_spec   go to state 41
    stg_class_spec     go to state 28
    type_spec          go to state 29
    type_qualif        go to state 30
    func_spec          go to state 31
    struct_union_spec  go to state 32
    struct_union       go to state 33
    init_decl_list     go to state 42
    init_decl          go to state 43
    decl               go to state 44
    direct_decl        go to state 45
    pointer            go to state 46


State 27

    7 declaration_specs: declaration_spec .

    $default  reduce using rule 7 (declaration_specs)


State 28

    9 declaration_spec: stg_class_spec .

    $default  reduce using rule 9 (declaration_spec)


State 29

   10 declaration_spec: type_spec .

    $default  reduce using rule 10 (declaration_spec)


State 30

   11 declaration_spec: type_qualif .

    $default  reduce using rule 11 (declaration_spec)


State 31

   12 declaration_spec: func_spec .

    $default  reduce using rule 12 (declaration_spec)


State 32

   29 type_spec: struct_union_spec .

    $default  reduce using rule 29 (type_spec)


State 33

   34 struct_union_spec: struct_union . '{' struct_declaration_list '}'
   35                  | struct_union . IDENT '{' struct_declaration_list '}'
   36                  | struct_union . IDENT

    IDENT  shift, and go to state 47
    '{'    shift, and go to state 48


State 34

    4 extern_declaration: func_def .

    $default  reduce using rule 4 (extern_declaration)


State 35

    0 $accept: translation_unit $end .

    $default  accept


State 36

    2 translation_unit: translation_unit extern_declaration .

    $default  reduce using rule 2 (translation_unit)


State 37

   58 direct_decl: IDENT .

    $default  reduce using rule 58 (direct_decl)


State 38

   65 pointer: '*' .
   66        | '*' . pointer
   67        | '*' . type_qualif_list
   68        | '*' . type_qualif_list pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 20
    '*'       shift, and go to state 38

    $default  reduce using rule 65 (pointer)

    type_qualif       go to state 49
    type_qualif_list  go to state 50
    pointer           go to state 51


State 39

   59 direct_decl: '(' . decl ')'

    IDENT  shift, and go to state 37
    '*'    shift, and go to state 38
    '('    shift, and go to state 39

    decl         go to state 52
    direct_decl  go to state 45
    pointer      go to state 46


State 40

    5 declaration: declaration_specs ';' .

    $default  reduce using rule 5 (declaration)


State 41

    8 declaration_specs: declaration_specs declaration_spec .

    $default  reduce using rule 8 (declaration_specs)


State 42

    6 declaration: declaration_specs init_decl_list . ';'
   52 init_decl_list: init_decl_list . ',' init_decl

    ','  shift, and go to state 53
    ';'  shift, and go to state 54


State 43

   51 init_decl_list: init_decl .

    $default  reduce using rule 51 (init_decl_list)


State 44

   53 init_decl: decl .
   54          | decl . '=' init
   75 func_def: declaration_specs decl . compound_stmnt
   76         | declaration_specs decl . declaration_list compound_stmnt

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    STRUCT    shift, and go to state 15
    TYPEDEF   shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '='       shift, and go to state 55
    '{'       shift, and go to state 56

    $default  reduce using rule 53 (init_decl)

    declaration        go to state 57
    declaration_specs  go to state 58
    declaration_spec   go to state 27
    stg_class_spec     go to state 28
    type_spec          go to state 29
    type_qualif        go to state 30
    func_spec          go to state 31
    struct_union_spec  go to state 32
    struct_union       go to state 33
    declaration_list   go to state 59
    compound_stmnt     go to state 60


State 45

   56 decl: direct_decl .
   60 direct_decl: direct_decl . '[' constant ']'
   61            | direct_decl . '[' ']'
   62            | direct_decl . '(' param_type_list ')'
   63            | direct_decl . '(' ident_list ')'
   64            | direct_decl . '(' ')'

    '('  shift, and go to state 61
    '['  shift, and go to state 62

    $default  reduce using rule 56 (decl)


State 46

   57 decl: pointer . direct_decl

    IDENT  shift, and go to state 37
    '('    shift, and go to state 39

    direct_decl  go to state 63


State 47

   35 struct_union_spec: struct_union IDENT . '{' struct_declaration_list '}'
   36                  | struct_union IDENT .

    '{'  shift, and go to state 64

    $default  reduce using rule 36 (struct_union_spec)


State 48

   34 struct_union_spec: struct_union '{' . struct_declaration_list '}'

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    FLOAT     shift, and go to state 6
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    type_spec                go to state 65
    type_qualif              go to state 66
    struct_union_spec        go to state 32
    struct_union             go to state 33
    struct_declaration_list  go to state 67
    struct_declaration       go to state 68
    specific_qualif_list     go to state 69


State 49

   49 type_qualif_list: type_qualif .

    $default  reduce using rule 49 (type_qualif_list)


State 50

   50 type_qualif_list: type_qualif_list . type_qualif
   67 pointer: '*' type_qualif_list .
   68        | '*' type_qualif_list . pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 20
    '*'       shift, and go to state 38

    $default  reduce using rule 67 (pointer)

    type_qualif  go to state 70
    pointer      go to state 71


State 51

   66 pointer: '*' pointer .

    $default  reduce using rule 66 (pointer)


State 52

   59 direct_decl: '(' decl . ')'

    ')'  shift, and go to state 72


State 53

   52 init_decl_list: init_decl_list ',' . init_decl

    IDENT  shift, and go to state 37
    '*'    shift, and go to state 38
    '('    shift, and go to state 39

    init_decl    go to state 73
    decl         go to state 74
    direct_decl  go to state 45
    pointer      go to state 46


State 54

    6 declaration: declaration_specs init_decl_list ';' .

    $default  reduce using rule 6 (declaration)


State 55

   54 init_decl: decl '=' . init

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    init          go to state 89
    assign_expr   go to state 90
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 56

   79 compound_stmnt: '{' . '}'
   81               | '{' . $@1 block_item_list '}'

    '}'  shift, and go to state 97

    $default  reduce using rule 80 ($@1)

    $@1  go to state 98


State 57

   77 declaration_list: declaration .

    $default  reduce using rule 77 (declaration_list)


State 58

    5 declaration: declaration_specs . ';'
    6            | declaration_specs . init_decl_list ';'
    8 declaration_specs: declaration_specs . declaration_spec

    IDENT     shift, and go to state 37
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    STRUCT    shift, and go to state 15
    TYPEDEF   shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '*'       shift, and go to state 38
    '('       shift, and go to state 39
    ';'       shift, and go to state 40

    declaration_spec   go to state 41
    stg_class_spec     go to state 28
    type_spec          go to state 29
    type_qualif        go to state 30
    func_spec          go to state 31
    struct_union_spec  go to state 32
    struct_union       go to state 33
    init_decl_list     go to state 42
    init_decl          go to state 43
    decl               go to state 74
    direct_decl        go to state 45
    pointer            go to state 46


State 59

   76 func_def: declaration_specs decl declaration_list . compound_stmnt
   78 declaration_list: declaration_list . declaration

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    STRUCT    shift, and go to state 15
    TYPEDEF   shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '{'       shift, and go to state 56

    declaration        go to state 99
    declaration_specs  go to state 58
    declaration_spec   go to state 27
    stg_class_spec     go to state 28
    type_spec          go to state 29
    type_qualif        go to state 30
    func_spec          go to state 31
    struct_union_spec  go to state 32
    struct_union       go to state 33
    compound_stmnt     go to state 100


State 60

   75 func_def: declaration_specs decl compound_stmnt .

    $default  reduce using rule 75 (func_def)


State 61

   62 direct_decl: direct_decl '(' . param_type_list ')'
   63            | direct_decl '(' . ident_list ')'
   64            | direct_decl '(' . ')'

    IDENT     shift, and go to state 101
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    STRUCT    shift, and go to state 15
    TYPEDEF   shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    ')'       shift, and go to state 102

    declaration_specs  go to state 103
    declaration_spec   go to state 27
    stg_class_spec     go to state 28
    type_spec          go to state 29
    type_qualif        go to state 30
    func_spec          go to state 31
    struct_union_spec  go to state 32
    struct_union       go to state 33
    param_type_list    go to state 104
    param_list         go to state 105
    param_declaration  go to state 106
    ident_list         go to state 107


State 62

   60 direct_decl: direct_decl '[' . constant ']'
   61            | direct_decl '[' . ']'

    CHARLIT  shift, and go to state 108
    NUMBER   shift, and go to state 109
    ']'      shift, and go to state 110

    constant  go to state 111


State 63

   57 decl: pointer direct_decl .
   60 direct_decl: direct_decl . '[' constant ']'
   61            | direct_decl . '[' ']'
   62            | direct_decl . '(' param_type_list ')'
   63            | direct_decl . '(' ident_list ')'
   64            | direct_decl . '(' ')'

    '('  shift, and go to state 61
    '['  shift, and go to state 62

    $default  reduce using rule 57 (decl)


State 64

   35 struct_union_spec: struct_union IDENT '{' . struct_declaration_list '}'

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    FLOAT     shift, and go to state 6
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    type_spec                go to state 65
    type_qualif              go to state 66
    struct_union_spec        go to state 32
    struct_union             go to state 33
    struct_declaration_list  go to state 112
    struct_declaration       go to state 68
    specific_qualif_list     go to state 69


State 65

   42 specific_qualif_list: type_spec .
   43                     | type_spec . specific_qualif_list

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    FLOAT     shift, and go to state 6
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    $default  reduce using rule 42 (specific_qualif_list)

    type_spec             go to state 65
    type_qualif           go to state 66
    struct_union_spec     go to state 32
    struct_union          go to state 33
    specific_qualif_list  go to state 113


State 66

   44 specific_qualif_list: type_qualif .
   45                     | type_qualif . specific_qualif_list

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    FLOAT     shift, and go to state 6
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    $default  reduce using rule 44 (specific_qualif_list)

    type_spec             go to state 65
    type_qualif           go to state 66
    struct_union_spec     go to state 32
    struct_union          go to state 33
    specific_qualif_list  go to state 114


State 67

   34 struct_union_spec: struct_union '{' struct_declaration_list . '}'
   40 struct_declaration_list: struct_declaration_list . struct_declaration

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    FLOAT     shift, and go to state 6
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '}'       shift, and go to state 115

    type_spec             go to state 65
    type_qualif           go to state 66
    struct_union_spec     go to state 32
    struct_union          go to state 33
    struct_declaration    go to state 116
    specific_qualif_list  go to state 69


State 68

   39 struct_declaration_list: struct_declaration .

    $default  reduce using rule 39 (struct_declaration_list)


State 69

   41 struct_declaration: specific_qualif_list . struct_decl_list ';'

    IDENT  shift, and go to state 37
    '*'    shift, and go to state 38
    '('    shift, and go to state 39

    struct_decl_list  go to state 117
    struct_decl       go to state 118
    decl              go to state 119
    direct_decl       go to state 45
    pointer           go to state 46


State 70

   50 type_qualif_list: type_qualif_list type_qualif .

    $default  reduce using rule 50 (type_qualif_list)


State 71

   68 pointer: '*' type_qualif_list pointer .

    $default  reduce using rule 68 (pointer)


State 72

   59 direct_decl: '(' decl ')' .

    $default  reduce using rule 59 (direct_decl)


State 73

   52 init_decl_list: init_decl_list ',' init_decl .

    $default  reduce using rule 52 (init_decl_list)


State 74

   53 init_decl: decl .
   54          | decl . '=' init

    '='  shift, and go to state 55

    $default  reduce using rule 53 (init_decl)


State 75

  168 prim_expr: IDENT .

    $default  reduce using rule 168 (prim_expr)


State 76

  170 prim_expr: CHARLIT .

    $default  reduce using rule 170 (prim_expr)


State 77

  171 prim_expr: STRING .

    $default  reduce using rule 171 (prim_expr)


State 78

  169 prim_expr: NUMBER .

    $default  reduce using rule 169 (prim_expr)


State 79

  126 unary_expr: PLUSPLUS . unary_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87

    unary_expr    go to state 120
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 80

  127 unary_expr: MINUSMINUS . unary_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87

    unary_expr    go to state 121
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 81

  128 unary_expr: SIZEOF . unary_expr
  129           | SIZEOF . '(' unary_expr ')'

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 122

    unary_expr    go to state 123
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 82

  130 unary_expr: '&' . cast_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87

    unary_expr    go to state 124
    cast_expr     go to state 125
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 83

  132 unary_expr: '+' . cast_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87

    unary_expr    go to state 124
    cast_expr     go to state 126
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 84

  133 unary_expr: '-' . cast_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87

    unary_expr    go to state 124
    cast_expr     go to state 127
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 85

  131 unary_expr: '*' . cast_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87

    unary_expr    go to state 124
    cast_expr     go to state 128
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 86

  134 unary_expr: '~' . cast_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87

    unary_expr    go to state 124
    cast_expr     go to state 129
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 87

  135 unary_expr: '!' . cast_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87

    unary_expr    go to state 124
    cast_expr     go to state 130
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 88

  159 arith_expr: '(' . arith_expr ')'

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    arith_expr    go to state 131
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 89

   54 init_decl: decl '=' init .

    $default  reduce using rule 54 (init_decl)


State 90

   55 init: assign_expr .

    $default  reduce using rule 55 (init)


State 91

  113 assign_expr: unary_expr . '=' assign_expr
  114            | unary_expr . PLUSEQ assign_expr
  115            | unary_expr . MINUSEQ assign_expr
  116            | unary_expr . TIMESEQ assign_expr
  117            | unary_expr . DIVEQ assign_expr
  118            | unary_expr . MODEQ assign_expr
  119            | unary_expr . SHLEQ assign_expr
  120            | unary_expr . SHREQ assign_expr
  121            | unary_expr . ANDEQ assign_expr
  122            | unary_expr . XOREQ assign_expr
  123            | unary_expr . OREQ assign_expr
  161 cast_expr: unary_expr .

    TIMESEQ  shift, and go to state 132
    DIVEQ    shift, and go to state 133
    MODEQ    shift, and go to state 134
    PLUSEQ   shift, and go to state 135
    MINUSEQ  shift, and go to state 136
    SHLEQ    shift, and go to state 137
    SHREQ    shift, and go to state 138
    ANDEQ    shift, and go to state 139
    OREQ     shift, and go to state 140
    XOREQ    shift, and go to state 141
    '='      shift, and go to state 142

    $default  reduce using rule 161 (cast_expr)


State 92

  124 assign_expr: cond_expr .

    $default  reduce using rule 124 (assign_expr)


State 93

  137 cond_expr: arith_expr .
  138          | arith_expr . '?' expr ':' cond_expr
  139 arith_expr: arith_expr . '+' arith_expr
  140           | arith_expr . '-' arith_expr
  141           | arith_expr . '*' arith_expr
  142           | arith_expr . '|' arith_expr
  143           | arith_expr . '^' arith_expr
  144           | arith_expr . '&' arith_expr
  145           | arith_expr . '%' arith_expr
  146           | arith_expr . '/' arith_expr
  147           | arith_expr . SHR arith_expr
  148           | arith_expr . SHL arith_expr
  149           | arith_expr . '<' arith_expr
  150           | arith_expr . '>' arith_expr
  151           | arith_expr . LTEQ arith_expr
  152           | arith_expr . GTEQ arith_expr
  153           | arith_expr . EQEQ arith_expr
  154           | arith_expr . NOTEQ arith_expr
  155           | arith_expr . LOGAND arith_expr
  156           | arith_expr . LOGOR arith_expr
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144
    SHL         shift, and go to state 145
    SHR         shift, and go to state 146
    LTEQ        shift, and go to state 147
    GTEQ        shift, and go to state 148
    EQEQ        shift, and go to state 149
    NOTEQ       shift, and go to state 150
    LOGAND      shift, and go to state 151
    LOGOR       shift, and go to state 152
    '?'         shift, and go to state 153
    '|'         shift, and go to state 154
    '^'         shift, and go to state 155
    '&'         shift, and go to state 156
    '<'         shift, and go to state 157
    '>'         shift, and go to state 158
    '+'         shift, and go to state 159
    '-'         shift, and go to state 160
    '*'         shift, and go to state 161
    '/'         shift, and go to state 162
    '%'         shift, and go to state 163

    $default  reduce using rule 137 (cond_expr)


State 94

  160 arith_expr: cast_expr .

    $default  reduce using rule 160 (arith_expr)


State 95

  125 unary_expr: postfix_expr .
  163 postfix_expr: postfix_expr . '[' expr ']'
  164             | postfix_expr . '.' IDENT
  165             | postfix_expr . INDSEL IDENT
  166             | postfix_expr . '(' ')'
  167             | postfix_expr . '(' expr ')'

    INDSEL  shift, and go to state 164
    '('     shift, and go to state 165
    '.'     shift, and go to state 166
    '['     shift, and go to state 167

    $default  reduce using rule 125 (unary_expr)


State 96

  162 postfix_expr: prim_expr .

    $default  reduce using rule 162 (postfix_expr)


State 97

   79 compound_stmnt: '{' '}' .

    $default  reduce using rule 79 (compound_stmnt)


State 98

   81 compound_stmnt: '{' $@1 . block_item_list '}'

    IDENT       shift, and go to state 168
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    AUTO        shift, and go to state 1
    BREAK       shift, and go to state 169
    CASE        shift, and go to state 170
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    CONTINUE    shift, and go to state 171
    DEFAULT     shift, and go to state 172
    DO          shift, and go to state 173
    DOUBLE      shift, and go to state 4
    EXTERN      shift, and go to state 5
    FLOAT       shift, and go to state 6
    FOR         shift, and go to state 174
    GOTO        shift, and go to state 175
    IF          shift, and go to state 176
    INLINE      shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    REGISTER    shift, and go to state 10
    RESTRICT    shift, and go to state 11
    RETURN      shift, and go to state 177
    SHORT       shift, and go to state 12
    SIGNED      shift, and go to state 13
    SIZEOF      shift, and go to state 81
    STATIC      shift, and go to state 14
    STRUCT      shift, and go to state 15
    SWITCH      shift, and go to state 178
    TYPEDEF     shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    WHILE       shift, and go to state 179
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88
    '{'         shift, and go to state 56

    declaration        go to state 180
    declaration_specs  go to state 58
    declaration_spec   go to state 27
    stg_class_spec     go to state 28
    type_spec          go to state 29
    type_qualif        go to state 30
    func_spec          go to state 31
    struct_union_spec  go to state 32
    struct_union       go to state 33
    compound_stmnt     go to state 181
    block_item_list    go to state 182
    block_item         go to state 183
    statement          go to state 184
    expr_stmnt         go to state 185
    label_stmnt        go to state 186
    select_stmnt       go to state 187
    iterat_stmnt       go to state 188
    jump_stmnt         go to state 189
    expr               go to state 190
    assign_expr        go to state 191
    unary_expr         go to state 91
    cond_expr          go to state 92
    arith_expr         go to state 93
    cast_expr          go to state 94
    postfix_expr       go to state 95
    prim_expr          go to state 96


State 99

   78 declaration_list: declaration_list declaration .

    $default  reduce using rule 78 (declaration_list)


State 100

   76 func_def: declaration_specs decl declaration_list compound_stmnt .

    $default  reduce using rule 76 (func_def)


State 101

   86 ident_list: IDENT .

    $default  reduce using rule 86 (ident_list)


State 102

   64 direct_decl: direct_decl '(' ')' .

    $default  reduce using rule 64 (direct_decl)


State 103

    8 declaration_specs: declaration_specs . declaration_spec
   73 param_declaration: declaration_specs . decl
   74                  | declaration_specs .

    IDENT     shift, and go to state 37
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    STRUCT    shift, and go to state 15
    TYPEDEF   shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '*'       shift, and go to state 38
    '('       shift, and go to state 39

    $default  reduce using rule 74 (param_declaration)

    declaration_spec   go to state 41
    stg_class_spec     go to state 28
    type_spec          go to state 29
    type_qualif        go to state 30
    func_spec          go to state 31
    struct_union_spec  go to state 32
    struct_union       go to state 33
    decl               go to state 192
    direct_decl        go to state 45
    pointer            go to state 46


State 104

   62 direct_decl: direct_decl '(' param_type_list . ')'

    ')'  shift, and go to state 193


State 105

   69 param_type_list: param_list .
   70                | param_list . ',' ELLIPSIS
   72 param_list: param_list . ',' param_declaration

    ','  shift, and go to state 194

    $default  reduce using rule 69 (param_type_list)


State 106

   71 param_list: param_declaration .

    $default  reduce using rule 71 (param_list)


State 107

   63 direct_decl: direct_decl '(' ident_list . ')'
   87 ident_list: ident_list . ',' IDENT

    ','  shift, and go to state 195
    ')'  shift, and go to state 196


State 108

  173 constant: CHARLIT .

    $default  reduce using rule 173 (constant)


State 109

  172 constant: NUMBER .

    $default  reduce using rule 172 (constant)


State 110

   61 direct_decl: direct_decl '[' ']' .

    $default  reduce using rule 61 (direct_decl)


State 111

   60 direct_decl: direct_decl '[' constant . ']'

    ']'  shift, and go to state 197


State 112

   35 struct_union_spec: struct_union IDENT '{' struct_declaration_list . '}'
   40 struct_declaration_list: struct_declaration_list . struct_declaration

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    FLOAT     shift, and go to state 6
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '}'       shift, and go to state 198

    type_spec             go to state 65
    type_qualif           go to state 66
    struct_union_spec     go to state 32
    struct_union          go to state 33
    struct_declaration    go to state 116
    specific_qualif_list  go to state 69


State 113

   43 specific_qualif_list: type_spec specific_qualif_list .

    $default  reduce using rule 43 (specific_qualif_list)


State 114

   45 specific_qualif_list: type_qualif specific_qualif_list .

    $default  reduce using rule 45 (specific_qualif_list)


State 115

   34 struct_union_spec: struct_union '{' struct_declaration_list '}' .

    $default  reduce using rule 34 (struct_union_spec)


State 116

   40 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 40 (struct_declaration_list)


State 117

   41 struct_declaration: specific_qualif_list struct_decl_list . ';'
   47 struct_decl_list: struct_decl_list . ',' struct_decl

    ','  shift, and go to state 199
    ';'  shift, and go to state 200


State 118

   46 struct_decl_list: struct_decl .

    $default  reduce using rule 46 (struct_decl_list)


State 119

   48 struct_decl: decl .

    $default  reduce using rule 48 (struct_decl)


State 120

  126 unary_expr: PLUSPLUS unary_expr .

    $default  reduce using rule 126 (unary_expr)


State 121

  127 unary_expr: MINUSMINUS unary_expr .

    $default  reduce using rule 127 (unary_expr)


State 122

  129 unary_expr: SIZEOF '(' . unary_expr ')'

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87

    unary_expr    go to state 201
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 123

  128 unary_expr: SIZEOF unary_expr .

    $default  reduce using rule 128 (unary_expr)


State 124

  161 cast_expr: unary_expr .

    $default  reduce using rule 161 (cast_expr)


State 125

  130 unary_expr: '&' cast_expr .

    $default  reduce using rule 130 (unary_expr)


State 126

  132 unary_expr: '+' cast_expr .

    $default  reduce using rule 132 (unary_expr)


State 127

  133 unary_expr: '-' cast_expr .

    $default  reduce using rule 133 (unary_expr)


State 128

  131 unary_expr: '*' cast_expr .

    $default  reduce using rule 131 (unary_expr)


State 129

  134 unary_expr: '~' cast_expr .

    $default  reduce using rule 134 (unary_expr)


State 130

  135 unary_expr: '!' cast_expr .

    $default  reduce using rule 135 (unary_expr)


State 131

  139 arith_expr: arith_expr . '+' arith_expr
  140           | arith_expr . '-' arith_expr
  141           | arith_expr . '*' arith_expr
  142           | arith_expr . '|' arith_expr
  143           | arith_expr . '^' arith_expr
  144           | arith_expr . '&' arith_expr
  145           | arith_expr . '%' arith_expr
  146           | arith_expr . '/' arith_expr
  147           | arith_expr . SHR arith_expr
  148           | arith_expr . SHL arith_expr
  149           | arith_expr . '<' arith_expr
  150           | arith_expr . '>' arith_expr
  151           | arith_expr . LTEQ arith_expr
  152           | arith_expr . GTEQ arith_expr
  153           | arith_expr . EQEQ arith_expr
  154           | arith_expr . NOTEQ arith_expr
  155           | arith_expr . LOGAND arith_expr
  156           | arith_expr . LOGOR arith_expr
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS
  159           | '(' arith_expr . ')'

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144
    SHL         shift, and go to state 145
    SHR         shift, and go to state 146
    LTEQ        shift, and go to state 147
    GTEQ        shift, and go to state 148
    EQEQ        shift, and go to state 149
    NOTEQ       shift, and go to state 150
    LOGAND      shift, and go to state 151
    LOGOR       shift, and go to state 152
    '|'         shift, and go to state 154
    '^'         shift, and go to state 155
    '&'         shift, and go to state 156
    '<'         shift, and go to state 157
    '>'         shift, and go to state 158
    '+'         shift, and go to state 159
    '-'         shift, and go to state 160
    '*'         shift, and go to state 161
    '/'         shift, and go to state 162
    '%'         shift, and go to state 163
    ')'         shift, and go to state 202


State 132

  116 assign_expr: unary_expr TIMESEQ . assign_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    assign_expr   go to state 203
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 133

  117 assign_expr: unary_expr DIVEQ . assign_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    assign_expr   go to state 204
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 134

  118 assign_expr: unary_expr MODEQ . assign_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    assign_expr   go to state 205
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 135

  114 assign_expr: unary_expr PLUSEQ . assign_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    assign_expr   go to state 206
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 136

  115 assign_expr: unary_expr MINUSEQ . assign_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    assign_expr   go to state 207
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 137

  119 assign_expr: unary_expr SHLEQ . assign_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    assign_expr   go to state 208
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 138

  120 assign_expr: unary_expr SHREQ . assign_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    assign_expr   go to state 209
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 139

  121 assign_expr: unary_expr ANDEQ . assign_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    assign_expr   go to state 210
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 140

  123 assign_expr: unary_expr OREQ . assign_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    assign_expr   go to state 211
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 141

  122 assign_expr: unary_expr XOREQ . assign_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    assign_expr   go to state 212
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 142

  113 assign_expr: unary_expr '=' . assign_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    assign_expr   go to state 213
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 143

  157 arith_expr: arith_expr PLUSPLUS .

    $default  reduce using rule 157 (arith_expr)


State 144

  158 arith_expr: arith_expr MINUSMINUS .

    $default  reduce using rule 158 (arith_expr)


State 145

  148 arith_expr: arith_expr SHL . arith_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    arith_expr    go to state 214
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 146

  147 arith_expr: arith_expr SHR . arith_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    arith_expr    go to state 215
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 147

  151 arith_expr: arith_expr LTEQ . arith_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    arith_expr    go to state 216
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 148

  152 arith_expr: arith_expr GTEQ . arith_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    arith_expr    go to state 217
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 149

  153 arith_expr: arith_expr EQEQ . arith_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    arith_expr    go to state 218
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 150

  154 arith_expr: arith_expr NOTEQ . arith_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    arith_expr    go to state 219
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 151

  155 arith_expr: arith_expr LOGAND . arith_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    arith_expr    go to state 220
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 152

  156 arith_expr: arith_expr LOGOR . arith_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    arith_expr    go to state 221
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 153

  138 cond_expr: arith_expr '?' . expr ':' cond_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    expr          go to state 222
    assign_expr   go to state 191
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 154

  142 arith_expr: arith_expr '|' . arith_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    arith_expr    go to state 223
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 155

  143 arith_expr: arith_expr '^' . arith_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    arith_expr    go to state 224
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 156

  144 arith_expr: arith_expr '&' . arith_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    arith_expr    go to state 225
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 157

  149 arith_expr: arith_expr '<' . arith_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    arith_expr    go to state 226
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 158

  150 arith_expr: arith_expr '>' . arith_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    arith_expr    go to state 227
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 159

  139 arith_expr: arith_expr '+' . arith_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    arith_expr    go to state 228
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 160

  140 arith_expr: arith_expr '-' . arith_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    arith_expr    go to state 229
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 161

  141 arith_expr: arith_expr '*' . arith_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    arith_expr    go to state 230
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 162

  146 arith_expr: arith_expr '/' . arith_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    arith_expr    go to state 231
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 163

  145 arith_expr: arith_expr '%' . arith_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    arith_expr    go to state 232
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 164

  165 postfix_expr: postfix_expr INDSEL . IDENT

    IDENT  shift, and go to state 233


State 165

  166 postfix_expr: postfix_expr '(' . ')'
  167             | postfix_expr '(' . expr ')'

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88
    ')'         shift, and go to state 234

    expr          go to state 235
    assign_expr   go to state 191
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 166

  164 postfix_expr: postfix_expr '.' . IDENT

    IDENT  shift, and go to state 236


State 167

  163 postfix_expr: postfix_expr '[' . expr ']'

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    expr          go to state 237
    assign_expr   go to state 191
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 168

   95 label_stmnt: IDENT . ':' statement
  168 prim_expr: IDENT .

    ':'  shift, and go to state 238

    $default  reduce using rule 168 (prim_expr)


State 169

  109 jump_stmnt: BREAK . ';'

    ';'  shift, and go to state 239


State 170

   96 label_stmnt: CASE . const_expr ':' statement

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    const_expr    go to state 240
    cond_expr     go to state 241
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 171

  108 jump_stmnt: CONTINUE . ';'

    ';'  shift, and go to state 242


State 172

   97 label_stmnt: DEFAULT . ':' statement

    ':'  shift, and go to state 243


State 173

  102 iterat_stmnt: DO . statement WHILE '(' expr ')' ';'

    IDENT       shift, and go to state 168
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    BREAK       shift, and go to state 169
    CASE        shift, and go to state 170
    CONTINUE    shift, and go to state 171
    DEFAULT     shift, and go to state 172
    DO          shift, and go to state 173
    FOR         shift, and go to state 174
    GOTO        shift, and go to state 175
    IF          shift, and go to state 176
    RETURN      shift, and go to state 177
    SIZEOF      shift, and go to state 81
    SWITCH      shift, and go to state 178
    WHILE       shift, and go to state 179
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88
    '{'         shift, and go to state 56

    compound_stmnt  go to state 181
    statement       go to state 244
    expr_stmnt      go to state 185
    label_stmnt     go to state 186
    select_stmnt    go to state 187
    iterat_stmnt    go to state 188
    jump_stmnt      go to state 189
    expr            go to state 190
    assign_expr     go to state 191
    unary_expr      go to state 91
    cond_expr       go to state 92
    arith_expr      go to state 93
    cast_expr       go to state 94
    postfix_expr    go to state 95
    prim_expr       go to state 96


State 174

  103 iterat_stmnt: FOR . '(' expr_opt ';' expr_opt ';' expr_opt ')' statement
  104             | FOR . '(' declaration expr_opt ';' expr_opt ')' statement

    '('  shift, and go to state 245


State 175

  107 jump_stmnt: GOTO . IDENT ';'

    IDENT  shift, and go to state 246


State 176

   98 select_stmnt: IF . '(' expr ')' statement
   99             | IF . '(' expr ')' ELSE statement

    '('  shift, and go to state 247


State 177

  110 jump_stmnt: RETURN . expr_opt ';'

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    $default  reduce using rule 106 (expr_opt)

    expr_opt      go to state 248
    expr          go to state 249
    assign_expr   go to state 191
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 178

  100 select_stmnt: SWITCH . '(' expr ')' statement

    '('  shift, and go to state 250


State 179

  101 iterat_stmnt: WHILE . '(' expr ')' statement

    '('  shift, and go to state 251


State 180

   84 block_item: declaration .

    $default  reduce using rule 84 (block_item)


State 181

   90 statement: compound_stmnt .

    $default  reduce using rule 90 (statement)


State 182

   81 compound_stmnt: '{' $@1 block_item_list . '}'
   83 block_item_list: block_item_list . block_item

    IDENT       shift, and go to state 168
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    AUTO        shift, and go to state 1
    BREAK       shift, and go to state 169
    CASE        shift, and go to state 170
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    CONTINUE    shift, and go to state 171
    DEFAULT     shift, and go to state 172
    DO          shift, and go to state 173
    DOUBLE      shift, and go to state 4
    EXTERN      shift, and go to state 5
    FLOAT       shift, and go to state 6
    FOR         shift, and go to state 174
    GOTO        shift, and go to state 175
    IF          shift, and go to state 176
    INLINE      shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    REGISTER    shift, and go to state 10
    RESTRICT    shift, and go to state 11
    RETURN      shift, and go to state 177
    SHORT       shift, and go to state 12
    SIGNED      shift, and go to state 13
    SIZEOF      shift, and go to state 81
    STATIC      shift, and go to state 14
    STRUCT      shift, and go to state 15
    SWITCH      shift, and go to state 178
    TYPEDEF     shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    WHILE       shift, and go to state 179
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88
    '{'         shift, and go to state 56
    '}'         shift, and go to state 252

    declaration        go to state 180
    declaration_specs  go to state 58
    declaration_spec   go to state 27
    stg_class_spec     go to state 28
    type_spec          go to state 29
    type_qualif        go to state 30
    func_spec          go to state 31
    struct_union_spec  go to state 32
    struct_union       go to state 33
    compound_stmnt     go to state 181
    block_item         go to state 253
    statement          go to state 184
    expr_stmnt         go to state 185
    label_stmnt        go to state 186
    select_stmnt       go to state 187
    iterat_stmnt       go to state 188
    jump_stmnt         go to state 189
    expr               go to state 190
    assign_expr        go to state 191
    unary_expr         go to state 91
    cond_expr          go to state 92
    arith_expr         go to state 93
    cast_expr          go to state 94
    postfix_expr       go to state 95
    prim_expr          go to state 96


State 183

   82 block_item_list: block_item .

    $default  reduce using rule 82 (block_item_list)


State 184

   85 block_item: statement .

    $default  reduce using rule 85 (block_item)


State 185

   88 statement: expr_stmnt .

    $default  reduce using rule 88 (statement)


State 186

   89 statement: label_stmnt .

    $default  reduce using rule 89 (statement)


State 187

   91 statement: select_stmnt .

    $default  reduce using rule 91 (statement)


State 188

   92 statement: iterat_stmnt .

    $default  reduce using rule 92 (statement)


State 189

   93 statement: jump_stmnt .

    $default  reduce using rule 93 (statement)


State 190

   94 expr_stmnt: expr . ';'
  112 expr: expr . ',' assign_expr

    ','  shift, and go to state 254
    ';'  shift, and go to state 255


State 191

  111 expr: assign_expr .

    $default  reduce using rule 111 (expr)


State 192

   73 param_declaration: declaration_specs decl .

    $default  reduce using rule 73 (param_declaration)


State 193

   62 direct_decl: direct_decl '(' param_type_list ')' .

    $default  reduce using rule 62 (direct_decl)


State 194

   70 param_type_list: param_list ',' . ELLIPSIS
   72 param_list: param_list ',' . param_declaration

    ELLIPSIS  shift, and go to state 256
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    STRUCT    shift, and go to state 15
    TYPEDEF   shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    declaration_specs  go to state 103
    declaration_spec   go to state 27
    stg_class_spec     go to state 28
    type_spec          go to state 29
    type_qualif        go to state 30
    func_spec          go to state 31
    struct_union_spec  go to state 32
    struct_union       go to state 33
    param_declaration  go to state 257


State 195

   87 ident_list: ident_list ',' . IDENT

    IDENT  shift, and go to state 258


State 196

   63 direct_decl: direct_decl '(' ident_list ')' .

    $default  reduce using rule 63 (direct_decl)


State 197

   60 direct_decl: direct_decl '[' constant ']' .

    $default  reduce using rule 60 (direct_decl)


State 198

   35 struct_union_spec: struct_union IDENT '{' struct_declaration_list '}' .

    $default  reduce using rule 35 (struct_union_spec)


State 199

   47 struct_decl_list: struct_decl_list ',' . struct_decl

    IDENT  shift, and go to state 37
    '*'    shift, and go to state 38
    '('    shift, and go to state 39

    struct_decl  go to state 259
    decl         go to state 119
    direct_decl  go to state 45
    pointer      go to state 46


State 200

   41 struct_declaration: specific_qualif_list struct_decl_list ';' .

    $default  reduce using rule 41 (struct_declaration)


State 201

  129 unary_expr: SIZEOF '(' unary_expr . ')'

    ')'  shift, and go to state 260


State 202

  159 arith_expr: '(' arith_expr ')' .

    $default  reduce using rule 159 (arith_expr)


State 203

  116 assign_expr: unary_expr TIMESEQ assign_expr .

    $default  reduce using rule 116 (assign_expr)


State 204

  117 assign_expr: unary_expr DIVEQ assign_expr .

    $default  reduce using rule 117 (assign_expr)


State 205

  118 assign_expr: unary_expr MODEQ assign_expr .

    $default  reduce using rule 118 (assign_expr)


State 206

  114 assign_expr: unary_expr PLUSEQ assign_expr .

    $default  reduce using rule 114 (assign_expr)


State 207

  115 assign_expr: unary_expr MINUSEQ assign_expr .

    $default  reduce using rule 115 (assign_expr)


State 208

  119 assign_expr: unary_expr SHLEQ assign_expr .

    $default  reduce using rule 119 (assign_expr)


State 209

  120 assign_expr: unary_expr SHREQ assign_expr .

    $default  reduce using rule 120 (assign_expr)


State 210

  121 assign_expr: unary_expr ANDEQ assign_expr .

    $default  reduce using rule 121 (assign_expr)


State 211

  123 assign_expr: unary_expr OREQ assign_expr .

    $default  reduce using rule 123 (assign_expr)


State 212

  122 assign_expr: unary_expr XOREQ assign_expr .

    $default  reduce using rule 122 (assign_expr)


State 213

  113 assign_expr: unary_expr '=' assign_expr .

    $default  reduce using rule 113 (assign_expr)


State 214

  139 arith_expr: arith_expr . '+' arith_expr
  140           | arith_expr . '-' arith_expr
  141           | arith_expr . '*' arith_expr
  142           | arith_expr . '|' arith_expr
  143           | arith_expr . '^' arith_expr
  144           | arith_expr . '&' arith_expr
  145           | arith_expr . '%' arith_expr
  146           | arith_expr . '/' arith_expr
  147           | arith_expr . SHR arith_expr
  148           | arith_expr . SHL arith_expr
  148           | arith_expr SHL arith_expr .
  149           | arith_expr . '<' arith_expr
  150           | arith_expr . '>' arith_expr
  151           | arith_expr . LTEQ arith_expr
  152           | arith_expr . GTEQ arith_expr
  153           | arith_expr . EQEQ arith_expr
  154           | arith_expr . NOTEQ arith_expr
  155           | arith_expr . LOGAND arith_expr
  156           | arith_expr . LOGOR arith_expr
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144
    '+'         shift, and go to state 159
    '-'         shift, and go to state 160
    '*'         shift, and go to state 161
    '/'         shift, and go to state 162
    '%'         shift, and go to state 163

    $default  reduce using rule 148 (arith_expr)


State 215

  139 arith_expr: arith_expr . '+' arith_expr
  140           | arith_expr . '-' arith_expr
  141           | arith_expr . '*' arith_expr
  142           | arith_expr . '|' arith_expr
  143           | arith_expr . '^' arith_expr
  144           | arith_expr . '&' arith_expr
  145           | arith_expr . '%' arith_expr
  146           | arith_expr . '/' arith_expr
  147           | arith_expr . SHR arith_expr
  147           | arith_expr SHR arith_expr .
  148           | arith_expr . SHL arith_expr
  149           | arith_expr . '<' arith_expr
  150           | arith_expr . '>' arith_expr
  151           | arith_expr . LTEQ arith_expr
  152           | arith_expr . GTEQ arith_expr
  153           | arith_expr . EQEQ arith_expr
  154           | arith_expr . NOTEQ arith_expr
  155           | arith_expr . LOGAND arith_expr
  156           | arith_expr . LOGOR arith_expr
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144
    '+'         shift, and go to state 159
    '-'         shift, and go to state 160
    '*'         shift, and go to state 161
    '/'         shift, and go to state 162
    '%'         shift, and go to state 163

    $default  reduce using rule 147 (arith_expr)


State 216

  139 arith_expr: arith_expr . '+' arith_expr
  140           | arith_expr . '-' arith_expr
  141           | arith_expr . '*' arith_expr
  142           | arith_expr . '|' arith_expr
  143           | arith_expr . '^' arith_expr
  144           | arith_expr . '&' arith_expr
  145           | arith_expr . '%' arith_expr
  146           | arith_expr . '/' arith_expr
  147           | arith_expr . SHR arith_expr
  148           | arith_expr . SHL arith_expr
  149           | arith_expr . '<' arith_expr
  150           | arith_expr . '>' arith_expr
  151           | arith_expr . LTEQ arith_expr
  151           | arith_expr LTEQ arith_expr .
  152           | arith_expr . GTEQ arith_expr
  153           | arith_expr . EQEQ arith_expr
  154           | arith_expr . NOTEQ arith_expr
  155           | arith_expr . LOGAND arith_expr
  156           | arith_expr . LOGOR arith_expr
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144
    SHL         shift, and go to state 145
    SHR         shift, and go to state 146
    '+'         shift, and go to state 159
    '-'         shift, and go to state 160
    '*'         shift, and go to state 161
    '/'         shift, and go to state 162
    '%'         shift, and go to state 163

    $default  reduce using rule 151 (arith_expr)


State 217

  139 arith_expr: arith_expr . '+' arith_expr
  140           | arith_expr . '-' arith_expr
  141           | arith_expr . '*' arith_expr
  142           | arith_expr . '|' arith_expr
  143           | arith_expr . '^' arith_expr
  144           | arith_expr . '&' arith_expr
  145           | arith_expr . '%' arith_expr
  146           | arith_expr . '/' arith_expr
  147           | arith_expr . SHR arith_expr
  148           | arith_expr . SHL arith_expr
  149           | arith_expr . '<' arith_expr
  150           | arith_expr . '>' arith_expr
  151           | arith_expr . LTEQ arith_expr
  152           | arith_expr . GTEQ arith_expr
  152           | arith_expr GTEQ arith_expr .
  153           | arith_expr . EQEQ arith_expr
  154           | arith_expr . NOTEQ arith_expr
  155           | arith_expr . LOGAND arith_expr
  156           | arith_expr . LOGOR arith_expr
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144
    SHL         shift, and go to state 145
    SHR         shift, and go to state 146
    '+'         shift, and go to state 159
    '-'         shift, and go to state 160
    '*'         shift, and go to state 161
    '/'         shift, and go to state 162
    '%'         shift, and go to state 163

    $default  reduce using rule 152 (arith_expr)


State 218

  139 arith_expr: arith_expr . '+' arith_expr
  140           | arith_expr . '-' arith_expr
  141           | arith_expr . '*' arith_expr
  142           | arith_expr . '|' arith_expr
  143           | arith_expr . '^' arith_expr
  144           | arith_expr . '&' arith_expr
  145           | arith_expr . '%' arith_expr
  146           | arith_expr . '/' arith_expr
  147           | arith_expr . SHR arith_expr
  148           | arith_expr . SHL arith_expr
  149           | arith_expr . '<' arith_expr
  150           | arith_expr . '>' arith_expr
  151           | arith_expr . LTEQ arith_expr
  152           | arith_expr . GTEQ arith_expr
  153           | arith_expr . EQEQ arith_expr
  153           | arith_expr EQEQ arith_expr .
  154           | arith_expr . NOTEQ arith_expr
  155           | arith_expr . LOGAND arith_expr
  156           | arith_expr . LOGOR arith_expr
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144
    SHL         shift, and go to state 145
    SHR         shift, and go to state 146
    LTEQ        shift, and go to state 147
    GTEQ        shift, and go to state 148
    '<'         shift, and go to state 157
    '>'         shift, and go to state 158
    '+'         shift, and go to state 159
    '-'         shift, and go to state 160
    '*'         shift, and go to state 161
    '/'         shift, and go to state 162
    '%'         shift, and go to state 163

    $default  reduce using rule 153 (arith_expr)


State 219

  139 arith_expr: arith_expr . '+' arith_expr
  140           | arith_expr . '-' arith_expr
  141           | arith_expr . '*' arith_expr
  142           | arith_expr . '|' arith_expr
  143           | arith_expr . '^' arith_expr
  144           | arith_expr . '&' arith_expr
  145           | arith_expr . '%' arith_expr
  146           | arith_expr . '/' arith_expr
  147           | arith_expr . SHR arith_expr
  148           | arith_expr . SHL arith_expr
  149           | arith_expr . '<' arith_expr
  150           | arith_expr . '>' arith_expr
  151           | arith_expr . LTEQ arith_expr
  152           | arith_expr . GTEQ arith_expr
  153           | arith_expr . EQEQ arith_expr
  154           | arith_expr . NOTEQ arith_expr
  154           | arith_expr NOTEQ arith_expr .
  155           | arith_expr . LOGAND arith_expr
  156           | arith_expr . LOGOR arith_expr
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144
    SHL         shift, and go to state 145
    SHR         shift, and go to state 146
    LTEQ        shift, and go to state 147
    GTEQ        shift, and go to state 148
    '<'         shift, and go to state 157
    '>'         shift, and go to state 158
    '+'         shift, and go to state 159
    '-'         shift, and go to state 160
    '*'         shift, and go to state 161
    '/'         shift, and go to state 162
    '%'         shift, and go to state 163

    $default  reduce using rule 154 (arith_expr)


State 220

  139 arith_expr: arith_expr . '+' arith_expr
  140           | arith_expr . '-' arith_expr
  141           | arith_expr . '*' arith_expr
  142           | arith_expr . '|' arith_expr
  143           | arith_expr . '^' arith_expr
  144           | arith_expr . '&' arith_expr
  145           | arith_expr . '%' arith_expr
  146           | arith_expr . '/' arith_expr
  147           | arith_expr . SHR arith_expr
  148           | arith_expr . SHL arith_expr
  149           | arith_expr . '<' arith_expr
  150           | arith_expr . '>' arith_expr
  151           | arith_expr . LTEQ arith_expr
  152           | arith_expr . GTEQ arith_expr
  153           | arith_expr . EQEQ arith_expr
  154           | arith_expr . NOTEQ arith_expr
  155           | arith_expr . LOGAND arith_expr
  155           | arith_expr LOGAND arith_expr .
  156           | arith_expr . LOGOR arith_expr
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144
    SHL         shift, and go to state 145
    SHR         shift, and go to state 146
    LTEQ        shift, and go to state 147
    GTEQ        shift, and go to state 148
    EQEQ        shift, and go to state 149
    NOTEQ       shift, and go to state 150
    '|'         shift, and go to state 154
    '^'         shift, and go to state 155
    '&'         shift, and go to state 156
    '<'         shift, and go to state 157
    '>'         shift, and go to state 158
    '+'         shift, and go to state 159
    '-'         shift, and go to state 160
    '*'         shift, and go to state 161
    '/'         shift, and go to state 162
    '%'         shift, and go to state 163

    $default  reduce using rule 155 (arith_expr)


State 221

  139 arith_expr: arith_expr . '+' arith_expr
  140           | arith_expr . '-' arith_expr
  141           | arith_expr . '*' arith_expr
  142           | arith_expr . '|' arith_expr
  143           | arith_expr . '^' arith_expr
  144           | arith_expr . '&' arith_expr
  145           | arith_expr . '%' arith_expr
  146           | arith_expr . '/' arith_expr
  147           | arith_expr . SHR arith_expr
  148           | arith_expr . SHL arith_expr
  149           | arith_expr . '<' arith_expr
  150           | arith_expr . '>' arith_expr
  151           | arith_expr . LTEQ arith_expr
  152           | arith_expr . GTEQ arith_expr
  153           | arith_expr . EQEQ arith_expr
  154           | arith_expr . NOTEQ arith_expr
  155           | arith_expr . LOGAND arith_expr
  156           | arith_expr . LOGOR arith_expr
  156           | arith_expr LOGOR arith_expr .
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144
    SHL         shift, and go to state 145
    SHR         shift, and go to state 146
    LTEQ        shift, and go to state 147
    GTEQ        shift, and go to state 148
    EQEQ        shift, and go to state 149
    NOTEQ       shift, and go to state 150
    LOGAND      shift, and go to state 151
    '|'         shift, and go to state 154
    '^'         shift, and go to state 155
    '&'         shift, and go to state 156
    '<'         shift, and go to state 157
    '>'         shift, and go to state 158
    '+'         shift, and go to state 159
    '-'         shift, and go to state 160
    '*'         shift, and go to state 161
    '/'         shift, and go to state 162
    '%'         shift, and go to state 163

    $default  reduce using rule 156 (arith_expr)


State 222

  112 expr: expr . ',' assign_expr
  138 cond_expr: arith_expr '?' expr . ':' cond_expr

    ','  shift, and go to state 254
    ':'  shift, and go to state 261


State 223

  139 arith_expr: arith_expr . '+' arith_expr
  140           | arith_expr . '-' arith_expr
  141           | arith_expr . '*' arith_expr
  142           | arith_expr . '|' arith_expr
  142           | arith_expr '|' arith_expr .
  143           | arith_expr . '^' arith_expr
  144           | arith_expr . '&' arith_expr
  145           | arith_expr . '%' arith_expr
  146           | arith_expr . '/' arith_expr
  147           | arith_expr . SHR arith_expr
  148           | arith_expr . SHL arith_expr
  149           | arith_expr . '<' arith_expr
  150           | arith_expr . '>' arith_expr
  151           | arith_expr . LTEQ arith_expr
  152           | arith_expr . GTEQ arith_expr
  153           | arith_expr . EQEQ arith_expr
  154           | arith_expr . NOTEQ arith_expr
  155           | arith_expr . LOGAND arith_expr
  156           | arith_expr . LOGOR arith_expr
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144
    SHL         shift, and go to state 145
    SHR         shift, and go to state 146
    LTEQ        shift, and go to state 147
    GTEQ        shift, and go to state 148
    EQEQ        shift, and go to state 149
    NOTEQ       shift, and go to state 150
    '^'         shift, and go to state 155
    '&'         shift, and go to state 156
    '<'         shift, and go to state 157
    '>'         shift, and go to state 158
    '+'         shift, and go to state 159
    '-'         shift, and go to state 160
    '*'         shift, and go to state 161
    '/'         shift, and go to state 162
    '%'         shift, and go to state 163

    $default  reduce using rule 142 (arith_expr)


State 224

  139 arith_expr: arith_expr . '+' arith_expr
  140           | arith_expr . '-' arith_expr
  141           | arith_expr . '*' arith_expr
  142           | arith_expr . '|' arith_expr
  143           | arith_expr . '^' arith_expr
  143           | arith_expr '^' arith_expr .
  144           | arith_expr . '&' arith_expr
  145           | arith_expr . '%' arith_expr
  146           | arith_expr . '/' arith_expr
  147           | arith_expr . SHR arith_expr
  148           | arith_expr . SHL arith_expr
  149           | arith_expr . '<' arith_expr
  150           | arith_expr . '>' arith_expr
  151           | arith_expr . LTEQ arith_expr
  152           | arith_expr . GTEQ arith_expr
  153           | arith_expr . EQEQ arith_expr
  154           | arith_expr . NOTEQ arith_expr
  155           | arith_expr . LOGAND arith_expr
  156           | arith_expr . LOGOR arith_expr
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144
    SHL         shift, and go to state 145
    SHR         shift, and go to state 146
    LTEQ        shift, and go to state 147
    GTEQ        shift, and go to state 148
    EQEQ        shift, and go to state 149
    NOTEQ       shift, and go to state 150
    '&'         shift, and go to state 156
    '<'         shift, and go to state 157
    '>'         shift, and go to state 158
    '+'         shift, and go to state 159
    '-'         shift, and go to state 160
    '*'         shift, and go to state 161
    '/'         shift, and go to state 162
    '%'         shift, and go to state 163

    $default  reduce using rule 143 (arith_expr)


State 225

  139 arith_expr: arith_expr . '+' arith_expr
  140           | arith_expr . '-' arith_expr
  141           | arith_expr . '*' arith_expr
  142           | arith_expr . '|' arith_expr
  143           | arith_expr . '^' arith_expr
  144           | arith_expr . '&' arith_expr
  144           | arith_expr '&' arith_expr .
  145           | arith_expr . '%' arith_expr
  146           | arith_expr . '/' arith_expr
  147           | arith_expr . SHR arith_expr
  148           | arith_expr . SHL arith_expr
  149           | arith_expr . '<' arith_expr
  150           | arith_expr . '>' arith_expr
  151           | arith_expr . LTEQ arith_expr
  152           | arith_expr . GTEQ arith_expr
  153           | arith_expr . EQEQ arith_expr
  154           | arith_expr . NOTEQ arith_expr
  155           | arith_expr . LOGAND arith_expr
  156           | arith_expr . LOGOR arith_expr
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144
    SHL         shift, and go to state 145
    SHR         shift, and go to state 146
    LTEQ        shift, and go to state 147
    GTEQ        shift, and go to state 148
    EQEQ        shift, and go to state 149
    NOTEQ       shift, and go to state 150
    '<'         shift, and go to state 157
    '>'         shift, and go to state 158
    '+'         shift, and go to state 159
    '-'         shift, and go to state 160
    '*'         shift, and go to state 161
    '/'         shift, and go to state 162
    '%'         shift, and go to state 163

    $default  reduce using rule 144 (arith_expr)


State 226

  139 arith_expr: arith_expr . '+' arith_expr
  140           | arith_expr . '-' arith_expr
  141           | arith_expr . '*' arith_expr
  142           | arith_expr . '|' arith_expr
  143           | arith_expr . '^' arith_expr
  144           | arith_expr . '&' arith_expr
  145           | arith_expr . '%' arith_expr
  146           | arith_expr . '/' arith_expr
  147           | arith_expr . SHR arith_expr
  148           | arith_expr . SHL arith_expr
  149           | arith_expr . '<' arith_expr
  149           | arith_expr '<' arith_expr .
  150           | arith_expr . '>' arith_expr
  151           | arith_expr . LTEQ arith_expr
  152           | arith_expr . GTEQ arith_expr
  153           | arith_expr . EQEQ arith_expr
  154           | arith_expr . NOTEQ arith_expr
  155           | arith_expr . LOGAND arith_expr
  156           | arith_expr . LOGOR arith_expr
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144
    SHL         shift, and go to state 145
    SHR         shift, and go to state 146
    '+'         shift, and go to state 159
    '-'         shift, and go to state 160
    '*'         shift, and go to state 161
    '/'         shift, and go to state 162
    '%'         shift, and go to state 163

    $default  reduce using rule 149 (arith_expr)


State 227

  139 arith_expr: arith_expr . '+' arith_expr
  140           | arith_expr . '-' arith_expr
  141           | arith_expr . '*' arith_expr
  142           | arith_expr . '|' arith_expr
  143           | arith_expr . '^' arith_expr
  144           | arith_expr . '&' arith_expr
  145           | arith_expr . '%' arith_expr
  146           | arith_expr . '/' arith_expr
  147           | arith_expr . SHR arith_expr
  148           | arith_expr . SHL arith_expr
  149           | arith_expr . '<' arith_expr
  150           | arith_expr . '>' arith_expr
  150           | arith_expr '>' arith_expr .
  151           | arith_expr . LTEQ arith_expr
  152           | arith_expr . GTEQ arith_expr
  153           | arith_expr . EQEQ arith_expr
  154           | arith_expr . NOTEQ arith_expr
  155           | arith_expr . LOGAND arith_expr
  156           | arith_expr . LOGOR arith_expr
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144
    SHL         shift, and go to state 145
    SHR         shift, and go to state 146
    '+'         shift, and go to state 159
    '-'         shift, and go to state 160
    '*'         shift, and go to state 161
    '/'         shift, and go to state 162
    '%'         shift, and go to state 163

    $default  reduce using rule 150 (arith_expr)


State 228

  139 arith_expr: arith_expr . '+' arith_expr
  139           | arith_expr '+' arith_expr .
  140           | arith_expr . '-' arith_expr
  141           | arith_expr . '*' arith_expr
  142           | arith_expr . '|' arith_expr
  143           | arith_expr . '^' arith_expr
  144           | arith_expr . '&' arith_expr
  145           | arith_expr . '%' arith_expr
  146           | arith_expr . '/' arith_expr
  147           | arith_expr . SHR arith_expr
  148           | arith_expr . SHL arith_expr
  149           | arith_expr . '<' arith_expr
  150           | arith_expr . '>' arith_expr
  151           | arith_expr . LTEQ arith_expr
  152           | arith_expr . GTEQ arith_expr
  153           | arith_expr . EQEQ arith_expr
  154           | arith_expr . NOTEQ arith_expr
  155           | arith_expr . LOGAND arith_expr
  156           | arith_expr . LOGOR arith_expr
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144
    '*'         shift, and go to state 161
    '/'         shift, and go to state 162
    '%'         shift, and go to state 163

    $default  reduce using rule 139 (arith_expr)


State 229

  139 arith_expr: arith_expr . '+' arith_expr
  140           | arith_expr . '-' arith_expr
  140           | arith_expr '-' arith_expr .
  141           | arith_expr . '*' arith_expr
  142           | arith_expr . '|' arith_expr
  143           | arith_expr . '^' arith_expr
  144           | arith_expr . '&' arith_expr
  145           | arith_expr . '%' arith_expr
  146           | arith_expr . '/' arith_expr
  147           | arith_expr . SHR arith_expr
  148           | arith_expr . SHL arith_expr
  149           | arith_expr . '<' arith_expr
  150           | arith_expr . '>' arith_expr
  151           | arith_expr . LTEQ arith_expr
  152           | arith_expr . GTEQ arith_expr
  153           | arith_expr . EQEQ arith_expr
  154           | arith_expr . NOTEQ arith_expr
  155           | arith_expr . LOGAND arith_expr
  156           | arith_expr . LOGOR arith_expr
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144
    '*'         shift, and go to state 161
    '/'         shift, and go to state 162
    '%'         shift, and go to state 163

    $default  reduce using rule 140 (arith_expr)


State 230

  139 arith_expr: arith_expr . '+' arith_expr
  140           | arith_expr . '-' arith_expr
  141           | arith_expr . '*' arith_expr
  141           | arith_expr '*' arith_expr .
  142           | arith_expr . '|' arith_expr
  143           | arith_expr . '^' arith_expr
  144           | arith_expr . '&' arith_expr
  145           | arith_expr . '%' arith_expr
  146           | arith_expr . '/' arith_expr
  147           | arith_expr . SHR arith_expr
  148           | arith_expr . SHL arith_expr
  149           | arith_expr . '<' arith_expr
  150           | arith_expr . '>' arith_expr
  151           | arith_expr . LTEQ arith_expr
  152           | arith_expr . GTEQ arith_expr
  153           | arith_expr . EQEQ arith_expr
  154           | arith_expr . NOTEQ arith_expr
  155           | arith_expr . LOGAND arith_expr
  156           | arith_expr . LOGOR arith_expr
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144

    $default  reduce using rule 141 (arith_expr)


State 231

  139 arith_expr: arith_expr . '+' arith_expr
  140           | arith_expr . '-' arith_expr
  141           | arith_expr . '*' arith_expr
  142           | arith_expr . '|' arith_expr
  143           | arith_expr . '^' arith_expr
  144           | arith_expr . '&' arith_expr
  145           | arith_expr . '%' arith_expr
  146           | arith_expr . '/' arith_expr
  146           | arith_expr '/' arith_expr .
  147           | arith_expr . SHR arith_expr
  148           | arith_expr . SHL arith_expr
  149           | arith_expr . '<' arith_expr
  150           | arith_expr . '>' arith_expr
  151           | arith_expr . LTEQ arith_expr
  152           | arith_expr . GTEQ arith_expr
  153           | arith_expr . EQEQ arith_expr
  154           | arith_expr . NOTEQ arith_expr
  155           | arith_expr . LOGAND arith_expr
  156           | arith_expr . LOGOR arith_expr
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144

    $default  reduce using rule 146 (arith_expr)


State 232

  139 arith_expr: arith_expr . '+' arith_expr
  140           | arith_expr . '-' arith_expr
  141           | arith_expr . '*' arith_expr
  142           | arith_expr . '|' arith_expr
  143           | arith_expr . '^' arith_expr
  144           | arith_expr . '&' arith_expr
  145           | arith_expr . '%' arith_expr
  145           | arith_expr '%' arith_expr .
  146           | arith_expr . '/' arith_expr
  147           | arith_expr . SHR arith_expr
  148           | arith_expr . SHL arith_expr
  149           | arith_expr . '<' arith_expr
  150           | arith_expr . '>' arith_expr
  151           | arith_expr . LTEQ arith_expr
  152           | arith_expr . GTEQ arith_expr
  153           | arith_expr . EQEQ arith_expr
  154           | arith_expr . NOTEQ arith_expr
  155           | arith_expr . LOGAND arith_expr
  156           | arith_expr . LOGOR arith_expr
  157           | arith_expr . PLUSPLUS
  158           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 143
    MINUSMINUS  shift, and go to state 144

    $default  reduce using rule 145 (arith_expr)


State 233

  165 postfix_expr: postfix_expr INDSEL IDENT .

    $default  reduce using rule 165 (postfix_expr)


State 234

  166 postfix_expr: postfix_expr '(' ')' .

    $default  reduce using rule 166 (postfix_expr)


State 235

  112 expr: expr . ',' assign_expr
  167 postfix_expr: postfix_expr '(' expr . ')'

    ','  shift, and go to state 254
    ')'  shift, and go to state 262


State 236

  164 postfix_expr: postfix_expr '.' IDENT .

    $default  reduce using rule 164 (postfix_expr)


State 237

  112 expr: expr . ',' assign_expr
  163 postfix_expr: postfix_expr '[' expr . ']'

    ','  shift, and go to state 254
    ']'  shift, and go to state 263


State 238

   95 label_stmnt: IDENT ':' . statement

    IDENT       shift, and go to state 168
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    BREAK       shift, and go to state 169
    CASE        shift, and go to state 170
    CONTINUE    shift, and go to state 171
    DEFAULT     shift, and go to state 172
    DO          shift, and go to state 173
    FOR         shift, and go to state 174
    GOTO        shift, and go to state 175
    IF          shift, and go to state 176
    RETURN      shift, and go to state 177
    SIZEOF      shift, and go to state 81
    SWITCH      shift, and go to state 178
    WHILE       shift, and go to state 179
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88
    '{'         shift, and go to state 56

    compound_stmnt  go to state 181
    statement       go to state 264
    expr_stmnt      go to state 185
    label_stmnt     go to state 186
    select_stmnt    go to state 187
    iterat_stmnt    go to state 188
    jump_stmnt      go to state 189
    expr            go to state 190
    assign_expr     go to state 191
    unary_expr      go to state 91
    cond_expr       go to state 92
    arith_expr      go to state 93
    cast_expr       go to state 94
    postfix_expr    go to state 95
    prim_expr       go to state 96


State 239

  109 jump_stmnt: BREAK ';' .

    $default  reduce using rule 109 (jump_stmnt)


State 240

   96 label_stmnt: CASE const_expr . ':' statement

    ':'  shift, and go to state 265


State 241

  136 const_expr: cond_expr .

    $default  reduce using rule 136 (const_expr)


State 242

  108 jump_stmnt: CONTINUE ';' .

    $default  reduce using rule 108 (jump_stmnt)


State 243

   97 label_stmnt: DEFAULT ':' . statement

    IDENT       shift, and go to state 168
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    BREAK       shift, and go to state 169
    CASE        shift, and go to state 170
    CONTINUE    shift, and go to state 171
    DEFAULT     shift, and go to state 172
    DO          shift, and go to state 173
    FOR         shift, and go to state 174
    GOTO        shift, and go to state 175
    IF          shift, and go to state 176
    RETURN      shift, and go to state 177
    SIZEOF      shift, and go to state 81
    SWITCH      shift, and go to state 178
    WHILE       shift, and go to state 179
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88
    '{'         shift, and go to state 56

    compound_stmnt  go to state 181
    statement       go to state 266
    expr_stmnt      go to state 185
    label_stmnt     go to state 186
    select_stmnt    go to state 187
    iterat_stmnt    go to state 188
    jump_stmnt      go to state 189
    expr            go to state 190
    assign_expr     go to state 191
    unary_expr      go to state 91
    cond_expr       go to state 92
    arith_expr      go to state 93
    cast_expr       go to state 94
    postfix_expr    go to state 95
    prim_expr       go to state 96


State 244

  102 iterat_stmnt: DO statement . WHILE '(' expr ')' ';'

    WHILE  shift, and go to state 267


State 245

  103 iterat_stmnt: FOR '(' . expr_opt ';' expr_opt ';' expr_opt ')' statement
  104             | FOR '(' . declaration expr_opt ';' expr_opt ')' statement

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    EXTERN      shift, and go to state 5
    FLOAT       shift, and go to state 6
    INLINE      shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    REGISTER    shift, and go to state 10
    RESTRICT    shift, and go to state 11
    SHORT       shift, and go to state 12
    SIGNED      shift, and go to state 13
    SIZEOF      shift, and go to state 81
    STATIC      shift, and go to state 14
    STRUCT      shift, and go to state 15
    TYPEDEF     shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    $default  reduce using rule 106 (expr_opt)

    declaration        go to state 268
    declaration_specs  go to state 58
    declaration_spec   go to state 27
    stg_class_spec     go to state 28
    type_spec          go to state 29
    type_qualif        go to state 30
    func_spec          go to state 31
    struct_union_spec  go to state 32
    struct_union       go to state 33
    expr_opt           go to state 269
    expr               go to state 249
    assign_expr        go to state 191
    unary_expr         go to state 91
    cond_expr          go to state 92
    arith_expr         go to state 93
    cast_expr          go to state 94
    postfix_expr       go to state 95
    prim_expr          go to state 96


State 246

  107 jump_stmnt: GOTO IDENT . ';'

    ';'  shift, and go to state 270


State 247

   98 select_stmnt: IF '(' . expr ')' statement
   99             | IF '(' . expr ')' ELSE statement

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    expr          go to state 271
    assign_expr   go to state 191
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 248

  110 jump_stmnt: RETURN expr_opt . ';'

    ';'  shift, and go to state 272


State 249

  105 expr_opt: expr .
  112 expr: expr . ',' assign_expr

    ','  shift, and go to state 254

    $default  reduce using rule 105 (expr_opt)


State 250

  100 select_stmnt: SWITCH '(' . expr ')' statement

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    expr          go to state 273
    assign_expr   go to state 191
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 251

  101 iterat_stmnt: WHILE '(' . expr ')' statement

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    expr          go to state 274
    assign_expr   go to state 191
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 252

   81 compound_stmnt: '{' $@1 block_item_list '}' .

    $default  reduce using rule 81 (compound_stmnt)


State 253

   83 block_item_list: block_item_list block_item .

    $default  reduce using rule 83 (block_item_list)


State 254

  112 expr: expr ',' . assign_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    assign_expr   go to state 275
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 255

   94 expr_stmnt: expr ';' .

    $default  reduce using rule 94 (expr_stmnt)


State 256

   70 param_type_list: param_list ',' ELLIPSIS .

    $default  reduce using rule 70 (param_type_list)


State 257

   72 param_list: param_list ',' param_declaration .

    $default  reduce using rule 72 (param_list)


State 258

   87 ident_list: ident_list ',' IDENT .

    $default  reduce using rule 87 (ident_list)


State 259

   47 struct_decl_list: struct_decl_list ',' struct_decl .

    $default  reduce using rule 47 (struct_decl_list)


State 260

  129 unary_expr: SIZEOF '(' unary_expr ')' .

    $default  reduce using rule 129 (unary_expr)


State 261

  138 cond_expr: arith_expr '?' expr ':' . cond_expr

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    unary_expr    go to state 124
    cond_expr     go to state 276
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 262

  167 postfix_expr: postfix_expr '(' expr ')' .

    $default  reduce using rule 167 (postfix_expr)


State 263

  163 postfix_expr: postfix_expr '[' expr ']' .

    $default  reduce using rule 163 (postfix_expr)


State 264

   95 label_stmnt: IDENT ':' statement .

    $default  reduce using rule 95 (label_stmnt)


State 265

   96 label_stmnt: CASE const_expr ':' . statement

    IDENT       shift, and go to state 168
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    BREAK       shift, and go to state 169
    CASE        shift, and go to state 170
    CONTINUE    shift, and go to state 171
    DEFAULT     shift, and go to state 172
    DO          shift, and go to state 173
    FOR         shift, and go to state 174
    GOTO        shift, and go to state 175
    IF          shift, and go to state 176
    RETURN      shift, and go to state 177
    SIZEOF      shift, and go to state 81
    SWITCH      shift, and go to state 178
    WHILE       shift, and go to state 179
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88
    '{'         shift, and go to state 56

    compound_stmnt  go to state 181
    statement       go to state 277
    expr_stmnt      go to state 185
    label_stmnt     go to state 186
    select_stmnt    go to state 187
    iterat_stmnt    go to state 188
    jump_stmnt      go to state 189
    expr            go to state 190
    assign_expr     go to state 191
    unary_expr      go to state 91
    cond_expr       go to state 92
    arith_expr      go to state 93
    cast_expr       go to state 94
    postfix_expr    go to state 95
    prim_expr       go to state 96


State 266

   97 label_stmnt: DEFAULT ':' statement .

    $default  reduce using rule 97 (label_stmnt)


State 267

  102 iterat_stmnt: DO statement WHILE . '(' expr ')' ';'

    '('  shift, and go to state 278


State 268

  104 iterat_stmnt: FOR '(' declaration . expr_opt ';' expr_opt ')' statement

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    $default  reduce using rule 106 (expr_opt)

    expr_opt      go to state 279
    expr          go to state 249
    assign_expr   go to state 191
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 269

  103 iterat_stmnt: FOR '(' expr_opt . ';' expr_opt ';' expr_opt ')' statement

    ';'  shift, and go to state 280


State 270

  107 jump_stmnt: GOTO IDENT ';' .

    $default  reduce using rule 107 (jump_stmnt)


State 271

   98 select_stmnt: IF '(' expr . ')' statement
   99             | IF '(' expr . ')' ELSE statement
  112 expr: expr . ',' assign_expr

    ','  shift, and go to state 254
    ')'  shift, and go to state 281


State 272

  110 jump_stmnt: RETURN expr_opt ';' .

    $default  reduce using rule 110 (jump_stmnt)


State 273

  100 select_stmnt: SWITCH '(' expr . ')' statement
  112 expr: expr . ',' assign_expr

    ','  shift, and go to state 254
    ')'  shift, and go to state 282


State 274

  101 iterat_stmnt: WHILE '(' expr . ')' statement
  112 expr: expr . ',' assign_expr

    ','  shift, and go to state 254
    ')'  shift, and go to state 283


State 275

  112 expr: expr ',' assign_expr .

    $default  reduce using rule 112 (expr)


State 276

  138 cond_expr: arith_expr '?' expr ':' cond_expr .

    $default  reduce using rule 138 (cond_expr)


State 277

   96 label_stmnt: CASE const_expr ':' statement .

    $default  reduce using rule 96 (label_stmnt)


State 278

  102 iterat_stmnt: DO statement WHILE '(' . expr ')' ';'

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    expr          go to state 284
    assign_expr   go to state 191
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 279

  104 iterat_stmnt: FOR '(' declaration expr_opt . ';' expr_opt ')' statement

    ';'  shift, and go to state 285


State 280

  103 iterat_stmnt: FOR '(' expr_opt ';' . expr_opt ';' expr_opt ')' statement

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    $default  reduce using rule 106 (expr_opt)

    expr_opt      go to state 286
    expr          go to state 249
    assign_expr   go to state 191
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 281

   98 select_stmnt: IF '(' expr ')' . statement
   99             | IF '(' expr ')' . ELSE statement

    IDENT       shift, and go to state 168
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    BREAK       shift, and go to state 169
    CASE        shift, and go to state 170
    CONTINUE    shift, and go to state 171
    DEFAULT     shift, and go to state 172
    DO          shift, and go to state 173
    ELSE        shift, and go to state 287
    FOR         shift, and go to state 174
    GOTO        shift, and go to state 175
    IF          shift, and go to state 176
    RETURN      shift, and go to state 177
    SIZEOF      shift, and go to state 81
    SWITCH      shift, and go to state 178
    WHILE       shift, and go to state 179
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88
    '{'         shift, and go to state 56

    compound_stmnt  go to state 181
    statement       go to state 288
    expr_stmnt      go to state 185
    label_stmnt     go to state 186
    select_stmnt    go to state 187
    iterat_stmnt    go to state 188
    jump_stmnt      go to state 189
    expr            go to state 190
    assign_expr     go to state 191
    unary_expr      go to state 91
    cond_expr       go to state 92
    arith_expr      go to state 93
    cast_expr       go to state 94
    postfix_expr    go to state 95
    prim_expr       go to state 96


State 282

  100 select_stmnt: SWITCH '(' expr ')' . statement

    IDENT       shift, and go to state 168
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    BREAK       shift, and go to state 169
    CASE        shift, and go to state 170
    CONTINUE    shift, and go to state 171
    DEFAULT     shift, and go to state 172
    DO          shift, and go to state 173
    FOR         shift, and go to state 174
    GOTO        shift, and go to state 175
    IF          shift, and go to state 176
    RETURN      shift, and go to state 177
    SIZEOF      shift, and go to state 81
    SWITCH      shift, and go to state 178
    WHILE       shift, and go to state 179
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88
    '{'         shift, and go to state 56

    compound_stmnt  go to state 181
    statement       go to state 289
    expr_stmnt      go to state 185
    label_stmnt     go to state 186
    select_stmnt    go to state 187
    iterat_stmnt    go to state 188
    jump_stmnt      go to state 189
    expr            go to state 190
    assign_expr     go to state 191
    unary_expr      go to state 91
    cond_expr       go to state 92
    arith_expr      go to state 93
    cast_expr       go to state 94
    postfix_expr    go to state 95
    prim_expr       go to state 96


State 283

  101 iterat_stmnt: WHILE '(' expr ')' . statement

    IDENT       shift, and go to state 168
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    BREAK       shift, and go to state 169
    CASE        shift, and go to state 170
    CONTINUE    shift, and go to state 171
    DEFAULT     shift, and go to state 172
    DO          shift, and go to state 173
    FOR         shift, and go to state 174
    GOTO        shift, and go to state 175
    IF          shift, and go to state 176
    RETURN      shift, and go to state 177
    SIZEOF      shift, and go to state 81
    SWITCH      shift, and go to state 178
    WHILE       shift, and go to state 179
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88
    '{'         shift, and go to state 56

    compound_stmnt  go to state 181
    statement       go to state 290
    expr_stmnt      go to state 185
    label_stmnt     go to state 186
    select_stmnt    go to state 187
    iterat_stmnt    go to state 188
    jump_stmnt      go to state 189
    expr            go to state 190
    assign_expr     go to state 191
    unary_expr      go to state 91
    cond_expr       go to state 92
    arith_expr      go to state 93
    cast_expr       go to state 94
    postfix_expr    go to state 95
    prim_expr       go to state 96


State 284

  102 iterat_stmnt: DO statement WHILE '(' expr . ')' ';'
  112 expr: expr . ',' assign_expr

    ','  shift, and go to state 254
    ')'  shift, and go to state 291


State 285

  104 iterat_stmnt: FOR '(' declaration expr_opt ';' . expr_opt ')' statement

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    $default  reduce using rule 106 (expr_opt)

    expr_opt      go to state 292
    expr          go to state 249
    assign_expr   go to state 191
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 286

  103 iterat_stmnt: FOR '(' expr_opt ';' expr_opt . ';' expr_opt ')' statement

    ';'  shift, and go to state 293


State 287

   99 select_stmnt: IF '(' expr ')' ELSE . statement

    IDENT       shift, and go to state 168
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    BREAK       shift, and go to state 169
    CASE        shift, and go to state 170
    CONTINUE    shift, and go to state 171
    DEFAULT     shift, and go to state 172
    DO          shift, and go to state 173
    FOR         shift, and go to state 174
    GOTO        shift, and go to state 175
    IF          shift, and go to state 176
    RETURN      shift, and go to state 177
    SIZEOF      shift, and go to state 81
    SWITCH      shift, and go to state 178
    WHILE       shift, and go to state 179
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88
    '{'         shift, and go to state 56

    compound_stmnt  go to state 181
    statement       go to state 294
    expr_stmnt      go to state 185
    label_stmnt     go to state 186
    select_stmnt    go to state 187
    iterat_stmnt    go to state 188
    jump_stmnt      go to state 189
    expr            go to state 190
    assign_expr     go to state 191
    unary_expr      go to state 91
    cond_expr       go to state 92
    arith_expr      go to state 93
    cast_expr       go to state 94
    postfix_expr    go to state 95
    prim_expr       go to state 96


State 288

   98 select_stmnt: IF '(' expr ')' statement .

    $default  reduce using rule 98 (select_stmnt)


State 289

  100 select_stmnt: SWITCH '(' expr ')' statement .

    $default  reduce using rule 100 (select_stmnt)


State 290

  101 iterat_stmnt: WHILE '(' expr ')' statement .

    $default  reduce using rule 101 (iterat_stmnt)


State 291

  102 iterat_stmnt: DO statement WHILE '(' expr ')' . ';'

    ';'  shift, and go to state 295


State 292

  104 iterat_stmnt: FOR '(' declaration expr_opt ';' expr_opt . ')' statement

    ')'  shift, and go to state 296


State 293

  103 iterat_stmnt: FOR '(' expr_opt ';' expr_opt ';' . expr_opt ')' statement

    IDENT       shift, and go to state 75
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    SIZEOF      shift, and go to state 81
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88

    $default  reduce using rule 106 (expr_opt)

    expr_opt      go to state 297
    expr          go to state 249
    assign_expr   go to state 191
    unary_expr    go to state 91
    cond_expr     go to state 92
    arith_expr    go to state 93
    cast_expr     go to state 94
    postfix_expr  go to state 95
    prim_expr     go to state 96


State 294

   99 select_stmnt: IF '(' expr ')' ELSE statement .

    $default  reduce using rule 99 (select_stmnt)


State 295

  102 iterat_stmnt: DO statement WHILE '(' expr ')' ';' .

    $default  reduce using rule 102 (iterat_stmnt)


State 296

  104 iterat_stmnt: FOR '(' declaration expr_opt ';' expr_opt ')' . statement

    IDENT       shift, and go to state 168
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    BREAK       shift, and go to state 169
    CASE        shift, and go to state 170
    CONTINUE    shift, and go to state 171
    DEFAULT     shift, and go to state 172
    DO          shift, and go to state 173
    FOR         shift, and go to state 174
    GOTO        shift, and go to state 175
    IF          shift, and go to state 176
    RETURN      shift, and go to state 177
    SIZEOF      shift, and go to state 81
    SWITCH      shift, and go to state 178
    WHILE       shift, and go to state 179
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88
    '{'         shift, and go to state 56

    compound_stmnt  go to state 181
    statement       go to state 298
    expr_stmnt      go to state 185
    label_stmnt     go to state 186
    select_stmnt    go to state 187
    iterat_stmnt    go to state 188
    jump_stmnt      go to state 189
    expr            go to state 190
    assign_expr     go to state 191
    unary_expr      go to state 91
    cond_expr       go to state 92
    arith_expr      go to state 93
    cast_expr       go to state 94
    postfix_expr    go to state 95
    prim_expr       go to state 96


State 297

  103 iterat_stmnt: FOR '(' expr_opt ';' expr_opt ';' expr_opt . ')' statement

    ')'  shift, and go to state 299


State 298

  104 iterat_stmnt: FOR '(' declaration expr_opt ';' expr_opt ')' statement .

    $default  reduce using rule 104 (iterat_stmnt)


State 299

  103 iterat_stmnt: FOR '(' expr_opt ';' expr_opt ';' expr_opt ')' . statement

    IDENT       shift, and go to state 168
    CHARLIT     shift, and go to state 76
    STRING      shift, and go to state 77
    NUMBER      shift, and go to state 78
    PLUSPLUS    shift, and go to state 79
    MINUSMINUS  shift, and go to state 80
    BREAK       shift, and go to state 169
    CASE        shift, and go to state 170
    CONTINUE    shift, and go to state 171
    DEFAULT     shift, and go to state 172
    DO          shift, and go to state 173
    FOR         shift, and go to state 174
    GOTO        shift, and go to state 175
    IF          shift, and go to state 176
    RETURN      shift, and go to state 177
    SIZEOF      shift, and go to state 81
    SWITCH      shift, and go to state 178
    WHILE       shift, and go to state 179
    '&'         shift, and go to state 82
    '+'         shift, and go to state 83
    '-'         shift, and go to state 84
    '*'         shift, and go to state 85
    '~'         shift, and go to state 86
    '!'         shift, and go to state 87
    '('         shift, and go to state 88
    '{'         shift, and go to state 56

    compound_stmnt  go to state 181
    statement       go to state 300
    expr_stmnt      go to state 185
    label_stmnt     go to state 186
    select_stmnt    go to state 187
    iterat_stmnt    go to state 188
    jump_stmnt      go to state 189
    expr            go to state 190
    assign_expr     go to state 191
    unary_expr      go to state 91
    cond_expr       go to state 92
    arith_expr      go to state 93
    cast_expr       go to state 94
    postfix_expr    go to state 95
    prim_expr       go to state 96


State 300

  103 iterat_stmnt: FOR '(' expr_opt ';' expr_opt ';' expr_opt ')' statement .

    $default  reduce using rule 103 (iterat_stmnt)
