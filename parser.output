Terminals unused in grammar

    STRING
    INDSEL
    PLUSPLUS
    MINUSMINUS
    SHL
    SHR
    LTEQ
    GTEQ
    EQEQ
    NOTEQ
    LOGAND
    LOGOR
    ELLIPSIS
    TIMESEQ
    DIVEQ
    MODEQ
    PLUSEQ
    MINUSEQ
    SHLEQ
    SHREQ
    ANDEQ
    OREQ
    XOREQ
    AUTO
    BREAK
    CASE
    CHAR
    CONST
    CONTINUE
    DEFAULT
    DO
    DOUBLE
    ELSE
    ENUM
    EXTERN
    FLOAT
    FOR
    GOTO
    IF
    INLINE
    INT
    LONG
    REGISTER
    RESTRICT
    RETURN
    SHORT
    SIGNED
    SIZEOF
    STATIC
    STRUCT
    SWITCH
    TYPEDEF
    UNION
    UNSIGNED
    VOID
    VOLATILE
    WHILE
    _BOOL
    _COMPLEX
    _IMAGINARY
    '?'
    ':'
    '|'
    '^'
    '&'
    '<'
    '>'
    '-'
    '*'
    '/'
    '%'


Grammar

    0 $accept: statement $end

    1 statement: expr ';'
    2          | statement expr ';'

    3 expr: binop

    4 binop: binop ',' value
    5      | binop '=' binop
    6      | binop '+' binop
    7      | value

    8 value: IDENT
    9      | NUMBER
   10      | CHARLIT


Terminals, with rules where they appear

    $end (0) 0
    '%' <c> (37)
    '&' <c> (38)
    '*' <c> (42)
    '+' <c> (43) 6
    ',' <c> (44) 4
    '-' <c> (45)
    '/' <c> (47)
    ':' <c> (58)
    ';' (59) 1 2
    '<' <c> (60)
    '=' <c> (61) 5
    '>' <c> (62)
    '?' <c> (63)
    '^' <c> (94)
    '|' <c> (124)
    error (256)
    IDENT <ident> (258) 8
    CHARLIT <charlit> (259) 10
    STRING (260)
    NUMBER <num> (261) 9
    INDSEL (262)
    PLUSPLUS (263)
    MINUSMINUS (264)
    SHL (265)
    SHR (266)
    LTEQ <c> (267)
    GTEQ <c> (268)
    EQEQ <c> (269)
    NOTEQ <c> (270)
    LOGAND <c> (271)
    LOGOR <c> (272)
    ELLIPSIS (273)
    TIMESEQ <c> (274)
    DIVEQ <c> (275)
    MODEQ <c> (276)
    PLUSEQ <c> (277)
    MINUSEQ <c> (278)
    SHLEQ <c> (279)
    SHREQ <c> (280)
    ANDEQ <c> (281)
    OREQ (282)
    XOREQ <c> (283)
    AUTO (284)
    BREAK (285)
    CASE (286)
    CHAR (287)
    CONST (288)
    CONTINUE (289)
    DEFAULT (290)
    DO (291)
    DOUBLE (292)
    ELSE (293)
    ENUM (294)
    EXTERN (295)
    FLOAT (296)
    FOR (297)
    GOTO (298)
    IF (299)
    INLINE (300)
    INT (301)
    LONG (302)
    REGISTER (303)
    RESTRICT (304)
    RETURN (305)
    SHORT (306)
    SIGNED (307)
    SIZEOF (308)
    STATIC (309)
    STRUCT (310)
    SWITCH (311)
    TYPEDEF (312)
    UNION (313)
    UNSIGNED (314)
    VOID (315)
    VOLATILE (316)
    WHILE (317)
    _BOOL (318)
    _COMPLEX (319)
    _IMAGINARY (320)


Nonterminals, with rules where they appear

    $accept (81)
        on left: 0
    statement (82)
        on left: 1 2
        on right: 0 2
    expr (83)
        on left: 3
        on right: 1 2
    binop <astnode_p> (84)
        on left: 4 5 6 7
        on right: 3 4 5 6
    value <astnode_p> (85)
        on left: 8 9 10
        on right: 4 7


State 0

    0 $accept: . statement $end

    IDENT    shift, and go to state 1
    CHARLIT  shift, and go to state 2
    NUMBER   shift, and go to state 3

    statement  go to state 4
    expr       go to state 5
    binop      go to state 6
    value      go to state 7


State 1

    8 value: IDENT .

    $default  reduce using rule 8 (value)


State 2

   10 value: CHARLIT .

    $default  reduce using rule 10 (value)


State 3

    9 value: NUMBER .

    $default  reduce using rule 9 (value)


State 4

    0 $accept: statement . $end
    2 statement: statement . expr ';'

    $end     shift, and go to state 8
    IDENT    shift, and go to state 1
    CHARLIT  shift, and go to state 2
    NUMBER   shift, and go to state 3

    expr   go to state 9
    binop  go to state 6
    value  go to state 7


State 5

    1 statement: expr . ';'

    ';'  shift, and go to state 10


State 6

    3 expr: binop .
    4 binop: binop . ',' value
    5      | binop . '=' binop
    6      | binop . '+' binop

    ','  shift, and go to state 11
    '='  shift, and go to state 12
    '+'  shift, and go to state 13

    $default  reduce using rule 3 (expr)


State 7

    7 binop: value .

    $default  reduce using rule 7 (binop)


State 8

    0 $accept: statement $end .

    $default  accept


State 9

    2 statement: statement expr . ';'

    ';'  shift, and go to state 14


State 10

    1 statement: expr ';' .

    $default  reduce using rule 1 (statement)


State 11

    4 binop: binop ',' . value

    IDENT    shift, and go to state 1
    CHARLIT  shift, and go to state 2
    NUMBER   shift, and go to state 3

    value  go to state 15


State 12

    5 binop: binop '=' . binop

    IDENT    shift, and go to state 1
    CHARLIT  shift, and go to state 2
    NUMBER   shift, and go to state 3

    binop  go to state 16
    value  go to state 7


State 13

    6 binop: binop '+' . binop

    IDENT    shift, and go to state 1
    CHARLIT  shift, and go to state 2
    NUMBER   shift, and go to state 3

    binop  go to state 17
    value  go to state 7


State 14

    2 statement: statement expr ';' .

    $default  reduce using rule 2 (statement)


State 15

    4 binop: binop ',' value .

    $default  reduce using rule 4 (binop)


State 16

    4 binop: binop . ',' value
    5      | binop . '=' binop
    5      | binop '=' binop .
    6      | binop . '+' binop

    '='  shift, and go to state 12
    '+'  shift, and go to state 13

    $default  reduce using rule 5 (binop)


State 17

    4 binop: binop . ',' value
    5      | binop . '=' binop
    6      | binop . '+' binop
    6      | binop '+' binop .

    $default  reduce using rule 6 (binop)
