Terminals unused in grammar

    ELLIPSIS
    AUTO
    BREAK
    CASE
    CHAR
    CONST
    CONTINUE
    DEFAULT
    DO
    DOUBLE
    ELSE
    ENUM
    EXTERN
    FLOAT
    FOR
    GOTO
    IF
    INLINE
    INT
    LONG
    REGISTER
    RESTRICT
    RETURN
    SHORT
    SIGNED
    STATIC
    STRUCT
    SWITCH
    TYPEDEF
    UNION
    UNSIGNED
    VOID
    VOLATILE
    WHILE
    _BOOL
    _COMPLEX
    _IMAGINARY


Grammar

    0 $accept: statement $end

    1 statement: expr ';'
    2          | statement expr ';'

    3 expr: assign_expr
    4     | expr ',' assign_expr

    5 assign_expr: unary_expr '=' assign_expr
    6            | unary_expr PLUSEQ assign_expr
    7            | unary_expr MINUSEQ assign_expr
    8            | unary_expr TIMESEQ assign_expr
    9            | unary_expr DIVEQ assign_expr
   10            | unary_expr MODEQ assign_expr
   11            | unary_expr SHLEQ assign_expr
   12            | unary_expr SHREQ assign_expr
   13            | unary_expr ANDEQ assign_expr
   14            | unary_expr XOREQ assign_expr
   15            | unary_expr OREQ assign_expr
   16            | cond_expr

   17 unary_expr: postfix_expr
   18           | PLUSPLUS unary_expr
   19           | MINUSMINUS unary_expr
   20           | SIZEOF unary_expr
   21           | SIZEOF '(' unary_expr ')'
   22           | '&' cast_expr
   23           | '*' cast_expr
   24           | '+' cast_expr
   25           | '-' cast_expr
   26           | '~' cast_expr
   27           | '!' cast_expr

   28 cond_expr: arith_expr
   29          | arith_expr '?' expr ':' cond_expr

   30 arith_expr: arith_expr '+' cast_expr
   31           | arith_expr '-' cast_expr
   32           | arith_expr '*' cast_expr
   33           | arith_expr '|' cast_expr
   34           | arith_expr '^' cast_expr
   35           | arith_expr '&' cast_expr
   36           | arith_expr '%' cast_expr
   37           | arith_expr '/' cast_expr
   38           | arith_expr SHR cast_expr
   39           | arith_expr SHL cast_expr
   40           | arith_expr '<' cast_expr
   41           | arith_expr '>' cast_expr
   42           | arith_expr LTEQ cast_expr
   43           | arith_expr GTEQ cast_expr
   44           | arith_expr EQEQ cast_expr
   45           | arith_expr NOTEQ cast_expr
   46           | arith_expr LOGAND cast_expr
   47           | arith_expr LOGOR cast_expr
   48           | arith_expr PLUSPLUS
   49           | arith_expr MINUSMINUS
   50           | arith_expr '(' ')'
   51           | arith_expr '(' expr ')'
   52           | '(' arith_expr ')'
   53           | cast_expr

   54 cast_expr: unary_expr

   55 postfix_expr: prim_expr
   56             | postfix_expr '[' expr ']'
   57             | postfix_expr '.' IDENT
   58             | postfix_expr INDSEL IDENT

   59 prim_expr: IDENT
   60          | NUMBER
   61          | CHARLIT
   62          | STRING


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 27
    '%' <c> (37) 36
    '&' <c> (38) 22 35
    '(' <c> (40) 21 50 51 52
    ')' <c> (41) 21 50 51 52
    '*' <c> (42) 23 32
    '+' <c> (43) 24 30
    ',' <c> (44) 4
    '-' <c> (45) 25 31
    '.' <c> (46) 57
    '/' <c> (47) 37
    ':' <c> (58) 29
    ';' (59) 1 2
    '<' <c> (60) 40
    '=' <c> (61) 5
    '>' <c> (62) 41
    '?' <c> (63) 29
    '[' <c> (91) 56
    ']' <c> (93) 56
    '^' <c> (94) 34
    '|' <c> (124) 33
    '~' (126) 26
    error (256)
    IDENT <ident> (258) 57 58 59
    CHARLIT <charlit> (259) 61
    STRING <str> (260) 62
    NUMBER <num> (261) 60
    INDSEL <c> (262) 58
    PLUSPLUS <c> (263) 18 48
    MINUSMINUS <c> (264) 19 49
    SHL <c> (265) 39
    SHR <c> (266) 38
    LTEQ <c> (267) 42
    GTEQ <c> (268) 43
    EQEQ <c> (269) 44
    NOTEQ <c> (270) 45
    LOGAND <c> (271) 46
    LOGOR <c> (272) 47
    ELLIPSIS (273)
    TIMESEQ <c> (274) 8
    DIVEQ <c> (275) 9
    MODEQ <c> (276) 10
    PLUSEQ <c> (277) 6
    MINUSEQ <c> (278) 7
    SHLEQ <c> (279) 11
    SHREQ <c> (280) 12
    ANDEQ <c> (281) 13
    OREQ <c> (282) 15
    XOREQ <c> (283) 14
    AUTO (284)
    BREAK (285)
    CASE (286)
    CHAR (287)
    CONST (288)
    CONTINUE (289)
    DEFAULT (290)
    DO (291)
    DOUBLE (292)
    ELSE (293)
    ENUM (294)
    EXTERN (295)
    FLOAT (296)
    FOR (297)
    GOTO (298)
    IF (299)
    INLINE (300)
    INT (301)
    LONG (302)
    REGISTER (303)
    RESTRICT (304)
    RETURN (305)
    SHORT (306)
    SIGNED (307)
    SIZEOF (308) 20 21
    STATIC (309)
    STRUCT (310)
    SWITCH (311)
    TYPEDEF (312)
    UNION (313)
    UNSIGNED (314)
    VOID (315)
    VOLATILE (316)
    WHILE (317)
    _BOOL (318)
    _COMPLEX (319)
    _IMAGINARY (320)


Nonterminals, with rules where they appear

    $accept (88)
        on left: 0
    statement (89)
        on left: 1 2
        on right: 0 2
    expr <astnode_p> (90)
        on left: 3 4
        on right: 1 2 4 29 51 56
    assign_expr <astnode_p> (91)
        on left: 5 6 7 8 9 10 11 12 13 14 15 16
        on right: 3 4 5 6 7 8 9 10 11 12 13 14 15
    unary_expr <astnode_p> (92)
        on left: 17 18 19 20 21 22 23 24 25 26 27
        on right: 5 6 7 8 9 10 11 12 13 14 15 18 19 20 21 54
    cond_expr <astnode_p> (93)
        on left: 28 29
        on right: 16 29
    arith_expr <astnode_p> (94)
        on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
        on right: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
    cast_expr <astnode_p> (95)
        on left: 54
        on right: 22 23 24 25 26 27 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 53
    postfix_expr <astnode_p> (96)
        on left: 55 56 57 58
        on right: 17 56 57 58
    prim_expr <astnode_p> (97)
        on left: 59 60 61 62
        on right: 55


State 0

    0 $accept: . statement $end

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    statement     go to state 15
    expr          go to state 16
    assign_expr   go to state 17
    unary_expr    go to state 18
    cond_expr     go to state 19
    arith_expr    go to state 20
    cast_expr     go to state 21
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 1

   59 prim_expr: IDENT .

    $default  reduce using rule 59 (prim_expr)


State 2

   61 prim_expr: CHARLIT .

    $default  reduce using rule 61 (prim_expr)


State 3

   62 prim_expr: STRING .

    $default  reduce using rule 62 (prim_expr)


State 4

   60 prim_expr: NUMBER .

    $default  reduce using rule 60 (prim_expr)


State 5

   18 unary_expr: PLUSPLUS . unary_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 24
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 6

   19 unary_expr: MINUSMINUS . unary_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 25
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 7

   20 unary_expr: SIZEOF . unary_expr
   21           | SIZEOF . '(' unary_expr ')'

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 26
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 27
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 8

   22 unary_expr: '&' . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 29
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 9

   24 unary_expr: '+' . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 30
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 10

   25 unary_expr: '-' . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 31
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 11

   23 unary_expr: '*' . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 32
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 12

   52 arith_expr: '(' . arith_expr ')'

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    arith_expr    go to state 33
    cast_expr     go to state 21
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 13

   26 unary_expr: '~' . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 34
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 14

   27 unary_expr: '!' . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 35
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 15

    0 $accept: statement . $end
    2 statement: statement . expr ';'

    $end        shift, and go to state 36
    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    expr          go to state 37
    assign_expr   go to state 17
    unary_expr    go to state 18
    cond_expr     go to state 19
    arith_expr    go to state 20
    cast_expr     go to state 21
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 16

    1 statement: expr . ';'
    4 expr: expr . ',' assign_expr

    ','  shift, and go to state 38
    ';'  shift, and go to state 39


State 17

    3 expr: assign_expr .

    $default  reduce using rule 3 (expr)


State 18

    5 assign_expr: unary_expr . '=' assign_expr
    6            | unary_expr . PLUSEQ assign_expr
    7            | unary_expr . MINUSEQ assign_expr
    8            | unary_expr . TIMESEQ assign_expr
    9            | unary_expr . DIVEQ assign_expr
   10            | unary_expr . MODEQ assign_expr
   11            | unary_expr . SHLEQ assign_expr
   12            | unary_expr . SHREQ assign_expr
   13            | unary_expr . ANDEQ assign_expr
   14            | unary_expr . XOREQ assign_expr
   15            | unary_expr . OREQ assign_expr
   54 cast_expr: unary_expr .

    TIMESEQ  shift, and go to state 40
    DIVEQ    shift, and go to state 41
    MODEQ    shift, and go to state 42
    PLUSEQ   shift, and go to state 43
    MINUSEQ  shift, and go to state 44
    SHLEQ    shift, and go to state 45
    SHREQ    shift, and go to state 46
    ANDEQ    shift, and go to state 47
    OREQ     shift, and go to state 48
    XOREQ    shift, and go to state 49
    '='      shift, and go to state 50

    $default  reduce using rule 54 (cast_expr)


State 19

   16 assign_expr: cond_expr .

    $default  reduce using rule 16 (assign_expr)


State 20

   28 cond_expr: arith_expr .
   29          | arith_expr . '?' expr ':' cond_expr
   30 arith_expr: arith_expr . '+' cast_expr
   31           | arith_expr . '-' cast_expr
   32           | arith_expr . '*' cast_expr
   33           | arith_expr . '|' cast_expr
   34           | arith_expr . '^' cast_expr
   35           | arith_expr . '&' cast_expr
   36           | arith_expr . '%' cast_expr
   37           | arith_expr . '/' cast_expr
   38           | arith_expr . SHR cast_expr
   39           | arith_expr . SHL cast_expr
   40           | arith_expr . '<' cast_expr
   41           | arith_expr . '>' cast_expr
   42           | arith_expr . LTEQ cast_expr
   43           | arith_expr . GTEQ cast_expr
   44           | arith_expr . EQEQ cast_expr
   45           | arith_expr . NOTEQ cast_expr
   46           | arith_expr . LOGAND cast_expr
   47           | arith_expr . LOGOR cast_expr
   48           | arith_expr . PLUSPLUS
   49           | arith_expr . MINUSMINUS
   50           | arith_expr . '(' ')'
   51           | arith_expr . '(' expr ')'

    PLUSPLUS    shift, and go to state 51
    MINUSMINUS  shift, and go to state 52
    SHL         shift, and go to state 53
    SHR         shift, and go to state 54
    LTEQ        shift, and go to state 55
    GTEQ        shift, and go to state 56
    EQEQ        shift, and go to state 57
    NOTEQ       shift, and go to state 58
    LOGAND      shift, and go to state 59
    LOGOR       shift, and go to state 60
    '?'         shift, and go to state 61
    '|'         shift, and go to state 62
    '^'         shift, and go to state 63
    '&'         shift, and go to state 64
    '<'         shift, and go to state 65
    '>'         shift, and go to state 66
    '+'         shift, and go to state 67
    '-'         shift, and go to state 68
    '*'         shift, and go to state 69
    '/'         shift, and go to state 70
    '%'         shift, and go to state 71
    '('         shift, and go to state 72

    $default  reduce using rule 28 (cond_expr)


State 21

   53 arith_expr: cast_expr .

    $default  reduce using rule 53 (arith_expr)


State 22

   17 unary_expr: postfix_expr .
   56 postfix_expr: postfix_expr . '[' expr ']'
   57             | postfix_expr . '.' IDENT
   58             | postfix_expr . INDSEL IDENT

    INDSEL  shift, and go to state 73
    '.'     shift, and go to state 74
    '['     shift, and go to state 75

    $default  reduce using rule 17 (unary_expr)


State 23

   55 postfix_expr: prim_expr .

    $default  reduce using rule 55 (postfix_expr)


State 24

   18 unary_expr: PLUSPLUS unary_expr .

    $default  reduce using rule 18 (unary_expr)


State 25

   19 unary_expr: MINUSMINUS unary_expr .

    $default  reduce using rule 19 (unary_expr)


State 26

   21 unary_expr: SIZEOF '(' . unary_expr ')'

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 76
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 27

   20 unary_expr: SIZEOF unary_expr .

    $default  reduce using rule 20 (unary_expr)


State 28

   54 cast_expr: unary_expr .

    $default  reduce using rule 54 (cast_expr)


State 29

   22 unary_expr: '&' cast_expr .

    $default  reduce using rule 22 (unary_expr)


State 30

   24 unary_expr: '+' cast_expr .

    $default  reduce using rule 24 (unary_expr)


State 31

   25 unary_expr: '-' cast_expr .

    $default  reduce using rule 25 (unary_expr)


State 32

   23 unary_expr: '*' cast_expr .

    $default  reduce using rule 23 (unary_expr)


State 33

   30 arith_expr: arith_expr . '+' cast_expr
   31           | arith_expr . '-' cast_expr
   32           | arith_expr . '*' cast_expr
   33           | arith_expr . '|' cast_expr
   34           | arith_expr . '^' cast_expr
   35           | arith_expr . '&' cast_expr
   36           | arith_expr . '%' cast_expr
   37           | arith_expr . '/' cast_expr
   38           | arith_expr . SHR cast_expr
   39           | arith_expr . SHL cast_expr
   40           | arith_expr . '<' cast_expr
   41           | arith_expr . '>' cast_expr
   42           | arith_expr . LTEQ cast_expr
   43           | arith_expr . GTEQ cast_expr
   44           | arith_expr . EQEQ cast_expr
   45           | arith_expr . NOTEQ cast_expr
   46           | arith_expr . LOGAND cast_expr
   47           | arith_expr . LOGOR cast_expr
   48           | arith_expr . PLUSPLUS
   49           | arith_expr . MINUSMINUS
   50           | arith_expr . '(' ')'
   51           | arith_expr . '(' expr ')'
   52           | '(' arith_expr . ')'

    PLUSPLUS    shift, and go to state 51
    MINUSMINUS  shift, and go to state 52
    SHL         shift, and go to state 53
    SHR         shift, and go to state 54
    LTEQ        shift, and go to state 55
    GTEQ        shift, and go to state 56
    EQEQ        shift, and go to state 57
    NOTEQ       shift, and go to state 58
    LOGAND      shift, and go to state 59
    LOGOR       shift, and go to state 60
    '|'         shift, and go to state 62
    '^'         shift, and go to state 63
    '&'         shift, and go to state 64
    '<'         shift, and go to state 65
    '>'         shift, and go to state 66
    '+'         shift, and go to state 67
    '-'         shift, and go to state 68
    '*'         shift, and go to state 69
    '/'         shift, and go to state 70
    '%'         shift, and go to state 71
    '('         shift, and go to state 72
    ')'         shift, and go to state 77


State 34

   26 unary_expr: '~' cast_expr .

    $default  reduce using rule 26 (unary_expr)


State 35

   27 unary_expr: '!' cast_expr .

    $default  reduce using rule 27 (unary_expr)


State 36

    0 $accept: statement $end .

    $default  accept


State 37

    2 statement: statement expr . ';'
    4 expr: expr . ',' assign_expr

    ','  shift, and go to state 38
    ';'  shift, and go to state 78


State 38

    4 expr: expr ',' . assign_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    assign_expr   go to state 79
    unary_expr    go to state 18
    cond_expr     go to state 19
    arith_expr    go to state 20
    cast_expr     go to state 21
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 39

    1 statement: expr ';' .

    $default  reduce using rule 1 (statement)


State 40

    8 assign_expr: unary_expr TIMESEQ . assign_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    assign_expr   go to state 80
    unary_expr    go to state 18
    cond_expr     go to state 19
    arith_expr    go to state 20
    cast_expr     go to state 21
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 41

    9 assign_expr: unary_expr DIVEQ . assign_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    assign_expr   go to state 81
    unary_expr    go to state 18
    cond_expr     go to state 19
    arith_expr    go to state 20
    cast_expr     go to state 21
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 42

   10 assign_expr: unary_expr MODEQ . assign_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    assign_expr   go to state 82
    unary_expr    go to state 18
    cond_expr     go to state 19
    arith_expr    go to state 20
    cast_expr     go to state 21
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 43

    6 assign_expr: unary_expr PLUSEQ . assign_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    assign_expr   go to state 83
    unary_expr    go to state 18
    cond_expr     go to state 19
    arith_expr    go to state 20
    cast_expr     go to state 21
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 44

    7 assign_expr: unary_expr MINUSEQ . assign_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    assign_expr   go to state 84
    unary_expr    go to state 18
    cond_expr     go to state 19
    arith_expr    go to state 20
    cast_expr     go to state 21
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 45

   11 assign_expr: unary_expr SHLEQ . assign_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    assign_expr   go to state 85
    unary_expr    go to state 18
    cond_expr     go to state 19
    arith_expr    go to state 20
    cast_expr     go to state 21
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 46

   12 assign_expr: unary_expr SHREQ . assign_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    assign_expr   go to state 86
    unary_expr    go to state 18
    cond_expr     go to state 19
    arith_expr    go to state 20
    cast_expr     go to state 21
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 47

   13 assign_expr: unary_expr ANDEQ . assign_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    assign_expr   go to state 87
    unary_expr    go to state 18
    cond_expr     go to state 19
    arith_expr    go to state 20
    cast_expr     go to state 21
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 48

   15 assign_expr: unary_expr OREQ . assign_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    assign_expr   go to state 88
    unary_expr    go to state 18
    cond_expr     go to state 19
    arith_expr    go to state 20
    cast_expr     go to state 21
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 49

   14 assign_expr: unary_expr XOREQ . assign_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    assign_expr   go to state 89
    unary_expr    go to state 18
    cond_expr     go to state 19
    arith_expr    go to state 20
    cast_expr     go to state 21
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 50

    5 assign_expr: unary_expr '=' . assign_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    assign_expr   go to state 90
    unary_expr    go to state 18
    cond_expr     go to state 19
    arith_expr    go to state 20
    cast_expr     go to state 21
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 51

   48 arith_expr: arith_expr PLUSPLUS .

    $default  reduce using rule 48 (arith_expr)


State 52

   49 arith_expr: arith_expr MINUSMINUS .

    $default  reduce using rule 49 (arith_expr)


State 53

   39 arith_expr: arith_expr SHL . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 91
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 54

   38 arith_expr: arith_expr SHR . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 92
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 55

   42 arith_expr: arith_expr LTEQ . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 93
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 56

   43 arith_expr: arith_expr GTEQ . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 94
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 57

   44 arith_expr: arith_expr EQEQ . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 95
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 58

   45 arith_expr: arith_expr NOTEQ . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 96
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 59

   46 arith_expr: arith_expr LOGAND . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 97
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 60

   47 arith_expr: arith_expr LOGOR . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 98
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 61

   29 cond_expr: arith_expr '?' . expr ':' cond_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    expr          go to state 99
    assign_expr   go to state 17
    unary_expr    go to state 18
    cond_expr     go to state 19
    arith_expr    go to state 20
    cast_expr     go to state 21
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 62

   33 arith_expr: arith_expr '|' . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 100
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 63

   34 arith_expr: arith_expr '^' . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 101
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 64

   35 arith_expr: arith_expr '&' . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 102
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 65

   40 arith_expr: arith_expr '<' . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 103
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 66

   41 arith_expr: arith_expr '>' . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 104
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 67

   30 arith_expr: arith_expr '+' . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 105
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 68

   31 arith_expr: arith_expr '-' . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 106
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 69

   32 arith_expr: arith_expr '*' . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 107
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 70

   37 arith_expr: arith_expr '/' . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 108
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 71

   36 arith_expr: arith_expr '%' . cast_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cast_expr     go to state 109
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 72

   50 arith_expr: arith_expr '(' . ')'
   51           | arith_expr '(' . expr ')'

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12
    ')'         shift, and go to state 110
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    expr          go to state 111
    assign_expr   go to state 17
    unary_expr    go to state 18
    cond_expr     go to state 19
    arith_expr    go to state 20
    cast_expr     go to state 21
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 73

   58 postfix_expr: postfix_expr INDSEL . IDENT

    IDENT  shift, and go to state 112


State 74

   57 postfix_expr: postfix_expr '.' . IDENT

    IDENT  shift, and go to state 113


State 75

   56 postfix_expr: postfix_expr '[' . expr ']'

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    expr          go to state 114
    assign_expr   go to state 17
    unary_expr    go to state 18
    cond_expr     go to state 19
    arith_expr    go to state 20
    cast_expr     go to state 21
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 76

   21 unary_expr: SIZEOF '(' unary_expr . ')'

    ')'  shift, and go to state 115


State 77

   52 arith_expr: '(' arith_expr ')' .

    $default  reduce using rule 52 (arith_expr)


State 78

    2 statement: statement expr ';' .

    $default  reduce using rule 2 (statement)


State 79

    4 expr: expr ',' assign_expr .

    $default  reduce using rule 4 (expr)


State 80

    8 assign_expr: unary_expr TIMESEQ assign_expr .

    $default  reduce using rule 8 (assign_expr)


State 81

    9 assign_expr: unary_expr DIVEQ assign_expr .

    $default  reduce using rule 9 (assign_expr)


State 82

   10 assign_expr: unary_expr MODEQ assign_expr .

    $default  reduce using rule 10 (assign_expr)


State 83

    6 assign_expr: unary_expr PLUSEQ assign_expr .

    $default  reduce using rule 6 (assign_expr)


State 84

    7 assign_expr: unary_expr MINUSEQ assign_expr .

    $default  reduce using rule 7 (assign_expr)


State 85

   11 assign_expr: unary_expr SHLEQ assign_expr .

    $default  reduce using rule 11 (assign_expr)


State 86

   12 assign_expr: unary_expr SHREQ assign_expr .

    $default  reduce using rule 12 (assign_expr)


State 87

   13 assign_expr: unary_expr ANDEQ assign_expr .

    $default  reduce using rule 13 (assign_expr)


State 88

   15 assign_expr: unary_expr OREQ assign_expr .

    $default  reduce using rule 15 (assign_expr)


State 89

   14 assign_expr: unary_expr XOREQ assign_expr .

    $default  reduce using rule 14 (assign_expr)


State 90

    5 assign_expr: unary_expr '=' assign_expr .

    $default  reduce using rule 5 (assign_expr)


State 91

   39 arith_expr: arith_expr SHL cast_expr .

    $default  reduce using rule 39 (arith_expr)


State 92

   38 arith_expr: arith_expr SHR cast_expr .

    $default  reduce using rule 38 (arith_expr)


State 93

   42 arith_expr: arith_expr LTEQ cast_expr .

    $default  reduce using rule 42 (arith_expr)


State 94

   43 arith_expr: arith_expr GTEQ cast_expr .

    $default  reduce using rule 43 (arith_expr)


State 95

   44 arith_expr: arith_expr EQEQ cast_expr .

    $default  reduce using rule 44 (arith_expr)


State 96

   45 arith_expr: arith_expr NOTEQ cast_expr .

    $default  reduce using rule 45 (arith_expr)


State 97

   46 arith_expr: arith_expr LOGAND cast_expr .

    $default  reduce using rule 46 (arith_expr)


State 98

   47 arith_expr: arith_expr LOGOR cast_expr .

    $default  reduce using rule 47 (arith_expr)


State 99

    4 expr: expr . ',' assign_expr
   29 cond_expr: arith_expr '?' expr . ':' cond_expr

    ','  shift, and go to state 38
    ':'  shift, and go to state 116


State 100

   33 arith_expr: arith_expr '|' cast_expr .

    $default  reduce using rule 33 (arith_expr)


State 101

   34 arith_expr: arith_expr '^' cast_expr .

    $default  reduce using rule 34 (arith_expr)


State 102

   35 arith_expr: arith_expr '&' cast_expr .

    $default  reduce using rule 35 (arith_expr)


State 103

   40 arith_expr: arith_expr '<' cast_expr .

    $default  reduce using rule 40 (arith_expr)


State 104

   41 arith_expr: arith_expr '>' cast_expr .

    $default  reduce using rule 41 (arith_expr)


State 105

   30 arith_expr: arith_expr '+' cast_expr .

    $default  reduce using rule 30 (arith_expr)


State 106

   31 arith_expr: arith_expr '-' cast_expr .

    $default  reduce using rule 31 (arith_expr)


State 107

   32 arith_expr: arith_expr '*' cast_expr .

    $default  reduce using rule 32 (arith_expr)


State 108

   37 arith_expr: arith_expr '/' cast_expr .

    $default  reduce using rule 37 (arith_expr)


State 109

   36 arith_expr: arith_expr '%' cast_expr .

    $default  reduce using rule 36 (arith_expr)


State 110

   50 arith_expr: arith_expr '(' ')' .

    $default  reduce using rule 50 (arith_expr)


State 111

    4 expr: expr . ',' assign_expr
   51 arith_expr: arith_expr '(' expr . ')'

    ','  shift, and go to state 38
    ')'  shift, and go to state 117


State 112

   58 postfix_expr: postfix_expr INDSEL IDENT .

    $default  reduce using rule 58 (postfix_expr)


State 113

   57 postfix_expr: postfix_expr '.' IDENT .

    $default  reduce using rule 57 (postfix_expr)


State 114

    4 expr: expr . ',' assign_expr
   56 postfix_expr: postfix_expr '[' expr . ']'

    ','  shift, and go to state 38
    ']'  shift, and go to state 118


State 115

   21 unary_expr: SIZEOF '(' unary_expr ')' .

    $default  reduce using rule 21 (unary_expr)


State 116

   29 cond_expr: arith_expr '?' expr ':' . cond_expr

    IDENT       shift, and go to state 1
    CHARLIT     shift, and go to state 2
    STRING      shift, and go to state 3
    NUMBER      shift, and go to state 4
    PLUSPLUS    shift, and go to state 5
    MINUSMINUS  shift, and go to state 6
    SIZEOF      shift, and go to state 7
    '&'         shift, and go to state 8
    '+'         shift, and go to state 9
    '-'         shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12
    '~'         shift, and go to state 13
    '!'         shift, and go to state 14

    unary_expr    go to state 28
    cond_expr     go to state 119
    arith_expr    go to state 20
    cast_expr     go to state 21
    postfix_expr  go to state 22
    prim_expr     go to state 23


State 117

   51 arith_expr: arith_expr '(' expr ')' .

    $default  reduce using rule 51 (arith_expr)


State 118

   56 postfix_expr: postfix_expr '[' expr ']' .

    $default  reduce using rule 56 (postfix_expr)


State 119

   29 cond_expr: arith_expr '?' expr ':' cond_expr .

    $default  reduce using rule 29 (cond_expr)
