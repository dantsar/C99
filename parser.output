Terminals unused in grammar

    ENUM
    _IMAGINARY


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: extern_declaration
    2                 | translation_unit extern_declaration

    3 extern_declaration: declaration
    4                   | func_def

    5 prim_expr: IDENT
    6          | NUMBER
    7          | CHARLIT
    8          | STRING

    9 postfix_expr: prim_expr
   10             | postfix_expr '[' expr ']'
   11             | postfix_expr '.' IDENT
   12             | postfix_expr INDSEL IDENT
   13             | postfix_expr '(' ')'
   14             | postfix_expr '(' expr ')'

   15 assign_expr: unary_expr '=' assign_expr
   16            | unary_expr PLUSEQ assign_expr
   17            | unary_expr MINUSEQ assign_expr
   18            | unary_expr TIMESEQ assign_expr
   19            | unary_expr DIVEQ assign_expr
   20            | unary_expr MODEQ assign_expr
   21            | unary_expr SHLEQ assign_expr
   22            | unary_expr SHREQ assign_expr
   23            | unary_expr ANDEQ assign_expr
   24            | unary_expr XOREQ assign_expr
   25            | unary_expr OREQ assign_expr
   26            | cond_expr

   27 unary_expr: postfix_expr
   28           | PLUSPLUS unary_expr
   29           | MINUSMINUS unary_expr
   30           | SIZEOF unary_expr
   31           | SIZEOF '(' unary_expr ')'
   32           | '&' cast_expr
   33           | '*' cast_expr
   34           | '+' cast_expr
   35           | '-' cast_expr
   36           | '~' cast_expr
   37           | '!' cast_expr

   38 cond_expr: arith_expr
   39          | arith_expr '?' expr ':' cond_expr

   40 expr: assign_expr
   41     | expr ',' assign_expr

   42 const_expr: cond_expr

   43 arith_expr: arith_expr '+' arith_expr
   44           | arith_expr '-' arith_expr
   45           | arith_expr '*' arith_expr
   46           | arith_expr '|' arith_expr
   47           | arith_expr '^' arith_expr
   48           | arith_expr '&' arith_expr
   49           | arith_expr '%' arith_expr
   50           | arith_expr '/' arith_expr
   51           | arith_expr SHR arith_expr
   52           | arith_expr SHL arith_expr
   53           | arith_expr '<' arith_expr
   54           | arith_expr '>' arith_expr
   55           | arith_expr LTEQ arith_expr
   56           | arith_expr GTEQ arith_expr
   57           | arith_expr EQEQ arith_expr
   58           | arith_expr NOTEQ arith_expr
   59           | arith_expr LOGAND arith_expr
   60           | arith_expr LOGOR arith_expr
   61           | arith_expr PLUSPLUS
   62           | arith_expr MINUSMINUS
   63           | '(' arith_expr ')'
   64           | cast_expr

   65 cast_expr: unary_expr

   66 declaration: declaration_specs ';'
   67            | declaration_specs init_decl_list ';'

   68 declaration_specs: declaration_spec
   69                  | declaration_specs declaration_spec

   70 declaration_spec: stg_class_spec
   71                 | type_spec
   72                 | type_qualif
   73                 | func_spec

   74 init_decl_list: init_decl
   75               | init_decl_list ',' init_decl

   76 init_decl: decl

   77 stg_class_spec: AUTO
   78               | STATIC
   79               | EXTERN
   80               | TYPEDEF
   81               | REGISTER

   82 type_spec: VOID
   83          | CHAR
   84          | SHORT
   85          | INT
   86          | LONG
   87          | FLOAT
   88          | DOUBLE
   89          | SIGNED
   90          | UNSIGNED
   91          | _BOOL
   92          | _COMPLEX
   93          | struct_union_spec

   94 struct_union_spec: struct_union '{' struct_declaration_list '}'
   95                  | struct_union IDENT '{' struct_declaration_list '}'
   96                  | struct_union IDENT

   97 struct_union: STRUCT
   98             | UNION

   99 struct_declaration_list: struct_declaration
  100                        | struct_declaration_list struct_declaration

  101 struct_declaration: specific_qualif_list struct_decl_list ';'

  102 specific_qualif_list: type_spec
  103                     | specific_qualif_list type_spec
  104                     | type_qualif
  105                     | specific_qualif_list type_qualif

  106 struct_decl_list: struct_decl
  107                 | struct_decl_list ',' struct_decl

  108 struct_decl: decl

  109 type_qualif: CONST
  110            | RESTRICT
  111            | VOLATILE

  112 func_spec: INLINE

  113 decl: direct_decl
  114     | pointer direct_decl

  115 direct_decl: IDENT
  116            | '(' decl ')'
  117            | direct_decl '[' assign_expr ']'
  118            | direct_decl '[' ']'
  119            | direct_decl '(' param_type_list ')'
  120            | direct_decl '(' ')'
  121            | direct_decl '(' ident_list ')'

  122 pointer: '*'
  123        | '*' pointer
  124        | '*' type_qualif_list
  125        | '*' type_qualif_list pointer

  126 type_qualif_list: type_qualif
  127                 | type_qualif_list type_qualif

  128 param_type_list: param_list
  129                | param_list ',' ELLIPSIS

  130 param_list: param_declaration
  131           | param_list ',' param_declaration

  132 param_declaration: declaration_specs decl
  133                  | declaration_specs

  134 ident_list: IDENT
  135           | ident_list ',' IDENT

  136 statement: expr_stmnt
  137          | label_stmnt
  138          | compound_stmnt
  139          | select_stmnt
  140          | iterat_stmnt
  141          | jump_stmnt

  142 label_stmnt: IDENT ':' statement
  143            | CASE const_expr ':' statement
  144            | DEFAULT ':' statement

  145 compound_stmnt: '{' '}'

  146 $@1: %empty

  147 compound_stmnt: '{' $@1 block_item_list '}'

  148 block_item_list: block_item
  149                | block_item_list block_item

  150 block_item: declaration
  151           | statement

  152 expr_stmnt: expr ';'

  153 select_stmnt: IF '(' expr ')' statement
  154             | IF '(' expr ')' statement ELSE statement
  155             | SWITCH '(' expr ')' statement

  156 iterat_stmnt: WHILE '(' expr ')' statement
  157             | DO statement WHILE '(' expr ')' ';'

  158 $@2: %empty

  159 iterat_stmnt: FOR '(' $@2 expr_opt ';' expr_opt ';' expr_opt ')' statement

  160 expr_opt: expr
  161         | %empty

  162 jump_stmnt: GOTO IDENT ';'
  163           | CONTINUE ';'
  164           | BREAK ';'
  165           | RETURN expr_opt ';'

  166 func_def: declaration_specs decl compound_stmnt
  167         | declaration_specs decl declaration_list compound_stmnt

  168 declaration_list: declaration
  169                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    '!' <c> (33) 37
    '%' <c> (37) 49
    '&' <c> (38) 32 48
    '(' <c> (40) 13 14 31 63 116 119 120 121 153 154 155 156 157 159
    ')' <c> (41) 13 14 31 63 116 119 120 121 153 154 155 156 157 159
    '*' <c> (42) 33 45 122 123 124 125
    '+' <c> (43) 34 43
    ',' <c> (44) 41 75 107 129 131 135
    '-' <c> (45) 35 44
    '.' <c> (46) 11
    '/' <c> (47) 50
    ':' <c> (58) 39 142 143 144
    ';' (59) 66 67 101 152 157 159 162 163 164 165
    '<' <c> (60) 53
    '=' <c> (61) 15
    '>' <c> (62) 54
    '?' <c> (63) 39
    '[' <c> (91) 10 117 118
    ']' <c> (93) 10 117 118
    '^' <c> (94) 47
    '{' (123) 94 95 145 147
    '|' <c> (124) 46
    '}' (125) 94 95 145 147
    '~' <c> (126) 36
    error (256)
    IDENT <ident> (258) 5 11 12 95 96 115 134 135 142 162
    CHARLIT <charlit> (259) 7
    STRING <str> (260) 8
    NUMBER <num> (261) 6
    INDSEL <c> (262) 12
    PLUSPLUS <c> (263) 28 61
    MINUSMINUS <c> (264) 29 62
    SHL <c> (265) 52
    SHR <c> (266) 51
    LTEQ <c> (267) 55
    GTEQ <c> (268) 56
    EQEQ <c> (269) 57
    NOTEQ <c> (270) 58
    LOGAND <c> (271) 59
    LOGOR <c> (272) 60
    ELLIPSIS (273) 129
    TIMESEQ <c> (274) 18
    DIVEQ <c> (275) 19
    MODEQ <c> (276) 20
    PLUSEQ <c> (277) 16
    MINUSEQ <c> (278) 17
    SHLEQ <c> (279) 21
    SHREQ <c> (280) 22
    ANDEQ <c> (281) 23
    OREQ <c> (282) 25
    XOREQ <c> (283) 24
    AUTO (284) 77
    BREAK (285) 164
    CASE (286) 143
    CHAR (287) 83
    CONST (288) 109
    CONTINUE (289) 163
    DEFAULT (290) 144
    DO (291) 157
    DOUBLE (292) 88
    ELSE (293) 154
    ENUM (294)
    EXTERN (295) 79
    FLOAT (296) 87
    FOR (297) 159
    GOTO (298) 162
    IF (299) 153 154
    INLINE (300) 112
    INT (301) 85
    LONG (302) 86
    REGISTER (303) 81
    RESTRICT (304) 110
    RETURN (305) 165
    SHORT (306) 84
    SIGNED (307) 89
    SIZEOF (308) 30 31
    STATIC (309) 78
    STRUCT (310) 97
    SWITCH (311) 155
    TYPEDEF (312) 80
    UNION (313) 98
    UNSIGNED (314) 90
    VOID (315) 82
    VOLATILE (316) 111
    WHILE (317) 156 157
    _BOOL (318) 91
    _COMPLEX (319) 92
    _IMAGINARY (320)


Nonterminals, with rules where they appear

    $accept (90)
        on left: 0
    translation_unit <astnode_p> (91)
        on left: 1 2
        on right: 0 2
    extern_declaration <astnode_p> (92)
        on left: 3 4
        on right: 1 2
    prim_expr <astnode_p> (93)
        on left: 5 6 7 8
        on right: 9
    postfix_expr <astnode_p> (94)
        on left: 9 10 11 12 13 14
        on right: 10 11 12 13 14 27
    assign_expr <astnode_p> (95)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26
        on right: 15 16 17 18 19 20 21 22 23 24 25 40 41 117
    unary_expr <astnode_p> (96)
        on left: 27 28 29 30 31 32 33 34 35 36 37
        on right: 15 16 17 18 19 20 21 22 23 24 25 28 29 30 31 65
    cond_expr <astnode_p> (97)
        on left: 38 39
        on right: 26 39 42
    expr <astnode_p> (98)
        on left: 40 41
        on right: 10 14 39 41 152 153 154 155 156 157 160
    const_expr <astnode_p> (99)
        on left: 42
        on right: 143
    arith_expr <astnode_p> (100)
        on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
        on right: 38 39 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
    cast_expr <astnode_p> (101)
        on left: 65
        on right: 32 33 34 35 36 37 64
    declaration <astnode_p> (102)
        on left: 66 67
        on right: 3 150 168 169
    declaration_specs <astnode_p> (103)
        on left: 68 69
        on right: 66 67 69 132 133 166 167
    declaration_spec <astnode_p> (104)
        on left: 70 71 72 73
        on right: 68 69
    init_decl_list <astnode_p> (105)
        on left: 74 75
        on right: 67 75
    init_decl <astnode_p> (106)
        on left: 76
        on right: 74 75
    stg_class_spec <astnode_p> (107)
        on left: 77 78 79 80 81
        on right: 70
    type_spec <astnode_p> (108)
        on left: 82 83 84 85 86 87 88 89 90 91 92 93
        on right: 71 102 103
    struct_union_spec <astnode_p> (109)
        on left: 94 95 96
        on right: 93
    struct_union <astnode_p> (110)
        on left: 97 98
        on right: 94 95 96
    struct_declaration_list <astnode_p> (111)
        on left: 99 100
        on right: 94 95 100
    struct_declaration <astnode_p> (112)
        on left: 101
        on right: 99 100
    specific_qualif_list <astnode_p> (113)
        on left: 102 103 104 105
        on right: 101 103 105
    struct_decl_list <astnode_p> (114)
        on left: 106 107
        on right: 101 107
    struct_decl <astnode_p> (115)
        on left: 108
        on right: 106 107
    type_qualif <astnode_p> (116)
        on left: 109 110 111
        on right: 72 104 105 126 127
    func_spec <astnode_p> (117)
        on left: 112
        on right: 73
    decl <astnode_p> (118)
        on left: 113 114
        on right: 76 108 116 132 166 167
    direct_decl <astnode_p> (119)
        on left: 115 116 117 118 119 120 121
        on right: 113 114 117 118 119 120 121
    pointer <astnode_p> (120)
        on left: 122 123 124 125
        on right: 114 123 125
    type_qualif_list (121)
        on left: 126 127
        on right: 124 125 127
    param_type_list <astnode_p> (122)
        on left: 128 129
        on right: 119
    param_list <astnode_p> (123)
        on left: 130 131
        on right: 128 129 131
    param_declaration <astnode_p> (124)
        on left: 132 133
        on right: 130 131
    ident_list <astnode_p> (125)
        on left: 134 135
        on right: 121 135
    statement <astnode_p> (126)
        on left: 136 137 138 139 140 141
        on right: 142 143 144 151 153 154 155 156 157 159
    label_stmnt <astnode_p> (127)
        on left: 142 143 144
        on right: 137
    compound_stmnt <astnode_p> (128)
        on left: 145 147
        on right: 138 166 167
    $@1 (129)
        on left: 146
        on right: 147
    block_item_list <astnode_p> (130)
        on left: 148 149
        on right: 147 149
    block_item <astnode_p> (131)
        on left: 150 151
        on right: 148 149
    expr_stmnt <astnode_p> (132)
        on left: 152
        on right: 136
    select_stmnt <astnode_p> (133)
        on left: 153 154 155
        on right: 139
    iterat_stmnt <astnode_p> (134)
        on left: 156 157 159
        on right: 140
    $@2 (135)
        on left: 158
        on right: 159
    expr_opt <astnode_p> (136)
        on left: 160 161
        on right: 159 165
    jump_stmnt <astnode_p> (137)
        on left: 162 163 164 165
        on right: 141
    func_def <astnode_p> (138)
        on left: 166 167
        on right: 4
    declaration_list <astnode_p> (139)
        on left: 168 169
        on right: 167 169


State 0

    0 $accept: . translation_unit $end

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    STRUCT    shift, and go to state 15
    TYPEDEF   shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    translation_unit    go to state 23
    extern_declaration  go to state 24
    declaration         go to state 25
    declaration_specs   go to state 26
    declaration_spec    go to state 27
    stg_class_spec      go to state 28
    type_spec           go to state 29
    struct_union_spec   go to state 30
    struct_union        go to state 31
    type_qualif         go to state 32
    func_spec           go to state 33
    func_def            go to state 34


State 1

   77 stg_class_spec: AUTO .

    $default  reduce using rule 77 (stg_class_spec)


State 2

   83 type_spec: CHAR .

    $default  reduce using rule 83 (type_spec)


State 3

  109 type_qualif: CONST .

    $default  reduce using rule 109 (type_qualif)


State 4

   88 type_spec: DOUBLE .

    $default  reduce using rule 88 (type_spec)


State 5

   79 stg_class_spec: EXTERN .

    $default  reduce using rule 79 (stg_class_spec)


State 6

   87 type_spec: FLOAT .

    $default  reduce using rule 87 (type_spec)


State 7

  112 func_spec: INLINE .

    $default  reduce using rule 112 (func_spec)


State 8

   85 type_spec: INT .

    $default  reduce using rule 85 (type_spec)


State 9

   86 type_spec: LONG .

    $default  reduce using rule 86 (type_spec)


State 10

   81 stg_class_spec: REGISTER .

    $default  reduce using rule 81 (stg_class_spec)


State 11

  110 type_qualif: RESTRICT .

    $default  reduce using rule 110 (type_qualif)


State 12

   84 type_spec: SHORT .

    $default  reduce using rule 84 (type_spec)


State 13

   89 type_spec: SIGNED .

    $default  reduce using rule 89 (type_spec)


State 14

   78 stg_class_spec: STATIC .

    $default  reduce using rule 78 (stg_class_spec)


State 15

   97 struct_union: STRUCT .

    $default  reduce using rule 97 (struct_union)


State 16

   80 stg_class_spec: TYPEDEF .

    $default  reduce using rule 80 (stg_class_spec)


State 17

   98 struct_union: UNION .

    $default  reduce using rule 98 (struct_union)


State 18

   90 type_spec: UNSIGNED .

    $default  reduce using rule 90 (type_spec)


State 19

   82 type_spec: VOID .

    $default  reduce using rule 82 (type_spec)


State 20

  111 type_qualif: VOLATILE .

    $default  reduce using rule 111 (type_qualif)


State 21

   91 type_spec: _BOOL .

    $default  reduce using rule 91 (type_spec)


State 22

   92 type_spec: _COMPLEX .

    $default  reduce using rule 92 (type_spec)


State 23

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . extern_declaration

    $end      shift, and go to state 35
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    STRUCT    shift, and go to state 15
    TYPEDEF   shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    extern_declaration  go to state 36
    declaration         go to state 25
    declaration_specs   go to state 26
    declaration_spec    go to state 27
    stg_class_spec      go to state 28
    type_spec           go to state 29
    struct_union_spec   go to state 30
    struct_union        go to state 31
    type_qualif         go to state 32
    func_spec           go to state 33
    func_def            go to state 34


State 24

    1 translation_unit: extern_declaration .

    $default  reduce using rule 1 (translation_unit)


State 25

    3 extern_declaration: declaration .

    $default  reduce using rule 3 (extern_declaration)


State 26

   66 declaration: declaration_specs . ';'
   67            | declaration_specs . init_decl_list ';'
   69 declaration_specs: declaration_specs . declaration_spec
  166 func_def: declaration_specs . decl compound_stmnt
  167         | declaration_specs . decl declaration_list compound_stmnt

    IDENT     shift, and go to state 37
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    STRUCT    shift, and go to state 15
    TYPEDEF   shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '*'       shift, and go to state 38
    '('       shift, and go to state 39
    ';'       shift, and go to state 40

    declaration_spec   go to state 41
    init_decl_list     go to state 42
    init_decl          go to state 43
    stg_class_spec     go to state 28
    type_spec          go to state 29
    struct_union_spec  go to state 30
    struct_union       go to state 31
    type_qualif        go to state 32
    func_spec          go to state 33
    decl               go to state 44
    direct_decl        go to state 45
    pointer            go to state 46


State 27

   68 declaration_specs: declaration_spec .

    $default  reduce using rule 68 (declaration_specs)


State 28

   70 declaration_spec: stg_class_spec .

    $default  reduce using rule 70 (declaration_spec)


State 29

   71 declaration_spec: type_spec .

    $default  reduce using rule 71 (declaration_spec)


State 30

   93 type_spec: struct_union_spec .

    $default  reduce using rule 93 (type_spec)


State 31

   94 struct_union_spec: struct_union . '{' struct_declaration_list '}'
   95                  | struct_union . IDENT '{' struct_declaration_list '}'
   96                  | struct_union . IDENT

    IDENT  shift, and go to state 47
    '{'    shift, and go to state 48


State 32

   72 declaration_spec: type_qualif .

    $default  reduce using rule 72 (declaration_spec)


State 33

   73 declaration_spec: func_spec .

    $default  reduce using rule 73 (declaration_spec)


State 34

    4 extern_declaration: func_def .

    $default  reduce using rule 4 (extern_declaration)


State 35

    0 $accept: translation_unit $end .

    $default  accept


State 36

    2 translation_unit: translation_unit extern_declaration .

    $default  reduce using rule 2 (translation_unit)


State 37

  115 direct_decl: IDENT .

    $default  reduce using rule 115 (direct_decl)


State 38

  122 pointer: '*' .
  123        | '*' . pointer
  124        | '*' . type_qualif_list
  125        | '*' . type_qualif_list pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 20
    '*'       shift, and go to state 38

    $default  reduce using rule 122 (pointer)

    type_qualif       go to state 49
    pointer           go to state 50
    type_qualif_list  go to state 51


State 39

  116 direct_decl: '(' . decl ')'

    IDENT  shift, and go to state 37
    '*'    shift, and go to state 38
    '('    shift, and go to state 39

    decl         go to state 52
    direct_decl  go to state 45
    pointer      go to state 46


State 40

   66 declaration: declaration_specs ';' .

    $default  reduce using rule 66 (declaration)


State 41

   69 declaration_specs: declaration_specs declaration_spec .

    $default  reduce using rule 69 (declaration_specs)


State 42

   67 declaration: declaration_specs init_decl_list . ';'
   75 init_decl_list: init_decl_list . ',' init_decl

    ','  shift, and go to state 53
    ';'  shift, and go to state 54


State 43

   74 init_decl_list: init_decl .

    $default  reduce using rule 74 (init_decl_list)


State 44

   76 init_decl: decl .
  166 func_def: declaration_specs decl . compound_stmnt
  167         | declaration_specs decl . declaration_list compound_stmnt

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    STRUCT    shift, and go to state 15
    TYPEDEF   shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '{'       shift, and go to state 55

    $default  reduce using rule 76 (init_decl)

    declaration        go to state 56
    declaration_specs  go to state 57
    declaration_spec   go to state 27
    stg_class_spec     go to state 28
    type_spec          go to state 29
    struct_union_spec  go to state 30
    struct_union       go to state 31
    type_qualif        go to state 32
    func_spec          go to state 33
    compound_stmnt     go to state 58
    declaration_list   go to state 59


State 45

  113 decl: direct_decl .
  117 direct_decl: direct_decl . '[' assign_expr ']'
  118            | direct_decl . '[' ']'
  119            | direct_decl . '(' param_type_list ')'
  120            | direct_decl . '(' ')'
  121            | direct_decl . '(' ident_list ')'

    '('  shift, and go to state 60
    '['  shift, and go to state 61

    $default  reduce using rule 113 (decl)


State 46

  114 decl: pointer . direct_decl

    IDENT  shift, and go to state 37
    '('    shift, and go to state 39

    direct_decl  go to state 62


State 47

   95 struct_union_spec: struct_union IDENT . '{' struct_declaration_list '}'
   96                  | struct_union IDENT .

    '{'  shift, and go to state 63

    $default  reduce using rule 96 (struct_union_spec)


State 48

   94 struct_union_spec: struct_union '{' . struct_declaration_list '}'

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    FLOAT     shift, and go to state 6
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    type_spec                go to state 64
    struct_union_spec        go to state 30
    struct_union             go to state 31
    struct_declaration_list  go to state 65
    struct_declaration       go to state 66
    specific_qualif_list     go to state 67
    type_qualif              go to state 68


State 49

  126 type_qualif_list: type_qualif .

    $default  reduce using rule 126 (type_qualif_list)


State 50

  123 pointer: '*' pointer .

    $default  reduce using rule 123 (pointer)


State 51

  124 pointer: '*' type_qualif_list .
  125        | '*' type_qualif_list . pointer
  127 type_qualif_list: type_qualif_list . type_qualif

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 11
    VOLATILE  shift, and go to state 20
    '*'       shift, and go to state 38

    $default  reduce using rule 124 (pointer)

    type_qualif  go to state 69
    pointer      go to state 70


State 52

  116 direct_decl: '(' decl . ')'

    ')'  shift, and go to state 71


State 53

   75 init_decl_list: init_decl_list ',' . init_decl

    IDENT  shift, and go to state 37
    '*'    shift, and go to state 38
    '('    shift, and go to state 39

    init_decl    go to state 72
    decl         go to state 73
    direct_decl  go to state 45
    pointer      go to state 46


State 54

   67 declaration: declaration_specs init_decl_list ';' .

    $default  reduce using rule 67 (declaration)


State 55

  145 compound_stmnt: '{' . '}'
  147               | '{' . $@1 block_item_list '}'

    '}'  shift, and go to state 74

    $default  reduce using rule 146 ($@1)

    $@1  go to state 75


State 56

  168 declaration_list: declaration .

    $default  reduce using rule 168 (declaration_list)


State 57

   66 declaration: declaration_specs . ';'
   67            | declaration_specs . init_decl_list ';'
   69 declaration_specs: declaration_specs . declaration_spec

    IDENT     shift, and go to state 37
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    STRUCT    shift, and go to state 15
    TYPEDEF   shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '*'       shift, and go to state 38
    '('       shift, and go to state 39
    ';'       shift, and go to state 40

    declaration_spec   go to state 41
    init_decl_list     go to state 42
    init_decl          go to state 43
    stg_class_spec     go to state 28
    type_spec          go to state 29
    struct_union_spec  go to state 30
    struct_union       go to state 31
    type_qualif        go to state 32
    func_spec          go to state 33
    decl               go to state 73
    direct_decl        go to state 45
    pointer            go to state 46


State 58

  166 func_def: declaration_specs decl compound_stmnt .

    $default  reduce using rule 166 (func_def)


State 59

  167 func_def: declaration_specs decl declaration_list . compound_stmnt
  169 declaration_list: declaration_list . declaration

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    STRUCT    shift, and go to state 15
    TYPEDEF   shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '{'       shift, and go to state 55

    declaration        go to state 76
    declaration_specs  go to state 57
    declaration_spec   go to state 27
    stg_class_spec     go to state 28
    type_spec          go to state 29
    struct_union_spec  go to state 30
    struct_union       go to state 31
    type_qualif        go to state 32
    func_spec          go to state 33
    compound_stmnt     go to state 77


State 60

  119 direct_decl: direct_decl '(' . param_type_list ')'
  120            | direct_decl '(' . ')'
  121            | direct_decl '(' . ident_list ')'

    IDENT     shift, and go to state 78
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    STRUCT    shift, and go to state 15
    TYPEDEF   shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    ')'       shift, and go to state 79

    declaration_specs  go to state 80
    declaration_spec   go to state 27
    stg_class_spec     go to state 28
    type_spec          go to state 29
    struct_union_spec  go to state 30
    struct_union       go to state 31
    type_qualif        go to state 32
    func_spec          go to state 33
    param_type_list    go to state 81
    param_list         go to state 82
    param_declaration  go to state 83
    ident_list         go to state 84


State 61

  117 direct_decl: direct_decl '[' . assign_expr ']'
  118            | direct_decl '[' . ']'

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98
    ']'         shift, and go to state 99

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 102
    unary_expr    go to state 103
    cond_expr     go to state 104
    arith_expr    go to state 105
    cast_expr     go to state 106


State 62

  114 decl: pointer direct_decl .
  117 direct_decl: direct_decl . '[' assign_expr ']'
  118            | direct_decl . '[' ']'
  119            | direct_decl . '(' param_type_list ')'
  120            | direct_decl . '(' ')'
  121            | direct_decl . '(' ident_list ')'

    '('  shift, and go to state 60
    '['  shift, and go to state 61

    $default  reduce using rule 114 (decl)


State 63

   95 struct_union_spec: struct_union IDENT '{' . struct_declaration_list '}'

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    FLOAT     shift, and go to state 6
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    type_spec                go to state 64
    struct_union_spec        go to state 30
    struct_union             go to state 31
    struct_declaration_list  go to state 107
    struct_declaration       go to state 66
    specific_qualif_list     go to state 67
    type_qualif              go to state 68


State 64

  102 specific_qualif_list: type_spec .

    $default  reduce using rule 102 (specific_qualif_list)


State 65

   94 struct_union_spec: struct_union '{' struct_declaration_list . '}'
  100 struct_declaration_list: struct_declaration_list . struct_declaration

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    FLOAT     shift, and go to state 6
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '}'       shift, and go to state 108

    type_spec             go to state 64
    struct_union_spec     go to state 30
    struct_union          go to state 31
    struct_declaration    go to state 109
    specific_qualif_list  go to state 67
    type_qualif           go to state 68


State 66

   99 struct_declaration_list: struct_declaration .

    $default  reduce using rule 99 (struct_declaration_list)


State 67

  101 struct_declaration: specific_qualif_list . struct_decl_list ';'
  103 specific_qualif_list: specific_qualif_list . type_spec
  105                     | specific_qualif_list . type_qualif

    IDENT     shift, and go to state 37
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    FLOAT     shift, and go to state 6
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '*'       shift, and go to state 38
    '('       shift, and go to state 39

    type_spec          go to state 110
    struct_union_spec  go to state 30
    struct_union       go to state 31
    struct_decl_list   go to state 111
    struct_decl        go to state 112
    type_qualif        go to state 113
    decl               go to state 114
    direct_decl        go to state 45
    pointer            go to state 46


State 68

  104 specific_qualif_list: type_qualif .

    $default  reduce using rule 104 (specific_qualif_list)


State 69

  127 type_qualif_list: type_qualif_list type_qualif .

    $default  reduce using rule 127 (type_qualif_list)


State 70

  125 pointer: '*' type_qualif_list pointer .

    $default  reduce using rule 125 (pointer)


State 71

  116 direct_decl: '(' decl ')' .

    $default  reduce using rule 116 (direct_decl)


State 72

   75 init_decl_list: init_decl_list ',' init_decl .

    $default  reduce using rule 75 (init_decl_list)


State 73

   76 init_decl: decl .

    $default  reduce using rule 76 (init_decl)


State 74

  145 compound_stmnt: '{' '}' .

    $default  reduce using rule 145 (compound_stmnt)


State 75

  147 compound_stmnt: '{' $@1 . block_item_list '}'

    IDENT       shift, and go to state 115
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    AUTO        shift, and go to state 1
    BREAK       shift, and go to state 116
    CASE        shift, and go to state 117
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    CONTINUE    shift, and go to state 118
    DEFAULT     shift, and go to state 119
    DO          shift, and go to state 120
    DOUBLE      shift, and go to state 4
    EXTERN      shift, and go to state 5
    FLOAT       shift, and go to state 6
    FOR         shift, and go to state 121
    GOTO        shift, and go to state 122
    IF          shift, and go to state 123
    INLINE      shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    REGISTER    shift, and go to state 10
    RESTRICT    shift, and go to state 11
    RETURN      shift, and go to state 124
    SHORT       shift, and go to state 12
    SIGNED      shift, and go to state 13
    SIZEOF      shift, and go to state 91
    STATIC      shift, and go to state 14
    STRUCT      shift, and go to state 15
    SWITCH      shift, and go to state 125
    TYPEDEF     shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    WHILE       shift, and go to state 126
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98
    '{'         shift, and go to state 55

    prim_expr          go to state 100
    postfix_expr       go to state 101
    assign_expr        go to state 127
    unary_expr         go to state 103
    cond_expr          go to state 104
    expr               go to state 128
    arith_expr         go to state 105
    cast_expr          go to state 106
    declaration        go to state 129
    declaration_specs  go to state 57
    declaration_spec   go to state 27
    stg_class_spec     go to state 28
    type_spec          go to state 29
    struct_union_spec  go to state 30
    struct_union       go to state 31
    type_qualif        go to state 32
    func_spec          go to state 33
    statement          go to state 130
    label_stmnt        go to state 131
    compound_stmnt     go to state 132
    block_item_list    go to state 133
    block_item         go to state 134
    expr_stmnt         go to state 135
    select_stmnt       go to state 136
    iterat_stmnt       go to state 137
    jump_stmnt         go to state 138


State 76

  169 declaration_list: declaration_list declaration .

    $default  reduce using rule 169 (declaration_list)


State 77

  167 func_def: declaration_specs decl declaration_list compound_stmnt .

    $default  reduce using rule 167 (func_def)


State 78

  134 ident_list: IDENT .

    $default  reduce using rule 134 (ident_list)


State 79

  120 direct_decl: direct_decl '(' ')' .

    $default  reduce using rule 120 (direct_decl)


State 80

   69 declaration_specs: declaration_specs . declaration_spec
  132 param_declaration: declaration_specs . decl
  133                  | declaration_specs .

    IDENT     shift, and go to state 37
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    STRUCT    shift, and go to state 15
    TYPEDEF   shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '*'       shift, and go to state 38
    '('       shift, and go to state 39

    $default  reduce using rule 133 (param_declaration)

    declaration_spec   go to state 41
    stg_class_spec     go to state 28
    type_spec          go to state 29
    struct_union_spec  go to state 30
    struct_union       go to state 31
    type_qualif        go to state 32
    func_spec          go to state 33
    decl               go to state 139
    direct_decl        go to state 45
    pointer            go to state 46


State 81

  119 direct_decl: direct_decl '(' param_type_list . ')'

    ')'  shift, and go to state 140


State 82

  128 param_type_list: param_list .
  129                | param_list . ',' ELLIPSIS
  131 param_list: param_list . ',' param_declaration

    ','  shift, and go to state 141

    $default  reduce using rule 128 (param_type_list)


State 83

  130 param_list: param_declaration .

    $default  reduce using rule 130 (param_list)


State 84

  121 direct_decl: direct_decl '(' ident_list . ')'
  135 ident_list: ident_list . ',' IDENT

    ','  shift, and go to state 142
    ')'  shift, and go to state 143


State 85

    5 prim_expr: IDENT .

    $default  reduce using rule 5 (prim_expr)


State 86

    7 prim_expr: CHARLIT .

    $default  reduce using rule 7 (prim_expr)


State 87

    8 prim_expr: STRING .

    $default  reduce using rule 8 (prim_expr)


State 88

    6 prim_expr: NUMBER .

    $default  reduce using rule 6 (prim_expr)


State 89

   28 unary_expr: PLUSPLUS . unary_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 144


State 90

   29 unary_expr: MINUSMINUS . unary_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 145


State 91

   30 unary_expr: SIZEOF . unary_expr
   31           | SIZEOF . '(' unary_expr ')'

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 146

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 147


State 92

   32 unary_expr: '&' . cast_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    cast_expr     go to state 149


State 93

   34 unary_expr: '+' . cast_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    cast_expr     go to state 150


State 94

   35 unary_expr: '-' . cast_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    cast_expr     go to state 151


State 95

   33 unary_expr: '*' . cast_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    cast_expr     go to state 152


State 96

   36 unary_expr: '~' . cast_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    cast_expr     go to state 153


State 97

   37 unary_expr: '!' . cast_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    cast_expr     go to state 154


State 98

   63 arith_expr: '(' . arith_expr ')'

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    arith_expr    go to state 155
    cast_expr     go to state 106


State 99

  118 direct_decl: direct_decl '[' ']' .

    $default  reduce using rule 118 (direct_decl)


State 100

    9 postfix_expr: prim_expr .

    $default  reduce using rule 9 (postfix_expr)


State 101

   10 postfix_expr: postfix_expr . '[' expr ']'
   11             | postfix_expr . '.' IDENT
   12             | postfix_expr . INDSEL IDENT
   13             | postfix_expr . '(' ')'
   14             | postfix_expr . '(' expr ')'
   27 unary_expr: postfix_expr .

    INDSEL  shift, and go to state 156
    '('     shift, and go to state 157
    '.'     shift, and go to state 158
    '['     shift, and go to state 159

    $default  reduce using rule 27 (unary_expr)


State 102

  117 direct_decl: direct_decl '[' assign_expr . ']'

    ']'  shift, and go to state 160


State 103

   15 assign_expr: unary_expr . '=' assign_expr
   16            | unary_expr . PLUSEQ assign_expr
   17            | unary_expr . MINUSEQ assign_expr
   18            | unary_expr . TIMESEQ assign_expr
   19            | unary_expr . DIVEQ assign_expr
   20            | unary_expr . MODEQ assign_expr
   21            | unary_expr . SHLEQ assign_expr
   22            | unary_expr . SHREQ assign_expr
   23            | unary_expr . ANDEQ assign_expr
   24            | unary_expr . XOREQ assign_expr
   25            | unary_expr . OREQ assign_expr
   65 cast_expr: unary_expr .

    TIMESEQ  shift, and go to state 161
    DIVEQ    shift, and go to state 162
    MODEQ    shift, and go to state 163
    PLUSEQ   shift, and go to state 164
    MINUSEQ  shift, and go to state 165
    SHLEQ    shift, and go to state 166
    SHREQ    shift, and go to state 167
    ANDEQ    shift, and go to state 168
    OREQ     shift, and go to state 169
    XOREQ    shift, and go to state 170
    '='      shift, and go to state 171

    $default  reduce using rule 65 (cast_expr)


State 104

   26 assign_expr: cond_expr .

    $default  reduce using rule 26 (assign_expr)


State 105

   38 cond_expr: arith_expr .
   39          | arith_expr . '?' expr ':' cond_expr
   43 arith_expr: arith_expr . '+' arith_expr
   44           | arith_expr . '-' arith_expr
   45           | arith_expr . '*' arith_expr
   46           | arith_expr . '|' arith_expr
   47           | arith_expr . '^' arith_expr
   48           | arith_expr . '&' arith_expr
   49           | arith_expr . '%' arith_expr
   50           | arith_expr . '/' arith_expr
   51           | arith_expr . SHR arith_expr
   52           | arith_expr . SHL arith_expr
   53           | arith_expr . '<' arith_expr
   54           | arith_expr . '>' arith_expr
   55           | arith_expr . LTEQ arith_expr
   56           | arith_expr . GTEQ arith_expr
   57           | arith_expr . EQEQ arith_expr
   58           | arith_expr . NOTEQ arith_expr
   59           | arith_expr . LOGAND arith_expr
   60           | arith_expr . LOGOR arith_expr
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175
    LTEQ        shift, and go to state 176
    GTEQ        shift, and go to state 177
    EQEQ        shift, and go to state 178
    NOTEQ       shift, and go to state 179
    LOGAND      shift, and go to state 180
    LOGOR       shift, and go to state 181
    '?'         shift, and go to state 182
    '|'         shift, and go to state 183
    '^'         shift, and go to state 184
    '&'         shift, and go to state 185
    '<'         shift, and go to state 186
    '>'         shift, and go to state 187
    '+'         shift, and go to state 188
    '-'         shift, and go to state 189
    '*'         shift, and go to state 190
    '/'         shift, and go to state 191
    '%'         shift, and go to state 192

    $default  reduce using rule 38 (cond_expr)


State 106

   64 arith_expr: cast_expr .

    $default  reduce using rule 64 (arith_expr)


State 107

   95 struct_union_spec: struct_union IDENT '{' struct_declaration_list . '}'
  100 struct_declaration_list: struct_declaration_list . struct_declaration

    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    FLOAT     shift, and go to state 6
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STRUCT    shift, and go to state 15
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22
    '}'       shift, and go to state 193

    type_spec             go to state 64
    struct_union_spec     go to state 30
    struct_union          go to state 31
    struct_declaration    go to state 109
    specific_qualif_list  go to state 67
    type_qualif           go to state 68


State 108

   94 struct_union_spec: struct_union '{' struct_declaration_list '}' .

    $default  reduce using rule 94 (struct_union_spec)


State 109

  100 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 100 (struct_declaration_list)


State 110

  103 specific_qualif_list: specific_qualif_list type_spec .

    $default  reduce using rule 103 (specific_qualif_list)


State 111

  101 struct_declaration: specific_qualif_list struct_decl_list . ';'
  107 struct_decl_list: struct_decl_list . ',' struct_decl

    ','  shift, and go to state 194
    ';'  shift, and go to state 195


State 112

  106 struct_decl_list: struct_decl .

    $default  reduce using rule 106 (struct_decl_list)


State 113

  105 specific_qualif_list: specific_qualif_list type_qualif .

    $default  reduce using rule 105 (specific_qualif_list)


State 114

  108 struct_decl: decl .

    $default  reduce using rule 108 (struct_decl)


State 115

    5 prim_expr: IDENT .
  142 label_stmnt: IDENT . ':' statement

    ':'  shift, and go to state 196

    $default  reduce using rule 5 (prim_expr)


State 116

  164 jump_stmnt: BREAK . ';'

    ';'  shift, and go to state 197


State 117

  143 label_stmnt: CASE . const_expr ':' statement

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    cond_expr     go to state 198
    const_expr    go to state 199
    arith_expr    go to state 105
    cast_expr     go to state 106


State 118

  163 jump_stmnt: CONTINUE . ';'

    ';'  shift, and go to state 200


State 119

  144 label_stmnt: DEFAULT . ':' statement

    ':'  shift, and go to state 201


State 120

  157 iterat_stmnt: DO . statement WHILE '(' expr ')' ';'

    IDENT       shift, and go to state 115
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    BREAK       shift, and go to state 116
    CASE        shift, and go to state 117
    CONTINUE    shift, and go to state 118
    DEFAULT     shift, and go to state 119
    DO          shift, and go to state 120
    FOR         shift, and go to state 121
    GOTO        shift, and go to state 122
    IF          shift, and go to state 123
    RETURN      shift, and go to state 124
    SIZEOF      shift, and go to state 91
    SWITCH      shift, and go to state 125
    WHILE       shift, and go to state 126
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98
    '{'         shift, and go to state 55

    prim_expr       go to state 100
    postfix_expr    go to state 101
    assign_expr     go to state 127
    unary_expr      go to state 103
    cond_expr       go to state 104
    expr            go to state 128
    arith_expr      go to state 105
    cast_expr       go to state 106
    statement       go to state 202
    label_stmnt     go to state 131
    compound_stmnt  go to state 132
    expr_stmnt      go to state 135
    select_stmnt    go to state 136
    iterat_stmnt    go to state 137
    jump_stmnt      go to state 138


State 121

  159 iterat_stmnt: FOR . '(' $@2 expr_opt ';' expr_opt ';' expr_opt ')' statement

    '('  shift, and go to state 203


State 122

  162 jump_stmnt: GOTO . IDENT ';'

    IDENT  shift, and go to state 204


State 123

  153 select_stmnt: IF . '(' expr ')' statement
  154             | IF . '(' expr ')' statement ELSE statement

    '('  shift, and go to state 205


State 124

  165 jump_stmnt: RETURN . expr_opt ';'

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    $default  reduce using rule 161 (expr_opt)

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 127
    unary_expr    go to state 103
    cond_expr     go to state 104
    expr          go to state 206
    arith_expr    go to state 105
    cast_expr     go to state 106
    expr_opt      go to state 207


State 125

  155 select_stmnt: SWITCH . '(' expr ')' statement

    '('  shift, and go to state 208


State 126

  156 iterat_stmnt: WHILE . '(' expr ')' statement

    '('  shift, and go to state 209


State 127

   40 expr: assign_expr .

    $default  reduce using rule 40 (expr)


State 128

   41 expr: expr . ',' assign_expr
  152 expr_stmnt: expr . ';'

    ','  shift, and go to state 210
    ';'  shift, and go to state 211


State 129

  150 block_item: declaration .

    $default  reduce using rule 150 (block_item)


State 130

  151 block_item: statement .

    $default  reduce using rule 151 (block_item)


State 131

  137 statement: label_stmnt .

    $default  reduce using rule 137 (statement)


State 132

  138 statement: compound_stmnt .

    $default  reduce using rule 138 (statement)


State 133

  147 compound_stmnt: '{' $@1 block_item_list . '}'
  149 block_item_list: block_item_list . block_item

    IDENT       shift, and go to state 115
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    AUTO        shift, and go to state 1
    BREAK       shift, and go to state 116
    CASE        shift, and go to state 117
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    CONTINUE    shift, and go to state 118
    DEFAULT     shift, and go to state 119
    DO          shift, and go to state 120
    DOUBLE      shift, and go to state 4
    EXTERN      shift, and go to state 5
    FLOAT       shift, and go to state 6
    FOR         shift, and go to state 121
    GOTO        shift, and go to state 122
    IF          shift, and go to state 123
    INLINE      shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    REGISTER    shift, and go to state 10
    RESTRICT    shift, and go to state 11
    RETURN      shift, and go to state 124
    SHORT       shift, and go to state 12
    SIGNED      shift, and go to state 13
    SIZEOF      shift, and go to state 91
    STATIC      shift, and go to state 14
    STRUCT      shift, and go to state 15
    SWITCH      shift, and go to state 125
    TYPEDEF     shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    WHILE       shift, and go to state 126
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98
    '{'         shift, and go to state 55
    '}'         shift, and go to state 212

    prim_expr          go to state 100
    postfix_expr       go to state 101
    assign_expr        go to state 127
    unary_expr         go to state 103
    cond_expr          go to state 104
    expr               go to state 128
    arith_expr         go to state 105
    cast_expr          go to state 106
    declaration        go to state 129
    declaration_specs  go to state 57
    declaration_spec   go to state 27
    stg_class_spec     go to state 28
    type_spec          go to state 29
    struct_union_spec  go to state 30
    struct_union       go to state 31
    type_qualif        go to state 32
    func_spec          go to state 33
    statement          go to state 130
    label_stmnt        go to state 131
    compound_stmnt     go to state 132
    block_item         go to state 213
    expr_stmnt         go to state 135
    select_stmnt       go to state 136
    iterat_stmnt       go to state 137
    jump_stmnt         go to state 138


State 134

  148 block_item_list: block_item .

    $default  reduce using rule 148 (block_item_list)


State 135

  136 statement: expr_stmnt .

    $default  reduce using rule 136 (statement)


State 136

  139 statement: select_stmnt .

    $default  reduce using rule 139 (statement)


State 137

  140 statement: iterat_stmnt .

    $default  reduce using rule 140 (statement)


State 138

  141 statement: jump_stmnt .

    $default  reduce using rule 141 (statement)


State 139

  132 param_declaration: declaration_specs decl .

    $default  reduce using rule 132 (param_declaration)


State 140

  119 direct_decl: direct_decl '(' param_type_list ')' .

    $default  reduce using rule 119 (direct_decl)


State 141

  129 param_type_list: param_list ',' . ELLIPSIS
  131 param_list: param_list ',' . param_declaration

    ELLIPSIS  shift, and go to state 214
    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INLINE    shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    REGISTER  shift, and go to state 10
    RESTRICT  shift, and go to state 11
    SHORT     shift, and go to state 12
    SIGNED    shift, and go to state 13
    STATIC    shift, and go to state 14
    STRUCT    shift, and go to state 15
    TYPEDEF   shift, and go to state 16
    UNION     shift, and go to state 17
    UNSIGNED  shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    _BOOL     shift, and go to state 21
    _COMPLEX  shift, and go to state 22

    declaration_specs  go to state 80
    declaration_spec   go to state 27
    stg_class_spec     go to state 28
    type_spec          go to state 29
    struct_union_spec  go to state 30
    struct_union       go to state 31
    type_qualif        go to state 32
    func_spec          go to state 33
    param_declaration  go to state 215


State 142

  135 ident_list: ident_list ',' . IDENT

    IDENT  shift, and go to state 216


State 143

  121 direct_decl: direct_decl '(' ident_list ')' .

    $default  reduce using rule 121 (direct_decl)


State 144

   28 unary_expr: PLUSPLUS unary_expr .

    $default  reduce using rule 28 (unary_expr)


State 145

   29 unary_expr: MINUSMINUS unary_expr .

    $default  reduce using rule 29 (unary_expr)


State 146

   31 unary_expr: SIZEOF '(' . unary_expr ')'

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 217


State 147

   30 unary_expr: SIZEOF unary_expr .

    $default  reduce using rule 30 (unary_expr)


State 148

   65 cast_expr: unary_expr .

    $default  reduce using rule 65 (cast_expr)


State 149

   32 unary_expr: '&' cast_expr .

    $default  reduce using rule 32 (unary_expr)


State 150

   34 unary_expr: '+' cast_expr .

    $default  reduce using rule 34 (unary_expr)


State 151

   35 unary_expr: '-' cast_expr .

    $default  reduce using rule 35 (unary_expr)


State 152

   33 unary_expr: '*' cast_expr .

    $default  reduce using rule 33 (unary_expr)


State 153

   36 unary_expr: '~' cast_expr .

    $default  reduce using rule 36 (unary_expr)


State 154

   37 unary_expr: '!' cast_expr .

    $default  reduce using rule 37 (unary_expr)


State 155

   43 arith_expr: arith_expr . '+' arith_expr
   44           | arith_expr . '-' arith_expr
   45           | arith_expr . '*' arith_expr
   46           | arith_expr . '|' arith_expr
   47           | arith_expr . '^' arith_expr
   48           | arith_expr . '&' arith_expr
   49           | arith_expr . '%' arith_expr
   50           | arith_expr . '/' arith_expr
   51           | arith_expr . SHR arith_expr
   52           | arith_expr . SHL arith_expr
   53           | arith_expr . '<' arith_expr
   54           | arith_expr . '>' arith_expr
   55           | arith_expr . LTEQ arith_expr
   56           | arith_expr . GTEQ arith_expr
   57           | arith_expr . EQEQ arith_expr
   58           | arith_expr . NOTEQ arith_expr
   59           | arith_expr . LOGAND arith_expr
   60           | arith_expr . LOGOR arith_expr
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS
   63           | '(' arith_expr . ')'

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175
    LTEQ        shift, and go to state 176
    GTEQ        shift, and go to state 177
    EQEQ        shift, and go to state 178
    NOTEQ       shift, and go to state 179
    LOGAND      shift, and go to state 180
    LOGOR       shift, and go to state 181
    '|'         shift, and go to state 183
    '^'         shift, and go to state 184
    '&'         shift, and go to state 185
    '<'         shift, and go to state 186
    '>'         shift, and go to state 187
    '+'         shift, and go to state 188
    '-'         shift, and go to state 189
    '*'         shift, and go to state 190
    '/'         shift, and go to state 191
    '%'         shift, and go to state 192
    ')'         shift, and go to state 218


State 156

   12 postfix_expr: postfix_expr INDSEL . IDENT

    IDENT  shift, and go to state 219


State 157

   13 postfix_expr: postfix_expr '(' . ')'
   14             | postfix_expr '(' . expr ')'

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98
    ')'         shift, and go to state 220

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 127
    unary_expr    go to state 103
    cond_expr     go to state 104
    expr          go to state 221
    arith_expr    go to state 105
    cast_expr     go to state 106


State 158

   11 postfix_expr: postfix_expr '.' . IDENT

    IDENT  shift, and go to state 222


State 159

   10 postfix_expr: postfix_expr '[' . expr ']'

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 127
    unary_expr    go to state 103
    cond_expr     go to state 104
    expr          go to state 223
    arith_expr    go to state 105
    cast_expr     go to state 106


State 160

  117 direct_decl: direct_decl '[' assign_expr ']' .

    $default  reduce using rule 117 (direct_decl)


State 161

   18 assign_expr: unary_expr TIMESEQ . assign_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 224
    unary_expr    go to state 103
    cond_expr     go to state 104
    arith_expr    go to state 105
    cast_expr     go to state 106


State 162

   19 assign_expr: unary_expr DIVEQ . assign_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 225
    unary_expr    go to state 103
    cond_expr     go to state 104
    arith_expr    go to state 105
    cast_expr     go to state 106


State 163

   20 assign_expr: unary_expr MODEQ . assign_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 226
    unary_expr    go to state 103
    cond_expr     go to state 104
    arith_expr    go to state 105
    cast_expr     go to state 106


State 164

   16 assign_expr: unary_expr PLUSEQ . assign_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 227
    unary_expr    go to state 103
    cond_expr     go to state 104
    arith_expr    go to state 105
    cast_expr     go to state 106


State 165

   17 assign_expr: unary_expr MINUSEQ . assign_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 228
    unary_expr    go to state 103
    cond_expr     go to state 104
    arith_expr    go to state 105
    cast_expr     go to state 106


State 166

   21 assign_expr: unary_expr SHLEQ . assign_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 229
    unary_expr    go to state 103
    cond_expr     go to state 104
    arith_expr    go to state 105
    cast_expr     go to state 106


State 167

   22 assign_expr: unary_expr SHREQ . assign_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 230
    unary_expr    go to state 103
    cond_expr     go to state 104
    arith_expr    go to state 105
    cast_expr     go to state 106


State 168

   23 assign_expr: unary_expr ANDEQ . assign_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 231
    unary_expr    go to state 103
    cond_expr     go to state 104
    arith_expr    go to state 105
    cast_expr     go to state 106


State 169

   25 assign_expr: unary_expr OREQ . assign_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 232
    unary_expr    go to state 103
    cond_expr     go to state 104
    arith_expr    go to state 105
    cast_expr     go to state 106


State 170

   24 assign_expr: unary_expr XOREQ . assign_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 233
    unary_expr    go to state 103
    cond_expr     go to state 104
    arith_expr    go to state 105
    cast_expr     go to state 106


State 171

   15 assign_expr: unary_expr '=' . assign_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 234
    unary_expr    go to state 103
    cond_expr     go to state 104
    arith_expr    go to state 105
    cast_expr     go to state 106


State 172

   61 arith_expr: arith_expr PLUSPLUS .

    $default  reduce using rule 61 (arith_expr)


State 173

   62 arith_expr: arith_expr MINUSMINUS .

    $default  reduce using rule 62 (arith_expr)


State 174

   52 arith_expr: arith_expr SHL . arith_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    arith_expr    go to state 235
    cast_expr     go to state 106


State 175

   51 arith_expr: arith_expr SHR . arith_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    arith_expr    go to state 236
    cast_expr     go to state 106


State 176

   55 arith_expr: arith_expr LTEQ . arith_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    arith_expr    go to state 237
    cast_expr     go to state 106


State 177

   56 arith_expr: arith_expr GTEQ . arith_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    arith_expr    go to state 238
    cast_expr     go to state 106


State 178

   57 arith_expr: arith_expr EQEQ . arith_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    arith_expr    go to state 239
    cast_expr     go to state 106


State 179

   58 arith_expr: arith_expr NOTEQ . arith_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    arith_expr    go to state 240
    cast_expr     go to state 106


State 180

   59 arith_expr: arith_expr LOGAND . arith_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    arith_expr    go to state 241
    cast_expr     go to state 106


State 181

   60 arith_expr: arith_expr LOGOR . arith_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    arith_expr    go to state 242
    cast_expr     go to state 106


State 182

   39 cond_expr: arith_expr '?' . expr ':' cond_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 127
    unary_expr    go to state 103
    cond_expr     go to state 104
    expr          go to state 243
    arith_expr    go to state 105
    cast_expr     go to state 106


State 183

   46 arith_expr: arith_expr '|' . arith_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    arith_expr    go to state 244
    cast_expr     go to state 106


State 184

   47 arith_expr: arith_expr '^' . arith_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    arith_expr    go to state 245
    cast_expr     go to state 106


State 185

   48 arith_expr: arith_expr '&' . arith_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    arith_expr    go to state 246
    cast_expr     go to state 106


State 186

   53 arith_expr: arith_expr '<' . arith_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    arith_expr    go to state 247
    cast_expr     go to state 106


State 187

   54 arith_expr: arith_expr '>' . arith_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    arith_expr    go to state 248
    cast_expr     go to state 106


State 188

   43 arith_expr: arith_expr '+' . arith_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    arith_expr    go to state 249
    cast_expr     go to state 106


State 189

   44 arith_expr: arith_expr '-' . arith_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    arith_expr    go to state 250
    cast_expr     go to state 106


State 190

   45 arith_expr: arith_expr '*' . arith_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    arith_expr    go to state 251
    cast_expr     go to state 106


State 191

   50 arith_expr: arith_expr '/' . arith_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    arith_expr    go to state 252
    cast_expr     go to state 106


State 192

   49 arith_expr: arith_expr '%' . arith_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    arith_expr    go to state 253
    cast_expr     go to state 106


State 193

   95 struct_union_spec: struct_union IDENT '{' struct_declaration_list '}' .

    $default  reduce using rule 95 (struct_union_spec)


State 194

  107 struct_decl_list: struct_decl_list ',' . struct_decl

    IDENT  shift, and go to state 37
    '*'    shift, and go to state 38
    '('    shift, and go to state 39

    struct_decl  go to state 254
    decl         go to state 114
    direct_decl  go to state 45
    pointer      go to state 46


State 195

  101 struct_declaration: specific_qualif_list struct_decl_list ';' .

    $default  reduce using rule 101 (struct_declaration)


State 196

  142 label_stmnt: IDENT ':' . statement

    IDENT       shift, and go to state 115
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    BREAK       shift, and go to state 116
    CASE        shift, and go to state 117
    CONTINUE    shift, and go to state 118
    DEFAULT     shift, and go to state 119
    DO          shift, and go to state 120
    FOR         shift, and go to state 121
    GOTO        shift, and go to state 122
    IF          shift, and go to state 123
    RETURN      shift, and go to state 124
    SIZEOF      shift, and go to state 91
    SWITCH      shift, and go to state 125
    WHILE       shift, and go to state 126
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98
    '{'         shift, and go to state 55

    prim_expr       go to state 100
    postfix_expr    go to state 101
    assign_expr     go to state 127
    unary_expr      go to state 103
    cond_expr       go to state 104
    expr            go to state 128
    arith_expr      go to state 105
    cast_expr       go to state 106
    statement       go to state 255
    label_stmnt     go to state 131
    compound_stmnt  go to state 132
    expr_stmnt      go to state 135
    select_stmnt    go to state 136
    iterat_stmnt    go to state 137
    jump_stmnt      go to state 138


State 197

  164 jump_stmnt: BREAK ';' .

    $default  reduce using rule 164 (jump_stmnt)


State 198

   42 const_expr: cond_expr .

    $default  reduce using rule 42 (const_expr)


State 199

  143 label_stmnt: CASE const_expr . ':' statement

    ':'  shift, and go to state 256


State 200

  163 jump_stmnt: CONTINUE ';' .

    $default  reduce using rule 163 (jump_stmnt)


State 201

  144 label_stmnt: DEFAULT ':' . statement

    IDENT       shift, and go to state 115
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    BREAK       shift, and go to state 116
    CASE        shift, and go to state 117
    CONTINUE    shift, and go to state 118
    DEFAULT     shift, and go to state 119
    DO          shift, and go to state 120
    FOR         shift, and go to state 121
    GOTO        shift, and go to state 122
    IF          shift, and go to state 123
    RETURN      shift, and go to state 124
    SIZEOF      shift, and go to state 91
    SWITCH      shift, and go to state 125
    WHILE       shift, and go to state 126
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98
    '{'         shift, and go to state 55

    prim_expr       go to state 100
    postfix_expr    go to state 101
    assign_expr     go to state 127
    unary_expr      go to state 103
    cond_expr       go to state 104
    expr            go to state 128
    arith_expr      go to state 105
    cast_expr       go to state 106
    statement       go to state 257
    label_stmnt     go to state 131
    compound_stmnt  go to state 132
    expr_stmnt      go to state 135
    select_stmnt    go to state 136
    iterat_stmnt    go to state 137
    jump_stmnt      go to state 138


State 202

  157 iterat_stmnt: DO statement . WHILE '(' expr ')' ';'

    WHILE  shift, and go to state 258


State 203

  159 iterat_stmnt: FOR '(' . $@2 expr_opt ';' expr_opt ';' expr_opt ')' statement

    $default  reduce using rule 158 ($@2)

    $@2  go to state 259


State 204

  162 jump_stmnt: GOTO IDENT . ';'

    ';'  shift, and go to state 260


State 205

  153 select_stmnt: IF '(' . expr ')' statement
  154             | IF '(' . expr ')' statement ELSE statement

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 127
    unary_expr    go to state 103
    cond_expr     go to state 104
    expr          go to state 261
    arith_expr    go to state 105
    cast_expr     go to state 106


State 206

   41 expr: expr . ',' assign_expr
  160 expr_opt: expr .

    ','  shift, and go to state 210

    $default  reduce using rule 160 (expr_opt)


State 207

  165 jump_stmnt: RETURN expr_opt . ';'

    ';'  shift, and go to state 262


State 208

  155 select_stmnt: SWITCH '(' . expr ')' statement

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 127
    unary_expr    go to state 103
    cond_expr     go to state 104
    expr          go to state 263
    arith_expr    go to state 105
    cast_expr     go to state 106


State 209

  156 iterat_stmnt: WHILE '(' . expr ')' statement

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 127
    unary_expr    go to state 103
    cond_expr     go to state 104
    expr          go to state 264
    arith_expr    go to state 105
    cast_expr     go to state 106


State 210

   41 expr: expr ',' . assign_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 265
    unary_expr    go to state 103
    cond_expr     go to state 104
    arith_expr    go to state 105
    cast_expr     go to state 106


State 211

  152 expr_stmnt: expr ';' .

    $default  reduce using rule 152 (expr_stmnt)


State 212

  147 compound_stmnt: '{' $@1 block_item_list '}' .

    $default  reduce using rule 147 (compound_stmnt)


State 213

  149 block_item_list: block_item_list block_item .

    $default  reduce using rule 149 (block_item_list)


State 214

  129 param_type_list: param_list ',' ELLIPSIS .

    $default  reduce using rule 129 (param_type_list)


State 215

  131 param_list: param_list ',' param_declaration .

    $default  reduce using rule 131 (param_list)


State 216

  135 ident_list: ident_list ',' IDENT .

    $default  reduce using rule 135 (ident_list)


State 217

   31 unary_expr: SIZEOF '(' unary_expr . ')'

    ')'  shift, and go to state 266


State 218

   63 arith_expr: '(' arith_expr ')' .

    $default  reduce using rule 63 (arith_expr)


State 219

   12 postfix_expr: postfix_expr INDSEL IDENT .

    $default  reduce using rule 12 (postfix_expr)


State 220

   13 postfix_expr: postfix_expr '(' ')' .

    $default  reduce using rule 13 (postfix_expr)


State 221

   14 postfix_expr: postfix_expr '(' expr . ')'
   41 expr: expr . ',' assign_expr

    ','  shift, and go to state 210
    ')'  shift, and go to state 267


State 222

   11 postfix_expr: postfix_expr '.' IDENT .

    $default  reduce using rule 11 (postfix_expr)


State 223

   10 postfix_expr: postfix_expr '[' expr . ']'
   41 expr: expr . ',' assign_expr

    ','  shift, and go to state 210
    ']'  shift, and go to state 268


State 224

   18 assign_expr: unary_expr TIMESEQ assign_expr .

    $default  reduce using rule 18 (assign_expr)


State 225

   19 assign_expr: unary_expr DIVEQ assign_expr .

    $default  reduce using rule 19 (assign_expr)


State 226

   20 assign_expr: unary_expr MODEQ assign_expr .

    $default  reduce using rule 20 (assign_expr)


State 227

   16 assign_expr: unary_expr PLUSEQ assign_expr .

    $default  reduce using rule 16 (assign_expr)


State 228

   17 assign_expr: unary_expr MINUSEQ assign_expr .

    $default  reduce using rule 17 (assign_expr)


State 229

   21 assign_expr: unary_expr SHLEQ assign_expr .

    $default  reduce using rule 21 (assign_expr)


State 230

   22 assign_expr: unary_expr SHREQ assign_expr .

    $default  reduce using rule 22 (assign_expr)


State 231

   23 assign_expr: unary_expr ANDEQ assign_expr .

    $default  reduce using rule 23 (assign_expr)


State 232

   25 assign_expr: unary_expr OREQ assign_expr .

    $default  reduce using rule 25 (assign_expr)


State 233

   24 assign_expr: unary_expr XOREQ assign_expr .

    $default  reduce using rule 24 (assign_expr)


State 234

   15 assign_expr: unary_expr '=' assign_expr .

    $default  reduce using rule 15 (assign_expr)


State 235

   43 arith_expr: arith_expr . '+' arith_expr
   44           | arith_expr . '-' arith_expr
   45           | arith_expr . '*' arith_expr
   46           | arith_expr . '|' arith_expr
   47           | arith_expr . '^' arith_expr
   48           | arith_expr . '&' arith_expr
   49           | arith_expr . '%' arith_expr
   50           | arith_expr . '/' arith_expr
   51           | arith_expr . SHR arith_expr
   52           | arith_expr . SHL arith_expr
   52           | arith_expr SHL arith_expr .
   53           | arith_expr . '<' arith_expr
   54           | arith_expr . '>' arith_expr
   55           | arith_expr . LTEQ arith_expr
   56           | arith_expr . GTEQ arith_expr
   57           | arith_expr . EQEQ arith_expr
   58           | arith_expr . NOTEQ arith_expr
   59           | arith_expr . LOGAND arith_expr
   60           | arith_expr . LOGOR arith_expr
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173
    '+'         shift, and go to state 188
    '-'         shift, and go to state 189
    '*'         shift, and go to state 190
    '/'         shift, and go to state 191
    '%'         shift, and go to state 192

    $default  reduce using rule 52 (arith_expr)


State 236

   43 arith_expr: arith_expr . '+' arith_expr
   44           | arith_expr . '-' arith_expr
   45           | arith_expr . '*' arith_expr
   46           | arith_expr . '|' arith_expr
   47           | arith_expr . '^' arith_expr
   48           | arith_expr . '&' arith_expr
   49           | arith_expr . '%' arith_expr
   50           | arith_expr . '/' arith_expr
   51           | arith_expr . SHR arith_expr
   51           | arith_expr SHR arith_expr .
   52           | arith_expr . SHL arith_expr
   53           | arith_expr . '<' arith_expr
   54           | arith_expr . '>' arith_expr
   55           | arith_expr . LTEQ arith_expr
   56           | arith_expr . GTEQ arith_expr
   57           | arith_expr . EQEQ arith_expr
   58           | arith_expr . NOTEQ arith_expr
   59           | arith_expr . LOGAND arith_expr
   60           | arith_expr . LOGOR arith_expr
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173
    '+'         shift, and go to state 188
    '-'         shift, and go to state 189
    '*'         shift, and go to state 190
    '/'         shift, and go to state 191
    '%'         shift, and go to state 192

    $default  reduce using rule 51 (arith_expr)


State 237

   43 arith_expr: arith_expr . '+' arith_expr
   44           | arith_expr . '-' arith_expr
   45           | arith_expr . '*' arith_expr
   46           | arith_expr . '|' arith_expr
   47           | arith_expr . '^' arith_expr
   48           | arith_expr . '&' arith_expr
   49           | arith_expr . '%' arith_expr
   50           | arith_expr . '/' arith_expr
   51           | arith_expr . SHR arith_expr
   52           | arith_expr . SHL arith_expr
   53           | arith_expr . '<' arith_expr
   54           | arith_expr . '>' arith_expr
   55           | arith_expr . LTEQ arith_expr
   55           | arith_expr LTEQ arith_expr .
   56           | arith_expr . GTEQ arith_expr
   57           | arith_expr . EQEQ arith_expr
   58           | arith_expr . NOTEQ arith_expr
   59           | arith_expr . LOGAND arith_expr
   60           | arith_expr . LOGOR arith_expr
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175
    '+'         shift, and go to state 188
    '-'         shift, and go to state 189
    '*'         shift, and go to state 190
    '/'         shift, and go to state 191
    '%'         shift, and go to state 192

    $default  reduce using rule 55 (arith_expr)


State 238

   43 arith_expr: arith_expr . '+' arith_expr
   44           | arith_expr . '-' arith_expr
   45           | arith_expr . '*' arith_expr
   46           | arith_expr . '|' arith_expr
   47           | arith_expr . '^' arith_expr
   48           | arith_expr . '&' arith_expr
   49           | arith_expr . '%' arith_expr
   50           | arith_expr . '/' arith_expr
   51           | arith_expr . SHR arith_expr
   52           | arith_expr . SHL arith_expr
   53           | arith_expr . '<' arith_expr
   54           | arith_expr . '>' arith_expr
   55           | arith_expr . LTEQ arith_expr
   56           | arith_expr . GTEQ arith_expr
   56           | arith_expr GTEQ arith_expr .
   57           | arith_expr . EQEQ arith_expr
   58           | arith_expr . NOTEQ arith_expr
   59           | arith_expr . LOGAND arith_expr
   60           | arith_expr . LOGOR arith_expr
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175
    '+'         shift, and go to state 188
    '-'         shift, and go to state 189
    '*'         shift, and go to state 190
    '/'         shift, and go to state 191
    '%'         shift, and go to state 192

    $default  reduce using rule 56 (arith_expr)


State 239

   43 arith_expr: arith_expr . '+' arith_expr
   44           | arith_expr . '-' arith_expr
   45           | arith_expr . '*' arith_expr
   46           | arith_expr . '|' arith_expr
   47           | arith_expr . '^' arith_expr
   48           | arith_expr . '&' arith_expr
   49           | arith_expr . '%' arith_expr
   50           | arith_expr . '/' arith_expr
   51           | arith_expr . SHR arith_expr
   52           | arith_expr . SHL arith_expr
   53           | arith_expr . '<' arith_expr
   54           | arith_expr . '>' arith_expr
   55           | arith_expr . LTEQ arith_expr
   56           | arith_expr . GTEQ arith_expr
   57           | arith_expr . EQEQ arith_expr
   57           | arith_expr EQEQ arith_expr .
   58           | arith_expr . NOTEQ arith_expr
   59           | arith_expr . LOGAND arith_expr
   60           | arith_expr . LOGOR arith_expr
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175
    LTEQ        shift, and go to state 176
    GTEQ        shift, and go to state 177
    '<'         shift, and go to state 186
    '>'         shift, and go to state 187
    '+'         shift, and go to state 188
    '-'         shift, and go to state 189
    '*'         shift, and go to state 190
    '/'         shift, and go to state 191
    '%'         shift, and go to state 192

    $default  reduce using rule 57 (arith_expr)


State 240

   43 arith_expr: arith_expr . '+' arith_expr
   44           | arith_expr . '-' arith_expr
   45           | arith_expr . '*' arith_expr
   46           | arith_expr . '|' arith_expr
   47           | arith_expr . '^' arith_expr
   48           | arith_expr . '&' arith_expr
   49           | arith_expr . '%' arith_expr
   50           | arith_expr . '/' arith_expr
   51           | arith_expr . SHR arith_expr
   52           | arith_expr . SHL arith_expr
   53           | arith_expr . '<' arith_expr
   54           | arith_expr . '>' arith_expr
   55           | arith_expr . LTEQ arith_expr
   56           | arith_expr . GTEQ arith_expr
   57           | arith_expr . EQEQ arith_expr
   58           | arith_expr . NOTEQ arith_expr
   58           | arith_expr NOTEQ arith_expr .
   59           | arith_expr . LOGAND arith_expr
   60           | arith_expr . LOGOR arith_expr
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175
    LTEQ        shift, and go to state 176
    GTEQ        shift, and go to state 177
    '<'         shift, and go to state 186
    '>'         shift, and go to state 187
    '+'         shift, and go to state 188
    '-'         shift, and go to state 189
    '*'         shift, and go to state 190
    '/'         shift, and go to state 191
    '%'         shift, and go to state 192

    $default  reduce using rule 58 (arith_expr)


State 241

   43 arith_expr: arith_expr . '+' arith_expr
   44           | arith_expr . '-' arith_expr
   45           | arith_expr . '*' arith_expr
   46           | arith_expr . '|' arith_expr
   47           | arith_expr . '^' arith_expr
   48           | arith_expr . '&' arith_expr
   49           | arith_expr . '%' arith_expr
   50           | arith_expr . '/' arith_expr
   51           | arith_expr . SHR arith_expr
   52           | arith_expr . SHL arith_expr
   53           | arith_expr . '<' arith_expr
   54           | arith_expr . '>' arith_expr
   55           | arith_expr . LTEQ arith_expr
   56           | arith_expr . GTEQ arith_expr
   57           | arith_expr . EQEQ arith_expr
   58           | arith_expr . NOTEQ arith_expr
   59           | arith_expr . LOGAND arith_expr
   59           | arith_expr LOGAND arith_expr .
   60           | arith_expr . LOGOR arith_expr
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175
    LTEQ        shift, and go to state 176
    GTEQ        shift, and go to state 177
    EQEQ        shift, and go to state 178
    NOTEQ       shift, and go to state 179
    '|'         shift, and go to state 183
    '^'         shift, and go to state 184
    '&'         shift, and go to state 185
    '<'         shift, and go to state 186
    '>'         shift, and go to state 187
    '+'         shift, and go to state 188
    '-'         shift, and go to state 189
    '*'         shift, and go to state 190
    '/'         shift, and go to state 191
    '%'         shift, and go to state 192

    $default  reduce using rule 59 (arith_expr)


State 242

   43 arith_expr: arith_expr . '+' arith_expr
   44           | arith_expr . '-' arith_expr
   45           | arith_expr . '*' arith_expr
   46           | arith_expr . '|' arith_expr
   47           | arith_expr . '^' arith_expr
   48           | arith_expr . '&' arith_expr
   49           | arith_expr . '%' arith_expr
   50           | arith_expr . '/' arith_expr
   51           | arith_expr . SHR arith_expr
   52           | arith_expr . SHL arith_expr
   53           | arith_expr . '<' arith_expr
   54           | arith_expr . '>' arith_expr
   55           | arith_expr . LTEQ arith_expr
   56           | arith_expr . GTEQ arith_expr
   57           | arith_expr . EQEQ arith_expr
   58           | arith_expr . NOTEQ arith_expr
   59           | arith_expr . LOGAND arith_expr
   60           | arith_expr . LOGOR arith_expr
   60           | arith_expr LOGOR arith_expr .
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175
    LTEQ        shift, and go to state 176
    GTEQ        shift, and go to state 177
    EQEQ        shift, and go to state 178
    NOTEQ       shift, and go to state 179
    LOGAND      shift, and go to state 180
    '|'         shift, and go to state 183
    '^'         shift, and go to state 184
    '&'         shift, and go to state 185
    '<'         shift, and go to state 186
    '>'         shift, and go to state 187
    '+'         shift, and go to state 188
    '-'         shift, and go to state 189
    '*'         shift, and go to state 190
    '/'         shift, and go to state 191
    '%'         shift, and go to state 192

    $default  reduce using rule 60 (arith_expr)


State 243

   39 cond_expr: arith_expr '?' expr . ':' cond_expr
   41 expr: expr . ',' assign_expr

    ','  shift, and go to state 210
    ':'  shift, and go to state 269


State 244

   43 arith_expr: arith_expr . '+' arith_expr
   44           | arith_expr . '-' arith_expr
   45           | arith_expr . '*' arith_expr
   46           | arith_expr . '|' arith_expr
   46           | arith_expr '|' arith_expr .
   47           | arith_expr . '^' arith_expr
   48           | arith_expr . '&' arith_expr
   49           | arith_expr . '%' arith_expr
   50           | arith_expr . '/' arith_expr
   51           | arith_expr . SHR arith_expr
   52           | arith_expr . SHL arith_expr
   53           | arith_expr . '<' arith_expr
   54           | arith_expr . '>' arith_expr
   55           | arith_expr . LTEQ arith_expr
   56           | arith_expr . GTEQ arith_expr
   57           | arith_expr . EQEQ arith_expr
   58           | arith_expr . NOTEQ arith_expr
   59           | arith_expr . LOGAND arith_expr
   60           | arith_expr . LOGOR arith_expr
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175
    LTEQ        shift, and go to state 176
    GTEQ        shift, and go to state 177
    EQEQ        shift, and go to state 178
    NOTEQ       shift, and go to state 179
    '^'         shift, and go to state 184
    '&'         shift, and go to state 185
    '<'         shift, and go to state 186
    '>'         shift, and go to state 187
    '+'         shift, and go to state 188
    '-'         shift, and go to state 189
    '*'         shift, and go to state 190
    '/'         shift, and go to state 191
    '%'         shift, and go to state 192

    $default  reduce using rule 46 (arith_expr)


State 245

   43 arith_expr: arith_expr . '+' arith_expr
   44           | arith_expr . '-' arith_expr
   45           | arith_expr . '*' arith_expr
   46           | arith_expr . '|' arith_expr
   47           | arith_expr . '^' arith_expr
   47           | arith_expr '^' arith_expr .
   48           | arith_expr . '&' arith_expr
   49           | arith_expr . '%' arith_expr
   50           | arith_expr . '/' arith_expr
   51           | arith_expr . SHR arith_expr
   52           | arith_expr . SHL arith_expr
   53           | arith_expr . '<' arith_expr
   54           | arith_expr . '>' arith_expr
   55           | arith_expr . LTEQ arith_expr
   56           | arith_expr . GTEQ arith_expr
   57           | arith_expr . EQEQ arith_expr
   58           | arith_expr . NOTEQ arith_expr
   59           | arith_expr . LOGAND arith_expr
   60           | arith_expr . LOGOR arith_expr
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175
    LTEQ        shift, and go to state 176
    GTEQ        shift, and go to state 177
    EQEQ        shift, and go to state 178
    NOTEQ       shift, and go to state 179
    '&'         shift, and go to state 185
    '<'         shift, and go to state 186
    '>'         shift, and go to state 187
    '+'         shift, and go to state 188
    '-'         shift, and go to state 189
    '*'         shift, and go to state 190
    '/'         shift, and go to state 191
    '%'         shift, and go to state 192

    $default  reduce using rule 47 (arith_expr)


State 246

   43 arith_expr: arith_expr . '+' arith_expr
   44           | arith_expr . '-' arith_expr
   45           | arith_expr . '*' arith_expr
   46           | arith_expr . '|' arith_expr
   47           | arith_expr . '^' arith_expr
   48           | arith_expr . '&' arith_expr
   48           | arith_expr '&' arith_expr .
   49           | arith_expr . '%' arith_expr
   50           | arith_expr . '/' arith_expr
   51           | arith_expr . SHR arith_expr
   52           | arith_expr . SHL arith_expr
   53           | arith_expr . '<' arith_expr
   54           | arith_expr . '>' arith_expr
   55           | arith_expr . LTEQ arith_expr
   56           | arith_expr . GTEQ arith_expr
   57           | arith_expr . EQEQ arith_expr
   58           | arith_expr . NOTEQ arith_expr
   59           | arith_expr . LOGAND arith_expr
   60           | arith_expr . LOGOR arith_expr
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175
    LTEQ        shift, and go to state 176
    GTEQ        shift, and go to state 177
    EQEQ        shift, and go to state 178
    NOTEQ       shift, and go to state 179
    '<'         shift, and go to state 186
    '>'         shift, and go to state 187
    '+'         shift, and go to state 188
    '-'         shift, and go to state 189
    '*'         shift, and go to state 190
    '/'         shift, and go to state 191
    '%'         shift, and go to state 192

    $default  reduce using rule 48 (arith_expr)


State 247

   43 arith_expr: arith_expr . '+' arith_expr
   44           | arith_expr . '-' arith_expr
   45           | arith_expr . '*' arith_expr
   46           | arith_expr . '|' arith_expr
   47           | arith_expr . '^' arith_expr
   48           | arith_expr . '&' arith_expr
   49           | arith_expr . '%' arith_expr
   50           | arith_expr . '/' arith_expr
   51           | arith_expr . SHR arith_expr
   52           | arith_expr . SHL arith_expr
   53           | arith_expr . '<' arith_expr
   53           | arith_expr '<' arith_expr .
   54           | arith_expr . '>' arith_expr
   55           | arith_expr . LTEQ arith_expr
   56           | arith_expr . GTEQ arith_expr
   57           | arith_expr . EQEQ arith_expr
   58           | arith_expr . NOTEQ arith_expr
   59           | arith_expr . LOGAND arith_expr
   60           | arith_expr . LOGOR arith_expr
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175
    '+'         shift, and go to state 188
    '-'         shift, and go to state 189
    '*'         shift, and go to state 190
    '/'         shift, and go to state 191
    '%'         shift, and go to state 192

    $default  reduce using rule 53 (arith_expr)


State 248

   43 arith_expr: arith_expr . '+' arith_expr
   44           | arith_expr . '-' arith_expr
   45           | arith_expr . '*' arith_expr
   46           | arith_expr . '|' arith_expr
   47           | arith_expr . '^' arith_expr
   48           | arith_expr . '&' arith_expr
   49           | arith_expr . '%' arith_expr
   50           | arith_expr . '/' arith_expr
   51           | arith_expr . SHR arith_expr
   52           | arith_expr . SHL arith_expr
   53           | arith_expr . '<' arith_expr
   54           | arith_expr . '>' arith_expr
   54           | arith_expr '>' arith_expr .
   55           | arith_expr . LTEQ arith_expr
   56           | arith_expr . GTEQ arith_expr
   57           | arith_expr . EQEQ arith_expr
   58           | arith_expr . NOTEQ arith_expr
   59           | arith_expr . LOGAND arith_expr
   60           | arith_expr . LOGOR arith_expr
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175
    '+'         shift, and go to state 188
    '-'         shift, and go to state 189
    '*'         shift, and go to state 190
    '/'         shift, and go to state 191
    '%'         shift, and go to state 192

    $default  reduce using rule 54 (arith_expr)


State 249

   43 arith_expr: arith_expr . '+' arith_expr
   43           | arith_expr '+' arith_expr .
   44           | arith_expr . '-' arith_expr
   45           | arith_expr . '*' arith_expr
   46           | arith_expr . '|' arith_expr
   47           | arith_expr . '^' arith_expr
   48           | arith_expr . '&' arith_expr
   49           | arith_expr . '%' arith_expr
   50           | arith_expr . '/' arith_expr
   51           | arith_expr . SHR arith_expr
   52           | arith_expr . SHL arith_expr
   53           | arith_expr . '<' arith_expr
   54           | arith_expr . '>' arith_expr
   55           | arith_expr . LTEQ arith_expr
   56           | arith_expr . GTEQ arith_expr
   57           | arith_expr . EQEQ arith_expr
   58           | arith_expr . NOTEQ arith_expr
   59           | arith_expr . LOGAND arith_expr
   60           | arith_expr . LOGOR arith_expr
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173
    '*'         shift, and go to state 190
    '/'         shift, and go to state 191
    '%'         shift, and go to state 192

    $default  reduce using rule 43 (arith_expr)


State 250

   43 arith_expr: arith_expr . '+' arith_expr
   44           | arith_expr . '-' arith_expr
   44           | arith_expr '-' arith_expr .
   45           | arith_expr . '*' arith_expr
   46           | arith_expr . '|' arith_expr
   47           | arith_expr . '^' arith_expr
   48           | arith_expr . '&' arith_expr
   49           | arith_expr . '%' arith_expr
   50           | arith_expr . '/' arith_expr
   51           | arith_expr . SHR arith_expr
   52           | arith_expr . SHL arith_expr
   53           | arith_expr . '<' arith_expr
   54           | arith_expr . '>' arith_expr
   55           | arith_expr . LTEQ arith_expr
   56           | arith_expr . GTEQ arith_expr
   57           | arith_expr . EQEQ arith_expr
   58           | arith_expr . NOTEQ arith_expr
   59           | arith_expr . LOGAND arith_expr
   60           | arith_expr . LOGOR arith_expr
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173
    '*'         shift, and go to state 190
    '/'         shift, and go to state 191
    '%'         shift, and go to state 192

    $default  reduce using rule 44 (arith_expr)


State 251

   43 arith_expr: arith_expr . '+' arith_expr
   44           | arith_expr . '-' arith_expr
   45           | arith_expr . '*' arith_expr
   45           | arith_expr '*' arith_expr .
   46           | arith_expr . '|' arith_expr
   47           | arith_expr . '^' arith_expr
   48           | arith_expr . '&' arith_expr
   49           | arith_expr . '%' arith_expr
   50           | arith_expr . '/' arith_expr
   51           | arith_expr . SHR arith_expr
   52           | arith_expr . SHL arith_expr
   53           | arith_expr . '<' arith_expr
   54           | arith_expr . '>' arith_expr
   55           | arith_expr . LTEQ arith_expr
   56           | arith_expr . GTEQ arith_expr
   57           | arith_expr . EQEQ arith_expr
   58           | arith_expr . NOTEQ arith_expr
   59           | arith_expr . LOGAND arith_expr
   60           | arith_expr . LOGOR arith_expr
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173

    $default  reduce using rule 45 (arith_expr)


State 252

   43 arith_expr: arith_expr . '+' arith_expr
   44           | arith_expr . '-' arith_expr
   45           | arith_expr . '*' arith_expr
   46           | arith_expr . '|' arith_expr
   47           | arith_expr . '^' arith_expr
   48           | arith_expr . '&' arith_expr
   49           | arith_expr . '%' arith_expr
   50           | arith_expr . '/' arith_expr
   50           | arith_expr '/' arith_expr .
   51           | arith_expr . SHR arith_expr
   52           | arith_expr . SHL arith_expr
   53           | arith_expr . '<' arith_expr
   54           | arith_expr . '>' arith_expr
   55           | arith_expr . LTEQ arith_expr
   56           | arith_expr . GTEQ arith_expr
   57           | arith_expr . EQEQ arith_expr
   58           | arith_expr . NOTEQ arith_expr
   59           | arith_expr . LOGAND arith_expr
   60           | arith_expr . LOGOR arith_expr
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173

    $default  reduce using rule 50 (arith_expr)


State 253

   43 arith_expr: arith_expr . '+' arith_expr
   44           | arith_expr . '-' arith_expr
   45           | arith_expr . '*' arith_expr
   46           | arith_expr . '|' arith_expr
   47           | arith_expr . '^' arith_expr
   48           | arith_expr . '&' arith_expr
   49           | arith_expr . '%' arith_expr
   49           | arith_expr '%' arith_expr .
   50           | arith_expr . '/' arith_expr
   51           | arith_expr . SHR arith_expr
   52           | arith_expr . SHL arith_expr
   53           | arith_expr . '<' arith_expr
   54           | arith_expr . '>' arith_expr
   55           | arith_expr . LTEQ arith_expr
   56           | arith_expr . GTEQ arith_expr
   57           | arith_expr . EQEQ arith_expr
   58           | arith_expr . NOTEQ arith_expr
   59           | arith_expr . LOGAND arith_expr
   60           | arith_expr . LOGOR arith_expr
   61           | arith_expr . PLUSPLUS
   62           | arith_expr . MINUSMINUS

    PLUSPLUS    shift, and go to state 172
    MINUSMINUS  shift, and go to state 173

    $default  reduce using rule 49 (arith_expr)


State 254

  107 struct_decl_list: struct_decl_list ',' struct_decl .

    $default  reduce using rule 107 (struct_decl_list)


State 255

  142 label_stmnt: IDENT ':' statement .

    $default  reduce using rule 142 (label_stmnt)


State 256

  143 label_stmnt: CASE const_expr ':' . statement

    IDENT       shift, and go to state 115
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    BREAK       shift, and go to state 116
    CASE        shift, and go to state 117
    CONTINUE    shift, and go to state 118
    DEFAULT     shift, and go to state 119
    DO          shift, and go to state 120
    FOR         shift, and go to state 121
    GOTO        shift, and go to state 122
    IF          shift, and go to state 123
    RETURN      shift, and go to state 124
    SIZEOF      shift, and go to state 91
    SWITCH      shift, and go to state 125
    WHILE       shift, and go to state 126
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98
    '{'         shift, and go to state 55

    prim_expr       go to state 100
    postfix_expr    go to state 101
    assign_expr     go to state 127
    unary_expr      go to state 103
    cond_expr       go to state 104
    expr            go to state 128
    arith_expr      go to state 105
    cast_expr       go to state 106
    statement       go to state 270
    label_stmnt     go to state 131
    compound_stmnt  go to state 132
    expr_stmnt      go to state 135
    select_stmnt    go to state 136
    iterat_stmnt    go to state 137
    jump_stmnt      go to state 138


State 257

  144 label_stmnt: DEFAULT ':' statement .

    $default  reduce using rule 144 (label_stmnt)


State 258

  157 iterat_stmnt: DO statement WHILE . '(' expr ')' ';'

    '('  shift, and go to state 271


State 259

  159 iterat_stmnt: FOR '(' $@2 . expr_opt ';' expr_opt ';' expr_opt ')' statement

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    $default  reduce using rule 161 (expr_opt)

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 127
    unary_expr    go to state 103
    cond_expr     go to state 104
    expr          go to state 206
    arith_expr    go to state 105
    cast_expr     go to state 106
    expr_opt      go to state 272


State 260

  162 jump_stmnt: GOTO IDENT ';' .

    $default  reduce using rule 162 (jump_stmnt)


State 261

   41 expr: expr . ',' assign_expr
  153 select_stmnt: IF '(' expr . ')' statement
  154             | IF '(' expr . ')' statement ELSE statement

    ','  shift, and go to state 210
    ')'  shift, and go to state 273


State 262

  165 jump_stmnt: RETURN expr_opt ';' .

    $default  reduce using rule 165 (jump_stmnt)


State 263

   41 expr: expr . ',' assign_expr
  155 select_stmnt: SWITCH '(' expr . ')' statement

    ','  shift, and go to state 210
    ')'  shift, and go to state 274


State 264

   41 expr: expr . ',' assign_expr
  156 iterat_stmnt: WHILE '(' expr . ')' statement

    ','  shift, and go to state 210
    ')'  shift, and go to state 275


State 265

   41 expr: expr ',' assign_expr .

    $default  reduce using rule 41 (expr)


State 266

   31 unary_expr: SIZEOF '(' unary_expr ')' .

    $default  reduce using rule 31 (unary_expr)


State 267

   14 postfix_expr: postfix_expr '(' expr ')' .

    $default  reduce using rule 14 (postfix_expr)


State 268

   10 postfix_expr: postfix_expr '[' expr ']' .

    $default  reduce using rule 10 (postfix_expr)


State 269

   39 cond_expr: arith_expr '?' expr ':' . cond_expr

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    unary_expr    go to state 148
    cond_expr     go to state 276
    arith_expr    go to state 105
    cast_expr     go to state 106


State 270

  143 label_stmnt: CASE const_expr ':' statement .

    $default  reduce using rule 143 (label_stmnt)


State 271

  157 iterat_stmnt: DO statement WHILE '(' . expr ')' ';'

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 127
    unary_expr    go to state 103
    cond_expr     go to state 104
    expr          go to state 277
    arith_expr    go to state 105
    cast_expr     go to state 106


State 272

  159 iterat_stmnt: FOR '(' $@2 expr_opt . ';' expr_opt ';' expr_opt ')' statement

    ';'  shift, and go to state 278


State 273

  153 select_stmnt: IF '(' expr ')' . statement
  154             | IF '(' expr ')' . statement ELSE statement

    IDENT       shift, and go to state 115
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    BREAK       shift, and go to state 116
    CASE        shift, and go to state 117
    CONTINUE    shift, and go to state 118
    DEFAULT     shift, and go to state 119
    DO          shift, and go to state 120
    FOR         shift, and go to state 121
    GOTO        shift, and go to state 122
    IF          shift, and go to state 123
    RETURN      shift, and go to state 124
    SIZEOF      shift, and go to state 91
    SWITCH      shift, and go to state 125
    WHILE       shift, and go to state 126
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98
    '{'         shift, and go to state 55

    prim_expr       go to state 100
    postfix_expr    go to state 101
    assign_expr     go to state 127
    unary_expr      go to state 103
    cond_expr       go to state 104
    expr            go to state 128
    arith_expr      go to state 105
    cast_expr       go to state 106
    statement       go to state 279
    label_stmnt     go to state 131
    compound_stmnt  go to state 132
    expr_stmnt      go to state 135
    select_stmnt    go to state 136
    iterat_stmnt    go to state 137
    jump_stmnt      go to state 138


State 274

  155 select_stmnt: SWITCH '(' expr ')' . statement

    IDENT       shift, and go to state 115
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    BREAK       shift, and go to state 116
    CASE        shift, and go to state 117
    CONTINUE    shift, and go to state 118
    DEFAULT     shift, and go to state 119
    DO          shift, and go to state 120
    FOR         shift, and go to state 121
    GOTO        shift, and go to state 122
    IF          shift, and go to state 123
    RETURN      shift, and go to state 124
    SIZEOF      shift, and go to state 91
    SWITCH      shift, and go to state 125
    WHILE       shift, and go to state 126
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98
    '{'         shift, and go to state 55

    prim_expr       go to state 100
    postfix_expr    go to state 101
    assign_expr     go to state 127
    unary_expr      go to state 103
    cond_expr       go to state 104
    expr            go to state 128
    arith_expr      go to state 105
    cast_expr       go to state 106
    statement       go to state 280
    label_stmnt     go to state 131
    compound_stmnt  go to state 132
    expr_stmnt      go to state 135
    select_stmnt    go to state 136
    iterat_stmnt    go to state 137
    jump_stmnt      go to state 138


State 275

  156 iterat_stmnt: WHILE '(' expr ')' . statement

    IDENT       shift, and go to state 115
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    BREAK       shift, and go to state 116
    CASE        shift, and go to state 117
    CONTINUE    shift, and go to state 118
    DEFAULT     shift, and go to state 119
    DO          shift, and go to state 120
    FOR         shift, and go to state 121
    GOTO        shift, and go to state 122
    IF          shift, and go to state 123
    RETURN      shift, and go to state 124
    SIZEOF      shift, and go to state 91
    SWITCH      shift, and go to state 125
    WHILE       shift, and go to state 126
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98
    '{'         shift, and go to state 55

    prim_expr       go to state 100
    postfix_expr    go to state 101
    assign_expr     go to state 127
    unary_expr      go to state 103
    cond_expr       go to state 104
    expr            go to state 128
    arith_expr      go to state 105
    cast_expr       go to state 106
    statement       go to state 281
    label_stmnt     go to state 131
    compound_stmnt  go to state 132
    expr_stmnt      go to state 135
    select_stmnt    go to state 136
    iterat_stmnt    go to state 137
    jump_stmnt      go to state 138


State 276

   39 cond_expr: arith_expr '?' expr ':' cond_expr .

    $default  reduce using rule 39 (cond_expr)


State 277

   41 expr: expr . ',' assign_expr
  157 iterat_stmnt: DO statement WHILE '(' expr . ')' ';'

    ','  shift, and go to state 210
    ')'  shift, and go to state 282


State 278

  159 iterat_stmnt: FOR '(' $@2 expr_opt ';' . expr_opt ';' expr_opt ')' statement

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    $default  reduce using rule 161 (expr_opt)

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 127
    unary_expr    go to state 103
    cond_expr     go to state 104
    expr          go to state 206
    arith_expr    go to state 105
    cast_expr     go to state 106
    expr_opt      go to state 283


State 279

  153 select_stmnt: IF '(' expr ')' statement .
  154             | IF '(' expr ')' statement . ELSE statement

    ELSE  shift, and go to state 284

    $default  reduce using rule 153 (select_stmnt)


State 280

  155 select_stmnt: SWITCH '(' expr ')' statement .

    $default  reduce using rule 155 (select_stmnt)


State 281

  156 iterat_stmnt: WHILE '(' expr ')' statement .

    $default  reduce using rule 156 (iterat_stmnt)


State 282

  157 iterat_stmnt: DO statement WHILE '(' expr ')' . ';'

    ';'  shift, and go to state 285


State 283

  159 iterat_stmnt: FOR '(' $@2 expr_opt ';' expr_opt . ';' expr_opt ')' statement

    ';'  shift, and go to state 286


State 284

  154 select_stmnt: IF '(' expr ')' statement ELSE . statement

    IDENT       shift, and go to state 115
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    BREAK       shift, and go to state 116
    CASE        shift, and go to state 117
    CONTINUE    shift, and go to state 118
    DEFAULT     shift, and go to state 119
    DO          shift, and go to state 120
    FOR         shift, and go to state 121
    GOTO        shift, and go to state 122
    IF          shift, and go to state 123
    RETURN      shift, and go to state 124
    SIZEOF      shift, and go to state 91
    SWITCH      shift, and go to state 125
    WHILE       shift, and go to state 126
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98
    '{'         shift, and go to state 55

    prim_expr       go to state 100
    postfix_expr    go to state 101
    assign_expr     go to state 127
    unary_expr      go to state 103
    cond_expr       go to state 104
    expr            go to state 128
    arith_expr      go to state 105
    cast_expr       go to state 106
    statement       go to state 287
    label_stmnt     go to state 131
    compound_stmnt  go to state 132
    expr_stmnt      go to state 135
    select_stmnt    go to state 136
    iterat_stmnt    go to state 137
    jump_stmnt      go to state 138


State 285

  157 iterat_stmnt: DO statement WHILE '(' expr ')' ';' .

    $default  reduce using rule 157 (iterat_stmnt)


State 286

  159 iterat_stmnt: FOR '(' $@2 expr_opt ';' expr_opt ';' . expr_opt ')' statement

    IDENT       shift, and go to state 85
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    SIZEOF      shift, and go to state 91
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98

    $default  reduce using rule 161 (expr_opt)

    prim_expr     go to state 100
    postfix_expr  go to state 101
    assign_expr   go to state 127
    unary_expr    go to state 103
    cond_expr     go to state 104
    expr          go to state 206
    arith_expr    go to state 105
    cast_expr     go to state 106
    expr_opt      go to state 288


State 287

  154 select_stmnt: IF '(' expr ')' statement ELSE statement .

    $default  reduce using rule 154 (select_stmnt)


State 288

  159 iterat_stmnt: FOR '(' $@2 expr_opt ';' expr_opt ';' expr_opt . ')' statement

    ')'  shift, and go to state 289


State 289

  159 iterat_stmnt: FOR '(' $@2 expr_opt ';' expr_opt ';' expr_opt ')' . statement

    IDENT       shift, and go to state 115
    CHARLIT     shift, and go to state 86
    STRING      shift, and go to state 87
    NUMBER      shift, and go to state 88
    PLUSPLUS    shift, and go to state 89
    MINUSMINUS  shift, and go to state 90
    BREAK       shift, and go to state 116
    CASE        shift, and go to state 117
    CONTINUE    shift, and go to state 118
    DEFAULT     shift, and go to state 119
    DO          shift, and go to state 120
    FOR         shift, and go to state 121
    GOTO        shift, and go to state 122
    IF          shift, and go to state 123
    RETURN      shift, and go to state 124
    SIZEOF      shift, and go to state 91
    SWITCH      shift, and go to state 125
    WHILE       shift, and go to state 126
    '&'         shift, and go to state 92
    '+'         shift, and go to state 93
    '-'         shift, and go to state 94
    '*'         shift, and go to state 95
    '~'         shift, and go to state 96
    '!'         shift, and go to state 97
    '('         shift, and go to state 98
    '{'         shift, and go to state 55

    prim_expr       go to state 100
    postfix_expr    go to state 101
    assign_expr     go to state 127
    unary_expr      go to state 103
    cond_expr       go to state 104
    expr            go to state 128
    arith_expr      go to state 105
    cast_expr       go to state 106
    statement       go to state 290
    label_stmnt     go to state 131
    compound_stmnt  go to state 132
    expr_stmnt      go to state 135
    select_stmnt    go to state 136
    iterat_stmnt    go to state 137
    jump_stmnt      go to state 138


State 290

  159 iterat_stmnt: FOR '(' $@2 expr_opt ';' expr_opt ';' expr_opt ')' statement .

    $default  reduce using rule 159 (iterat_stmnt)
